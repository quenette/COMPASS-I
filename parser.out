Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> translation_unit_or_empty
Rule 1     abstract_declarator_opt -> empty
Rule 2     abstract_declarator_opt -> abstract_declarator
Rule 3     assignment_expression_opt -> empty
Rule 4     assignment_expression_opt -> assignment_expression
Rule 5     block_item_list_opt -> empty
Rule 6     block_item_list_opt -> block_item_list
Rule 7     declaration_list_opt -> empty
Rule 8     declaration_list_opt -> declaration_list
Rule 9     declaration_specifiers_opt -> empty
Rule 10    declaration_specifiers_opt -> declaration_specifiers
Rule 11    designation_opt -> empty
Rule 12    designation_opt -> designation
Rule 13    expression_opt -> empty
Rule 14    expression_opt -> expression
Rule 15    identifier_list_opt -> empty
Rule 16    identifier_list_opt -> identifier_list
Rule 17    init_declarator_list_opt -> empty
Rule 18    init_declarator_list_opt -> init_declarator_list
Rule 19    parameter_type_list_opt -> empty
Rule 20    parameter_type_list_opt -> parameter_type_list
Rule 21    specifier_qualifier_list_opt -> empty
Rule 22    specifier_qualifier_list_opt -> specifier_qualifier_list
Rule 23    struct_declarator_list_opt -> empty
Rule 24    struct_declarator_list_opt -> struct_declarator_list
Rule 25    type_qualifier_list_opt -> empty
Rule 26    type_qualifier_list_opt -> type_qualifier_list
Rule 27    motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 28    motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 29    motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 30    motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 31    motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 32    motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 33    motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 34    motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 35    motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 36    motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 37    motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 38    motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 39    motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 40    motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 41    motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 42    motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 43    motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 44    motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 45    motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 46    motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 47    motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 48    motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 49    motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
Rule 50    motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 51    motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
Rule 52    motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 53    motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
Rule 54    motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 55    motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
Rule 56    motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 57    motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
Rule 58    motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 59    motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
Rule 60    motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 61    motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
Rule 62    motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
Rule 63    pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
Rule 64    pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
Rule 65    pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN
Rule 66    pointcut_keyword -> POINTCUT LPAREN ID RPAREN
Rule 67    translation_unit_or_empty -> translation_unit
Rule 68    translation_unit_or_empty -> empty
Rule 69    pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
Rule 70    pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
Rule 71    pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN
Rule 72    pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN
Rule 73    translation_unit -> external_declaration
Rule 74    translation_unit -> translation_unit external_declaration
Rule 75    pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
Rule 76    pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
Rule 77    pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN
Rule 78    pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN
Rule 79    external_declaration -> function_definition
Rule 80    external_declaration -> declaration
Rule 81    pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
Rule 82    pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
Rule 83    pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
Rule 84    pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN
Rule 85    external_declaration -> pp_directive
Rule 86    external_declaration -> SEMI
Rule 87    pp_directive -> PPHASH
Rule 88    pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
Rule 89    pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
Rule 90    pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN
Rule 91    pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN
Rule 92    function_definition -> declarator declaration_list_opt compound_statement
Rule 93    pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
Rule 94    pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
Rule 95    pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN
Rule 96    pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN
Rule 97    function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement
Rule 98    statement -> labeled_statement
Rule 99    statement -> expression_statement
Rule 100   statement -> compound_statement
Rule 101   statement -> selection_statement
Rule 102   statement -> iteration_statement
Rule 103   statement -> jump_statement
Rule 104   pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
Rule 105   pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
Rule 106   pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN
Rule 107   pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN
Rule 108   decl_body -> declaration_specifiers init_declarator_list_opt
Rule 109   statement -> motion_append_after_call_keyword
Rule 110   statement -> motion_append_before_call_keyword
Rule 111   statement -> motion_append_around_call_keyword
Rule 112   statement -> motion_prepend_after_call_keyword
Rule 113   statement -> motion_prepend_before_call_keyword
Rule 114   statement -> motion_prepend_around_call_keyword
Rule 115   statement -> motion_alwaysfirst_after_call_keyword
Rule 116   statement -> motion_alwaysfirst_before_call_keyword
Rule 117   statement -> motion_alwaysfirst_around_call_keyword
Rule 118   statement -> motion_alwayslast_after_call_keyword
Rule 119   statement -> motion_alwayslast_before_call_keyword
Rule 120   statement -> motion_alwayslast_around_call_keyword
Rule 121   statement -> motion_append_advice_after_call_keyword
Rule 122   statement -> motion_append_advice_before_call_keyword
Rule 123   statement -> motion_append_advice_around_call_keyword
Rule 124   statement -> motion_prepend_advice_after_call_keyword
Rule 125   statement -> motion_prepend_advice_before_call_keyword
Rule 126   statement -> motion_prepend_advice_around_call_keyword
Rule 127   unary_expression -> pointcut_keyword
Rule 128   unary_expression -> pointcut_add_keyword
Rule 129   unary_expression -> pointcut_sub_keyword
Rule 130   unary_expression -> pointcut_first_keyword
Rule 131   unary_expression -> pointcut_last_keyword
Rule 132   unary_expression -> pointcut_min_keyword
Rule 133   unary_expression -> pointcut_max_keyword
Rule 134   declaration -> decl_body SEMI
Rule 135   declaration_list -> declaration
Rule 136   declaration_list -> declaration_list declaration
Rule 137   declaration_specifiers -> type_qualifier declaration_specifiers_opt
Rule 138   declaration_specifiers -> type_specifier declaration_specifiers_opt
Rule 139   declaration_specifiers -> storage_class_specifier declaration_specifiers_opt
Rule 140   declaration_specifiers -> function_specifier declaration_specifiers_opt
Rule 141   storage_class_specifier -> AUTO
Rule 142   storage_class_specifier -> REGISTER
Rule 143   storage_class_specifier -> STATIC
Rule 144   storage_class_specifier -> EXTERN
Rule 145   storage_class_specifier -> TYPEDEF
Rule 146   function_specifier -> INLINE
Rule 147   type_specifier -> VOID
Rule 148   type_specifier -> _BOOL
Rule 149   type_specifier -> CHAR
Rule 150   type_specifier -> SHORT
Rule 151   type_specifier -> INT
Rule 152   type_specifier -> LONG
Rule 153   type_specifier -> FLOAT
Rule 154   type_specifier -> DOUBLE
Rule 155   type_specifier -> _COMPLEX
Rule 156   type_specifier -> SIGNED
Rule 157   type_specifier -> UNSIGNED
Rule 158   type_specifier -> typedef_name
Rule 159   type_specifier -> enum_specifier
Rule 160   type_specifier -> struct_or_union_specifier
Rule 161   type_qualifier -> CONST
Rule 162   type_qualifier -> RESTRICT
Rule 163   type_qualifier -> VOLATILE
Rule 164   init_declarator_list -> init_declarator
Rule 165   init_declarator_list -> init_declarator_list COMMA init_declarator
Rule 166   init_declarator -> declarator
Rule 167   init_declarator -> declarator EQUALS initializer
Rule 168   specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt
Rule 169   specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
Rule 170   struct_or_union_specifier -> struct_or_union ID
Rule 171   struct_or_union_specifier -> struct_or_union TYPEID
Rule 172   struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close
Rule 173   struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close
Rule 174   struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close
Rule 175   struct_or_union -> STRUCT
Rule 176   struct_or_union -> UNION
Rule 177   struct_declaration_list -> struct_declaration
Rule 178   struct_declaration_list -> struct_declaration_list struct_declaration
Rule 179   struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI
Rule 180   struct_declarator_list -> struct_declarator
Rule 181   struct_declarator_list -> struct_declarator_list COMMA struct_declarator
Rule 182   struct_declarator -> declarator
Rule 183   struct_declarator -> declarator COLON constant_expression
Rule 184   struct_declarator -> COLON constant_expression
Rule 185   enum_specifier -> ENUM ID
Rule 186   enum_specifier -> ENUM TYPEID
Rule 187   enum_specifier -> ENUM brace_open enumerator_list brace_close
Rule 188   enum_specifier -> ENUM ID brace_open enumerator_list brace_close
Rule 189   enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close
Rule 190   enumerator_list -> enumerator
Rule 191   enumerator_list -> enumerator_list COMMA
Rule 192   enumerator_list -> enumerator_list COMMA enumerator
Rule 193   enumerator -> ID
Rule 194   enumerator -> ID EQUALS constant_expression
Rule 195   declarator -> direct_declarator
Rule 196   declarator -> pointer direct_declarator
Rule 197   direct_declarator -> ID
Rule 198   direct_declarator -> LPAREN declarator RPAREN
Rule 199   direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET
Rule 200   direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET
Rule 201   direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN
Rule 202   direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN
Rule 203   pointer -> TIMES type_qualifier_list_opt
Rule 204   pointer -> TIMES type_qualifier_list_opt pointer
Rule 205   type_qualifier_list -> type_qualifier
Rule 206   type_qualifier_list -> type_qualifier_list type_qualifier
Rule 207   parameter_type_list -> parameter_list
Rule 208   parameter_type_list -> parameter_list COMMA ELLIPSIS
Rule 209   parameter_list -> parameter_declaration
Rule 210   parameter_list -> parameter_list COMMA parameter_declaration
Rule 211   parameter_declaration -> declaration_specifiers declarator
Rule 212   parameter_declaration -> declaration_specifiers abstract_declarator_opt
Rule 213   identifier_list -> identifier
Rule 214   identifier_list -> identifier_list COMMA identifier
Rule 215   initializer -> assignment_expression
Rule 216   initializer -> brace_open initializer_list brace_close
Rule 217   initializer -> brace_open initializer_list COMMA brace_close
Rule 218   initializer_list -> designation_opt initializer
Rule 219   initializer_list -> initializer_list COMMA designation_opt initializer
Rule 220   designation -> designator_list EQUALS
Rule 221   designator_list -> designator
Rule 222   designator_list -> designator_list designator
Rule 223   designator -> LBRACKET constant_expression RBRACKET
Rule 224   designator -> PERIOD identifier
Rule 225   type_name -> specifier_qualifier_list abstract_declarator_opt
Rule 226   abstract_declarator -> pointer
Rule 227   abstract_declarator -> pointer direct_abstract_declarator
Rule 228   abstract_declarator -> direct_abstract_declarator
Rule 229   direct_abstract_declarator -> LPAREN abstract_declarator RPAREN
Rule 230   direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET
Rule 231   direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET
Rule 232   direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET
Rule 233   direct_abstract_declarator -> LBRACKET TIMES RBRACKET
Rule 234   direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
Rule 235   direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN
Rule 236   block_item -> declaration
Rule 237   block_item -> statement
Rule 238   block_item_list -> block_item
Rule 239   block_item_list -> block_item_list block_item
Rule 240   compound_statement -> brace_open block_item_list_opt brace_close
Rule 241   labeled_statement -> ID COLON statement
Rule 242   labeled_statement -> CASE constant_expression COLON statement
Rule 243   labeled_statement -> DEFAULT COLON statement
Rule 244   selection_statement -> IF LPAREN expression RPAREN statement
Rule 245   selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 246   selection_statement -> SWITCH LPAREN expression RPAREN statement
Rule 247   iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 248   iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI
Rule 249   iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
Rule 250   iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
Rule 251   jump_statement -> GOTO ID SEMI
Rule 252   jump_statement -> BREAK SEMI
Rule 253   jump_statement -> CONTINUE SEMI
Rule 254   jump_statement -> RETURN expression SEMI
Rule 255   jump_statement -> RETURN SEMI
Rule 256   expression_statement -> expression_opt SEMI
Rule 257   expression -> assignment_expression
Rule 258   expression -> expression COMMA assignment_expression
Rule 259   typedef_name -> TYPEID
Rule 260   assignment_expression -> conditional_expression
Rule 261   assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 262   assignment_operator -> EQUALS
Rule 263   assignment_operator -> XOREQUAL
Rule 264   assignment_operator -> TIMESEQUAL
Rule 265   assignment_operator -> DIVEQUAL
Rule 266   assignment_operator -> MODEQUAL
Rule 267   assignment_operator -> PLUSEQUAL
Rule 268   assignment_operator -> MINUSEQUAL
Rule 269   assignment_operator -> LSHIFTEQUAL
Rule 270   assignment_operator -> RSHIFTEQUAL
Rule 271   assignment_operator -> ANDEQUAL
Rule 272   assignment_operator -> OREQUAL
Rule 273   constant_expression -> conditional_expression
Rule 274   conditional_expression -> binary_expression
Rule 275   conditional_expression -> binary_expression CONDOP expression COLON conditional_expression
Rule 276   binary_expression -> cast_expression
Rule 277   binary_expression -> binary_expression TIMES binary_expression
Rule 278   binary_expression -> binary_expression DIVIDE binary_expression
Rule 279   binary_expression -> binary_expression MOD binary_expression
Rule 280   binary_expression -> binary_expression PLUS binary_expression
Rule 281   binary_expression -> binary_expression MINUS binary_expression
Rule 282   binary_expression -> binary_expression RSHIFT binary_expression
Rule 283   binary_expression -> binary_expression LSHIFT binary_expression
Rule 284   binary_expression -> binary_expression LT binary_expression
Rule 285   binary_expression -> binary_expression LE binary_expression
Rule 286   binary_expression -> binary_expression GE binary_expression
Rule 287   binary_expression -> binary_expression GT binary_expression
Rule 288   binary_expression -> binary_expression EQ binary_expression
Rule 289   binary_expression -> binary_expression NE binary_expression
Rule 290   binary_expression -> binary_expression AND binary_expression
Rule 291   binary_expression -> binary_expression OR binary_expression
Rule 292   binary_expression -> binary_expression XOR binary_expression
Rule 293   binary_expression -> binary_expression LAND binary_expression
Rule 294   binary_expression -> binary_expression LOR binary_expression
Rule 295   cast_expression -> unary_expression
Rule 296   cast_expression -> LPAREN type_name RPAREN cast_expression
Rule 297   unary_expression -> postfix_expression
Rule 298   unary_expression -> PLUSPLUS unary_expression
Rule 299   unary_expression -> MINUSMINUS unary_expression
Rule 300   unary_expression -> unary_operator cast_expression
Rule 301   unary_expression -> SIZEOF unary_expression
Rule 302   unary_expression -> SIZEOF LPAREN type_name RPAREN
Rule 303   unary_operator -> AND
Rule 304   unary_operator -> TIMES
Rule 305   unary_operator -> PLUS
Rule 306   unary_operator -> MINUS
Rule 307   unary_operator -> NOT
Rule 308   unary_operator -> LNOT
Rule 309   postfix_expression -> primary_expression
Rule 310   postfix_expression -> postfix_expression LBRACKET expression RBRACKET
Rule 311   postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN
Rule 312   postfix_expression -> postfix_expression LPAREN RPAREN
Rule 313   postfix_expression -> postfix_expression PERIOD identifier
Rule 314   postfix_expression -> postfix_expression ARROW identifier
Rule 315   postfix_expression -> postfix_expression PLUSPLUS
Rule 316   postfix_expression -> postfix_expression MINUSMINUS
Rule 317   postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close
Rule 318   postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
Rule 319   primary_expression -> identifier
Rule 320   primary_expression -> constant
Rule 321   primary_expression -> unified_string_literal
Rule 322   primary_expression -> unified_wstring_literal
Rule 323   primary_expression -> LPAREN expression RPAREN
Rule 324   argument_expression_list -> assignment_expression
Rule 325   argument_expression_list -> argument_expression_list COMMA assignment_expression
Rule 326   identifier -> ID
Rule 327   constant -> INT_CONST_DEC
Rule 328   constant -> INT_CONST_OCT
Rule 329   constant -> INT_CONST_HEX
Rule 330   constant -> FLOAT_CONST
Rule 331   constant -> HEX_FLOAT_CONST
Rule 332   constant -> CHAR_CONST
Rule 333   constant -> WCHAR_CONST
Rule 334   unified_string_literal -> STRING_LITERAL
Rule 335   unified_string_literal -> unified_string_literal STRING_LITERAL
Rule 336   unified_wstring_literal -> WSTRING_LITERAL
Rule 337   unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL
Rule 338   brace_open -> LBRACE
Rule 339   brace_close -> RBRACE
Rule 340   empty -> <empty>

Terminals, with rules where they appear

AND                  : 290 303
ANDEQUAL             : 271
ARROW                : 314
AUTO                 : 141
BREAK                : 252
CASE                 : 242
CHAR                 : 149
CHAR_CONST           : 332
COLON                : 183 184 241 242 243 275
COMMA                : 27 28 28 28 29 30 30 30 31 32 32 32 33 34 34 34 35 36 36 36 37 38 38 38 39 40 40 40 41 42 42 42 43 44 44 44 45 46 46 46 47 48 48 48 49 50 50 50 51 51 52 52 52 52 53 53 54 54 54 54 55 55 56 56 56 56 57 57 58 58 58 58 59 59 60 60 60 60 61 61 62 62 62 62 64 65 70 71 76 77 82 83 89 90 94 95 105 106 165 181 191 192 208 210 214 217 219 258 318 325
CONDOP               : 275
CONST                : 161
CONTINUE             : 253
DEFAULT              : 243
DIVEQUAL             : 265
DIVIDE               : 278
DO                   : 248
DOUBLE               : 154
ELLIPSIS             : 208
ELSE                 : 245
ENUM                 : 185 186 187 188 189
EQ                   : 288
EQUALS               : 167 194 220 262
EXTERN               : 144
FLOAT                : 153
FLOAT_CONST          : 330
FOR                  : 249 250
GE                   : 286
GOTO                 : 251
GT                   : 287
HEX_FLOAT_CONST      : 331
ID                   : 27 27 28 28 28 28 29 29 30 30 30 30 31 31 32 32 32 32 33 33 34 34 34 34 35 35 36 36 36 36 37 37 38 38 38 38 39 39 40 40 40 40 41 41 42 42 42 42 43 43 44 44 44 44 45 45 46 46 46 46 47 47 48 48 48 48 49 49 50 50 50 50 51 51 51 52 52 52 52 52 53 53 53 54 54 54 54 54 55 55 55 56 56 56 56 56 57 57 57 58 58 58 58 58 59 59 59 60 60 60 60 60 61 61 61 62 62 62 62 62 63 64 64 65 65 66 69 70 70 71 71 72 75 76 76 77 77 78 81 82 82 83 83 84 88 89 89 90 90 91 93 94 94 95 95 96 104 105 105 106 106 107 170 173 185 188 193 194 197 241 251 326
IF                   : 244 245
INLINE               : 146
INT                  : 151
INT_CONST_DEC        : 327
INT_CONST_HEX        : 329
INT_CONST_OCT        : 328
LAND                 : 293
LBRACE               : 338
LBRACKET             : 199 200 223 230 231 232 233 310
LE                   : 285
LNOT                 : 308
LONG                 : 152
LOR                  : 294
LPAREN               : 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 70 71 72 75 76 77 78 81 82 83 84 88 89 90 91 93 94 95 96 104 105 106 107 198 201 202 229 234 235 244 245 246 247 248 249 250 296 302 311 312 317 318 323
LSHIFT               : 283
LSHIFTEQUAL          : 269
LT                   : 284
MINUS                : 281 306
MINUSEQUAL           : 268
MINUSMINUS           : 299 316
MOD                  : 279
MODEQUAL             : 266
MOTION_ALWAYSFIRST_AFTER_CALL : 39 40
MOTION_ALWAYSFIRST_AROUND_CALL : 43 44
MOTION_ALWAYSFIRST_BEFORE_CALL : 41 42
MOTION_ALWAYSLAST_AFTER_CALL : 45 46
MOTION_ALWAYSLAST_AROUND_CALL : 49 50
MOTION_ALWAYSLAST_BEFORE_CALL : 47 48
MOTION_APPEND_ADVICE_AFTER_CALL : 51 52
MOTION_APPEND_ADVICE_AROUND_CALL : 55 56
MOTION_APPEND_ADVICE_BEFORE_CALL : 53 54
MOTION_APPEND_AFTER_CALL : 27 28
MOTION_APPEND_AROUND_CALL : 31 32
MOTION_APPEND_BEFORE_CALL : 29 30
MOTION_PREPEND_ADVICE_AFTER_CALL : 57 58
MOTION_PREPEND_ADVICE_AROUND_CALL : 61 62
MOTION_PREPEND_ADVICE_BEFORE_CALL : 59 60
MOTION_PREPEND_AFTER_CALL : 33 34
MOTION_PREPEND_AROUND_CALL : 37 38
MOTION_PREPEND_BEFORE_CALL : 35 36
NE                   : 289
NOT                  : 307
OR                   : 291
OREQUAL              : 272
PERIOD               : 224 313
PLUS                 : 280 305
PLUSEQUAL            : 267
PLUSPLUS             : 298 315
POINTCUT             : 63 64 65 66
POINTCUT_ADD         : 69 70 71 72
POINTCUT_FIRST       : 81 82 83 84
POINTCUT_LAST        : 88 89 90 91
POINTCUT_MAX         : 104 105 106 107
POINTCUT_MIN         : 93 94 95 96
POINTCUT_SUB         : 75 76 77 78
PPHASH               : 87
RBRACE               : 339
RBRACKET             : 199 200 223 230 231 232 233 310
REGISTER             : 142
RESTRICT             : 162
RETURN               : 254 255
RPAREN               : 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 69 70 71 72 75 76 77 78 81 82 83 84 88 89 90 91 93 94 95 96 104 105 106 107 198 201 202 229 234 235 244 245 246 247 248 249 250 296 302 311 312 317 318 323
RSHIFT               : 282
RSHIFTEQUAL          : 270
SEMI                 : 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 75 76 81 82 86 88 89 93 94 104 105 134 179 248 249 249 250 251 252 253 254 255 256
SHORT                : 150
SIGNED               : 156
SIZEOF               : 301 302
STATIC               : 143
STRING_LITERAL       : 334 335
STRUCT               : 175
SWITCH               : 246
TIMES                : 200 203 204 232 233 277 304
TIMESEQUAL           : 264
TYPEDEF              : 145
TYPEID               : 171 174 186 189 259
UNION                : 176
UNSIGNED             : 157
VOID                 : 147
VOLATILE             : 163
WCHAR_CONST          : 333
WHILE                : 247 248
WSTRING_LITERAL      : 336 337
XOR                  : 292
XOREQUAL             : 263
_BOOL                : 148
_COMPLEX             : 155
error                : 

Nonterminals, with rules where they appear

abstract_declarator  : 2 229
abstract_declarator_opt : 212 225
argument_expression_list : 63 64 69 70 75 76 81 82 88 89 93 94 104 105 311 325
assignment_expression : 4 215 257 258 261 324 325
assignment_expression_opt : 199 230 231
assignment_operator  : 261
binary_expression    : 274 275 277 277 278 278 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294
block_item           : 238 239
block_item_list      : 6 239
block_item_list_opt  : 240
brace_close          : 172 173 174 187 188 189 216 217 240 317 318
brace_open           : 172 173 174 187 188 189 216 217 240 317 318
cast_expression      : 276 296 300
compound_statement   : 92 97 100
conditional_expression : 260 273 275
constant             : 320
constant_expression  : 183 184 194 223 242
decl_body            : 134
declaration          : 80 135 136 236 250
declaration_list     : 8 136
declaration_list_opt : 92 97
declaration_specifiers : 10 97 108 211 212
declaration_specifiers_opt : 137 138 139 140
declarator           : 92 97 166 167 182 183 198 211
designation          : 12
designation_opt      : 218 219
designator           : 221 222
designator_list      : 220 222
direct_abstract_declarator : 227 228 230 232 234
direct_declarator    : 195 196 199 200 201 202
empty                : 1 3 5 7 9 11 13 15 17 19 21 23 25 68
enum_specifier       : 159
enumerator           : 190 192
enumerator_list      : 187 188 189 191 192
expression           : 14 244 245 246 247 248 254 258 275 310 323
expression_opt       : 249 249 249 250 250 256
expression_statement : 99
external_declaration : 73 74
function_definition  : 79
function_specifier   : 140
identifier           : 213 214 224 313 314 319
identifier_list      : 16 214
identifier_list_opt  : 202
init_declarator      : 164 165
init_declarator_list : 18 165
init_declarator_list_opt : 108
initializer          : 167 218 219
initializer_list     : 216 217 219 317 318
iteration_statement  : 102
jump_statement       : 103
labeled_statement    : 98
motion_alwaysfirst_after_call_keyword : 115
motion_alwaysfirst_around_call_keyword : 117
motion_alwaysfirst_before_call_keyword : 116
motion_alwayslast_after_call_keyword : 118
motion_alwayslast_around_call_keyword : 120
motion_alwayslast_before_call_keyword : 119
motion_append_advice_after_call_keyword : 121
motion_append_advice_around_call_keyword : 123
motion_append_advice_before_call_keyword : 122
motion_append_after_call_keyword : 109
motion_append_around_call_keyword : 111
motion_append_before_call_keyword : 110
motion_prepend_advice_after_call_keyword : 124
motion_prepend_advice_around_call_keyword : 126
motion_prepend_advice_before_call_keyword : 125
motion_prepend_after_call_keyword : 112
motion_prepend_around_call_keyword : 114
motion_prepend_before_call_keyword : 113
parameter_declaration : 209 210
parameter_list       : 207 208 210
parameter_type_list  : 20 201
parameter_type_list_opt : 234 235
pointcut_add_keyword : 128
pointcut_first_keyword : 130
pointcut_keyword     : 127
pointcut_last_keyword : 131
pointcut_max_keyword : 133
pointcut_min_keyword : 132
pointcut_sub_keyword : 129
pointer              : 196 204 226 227
postfix_expression   : 297 310 311 312 313 314 315 316
pp_directive         : 85
primary_expression   : 309
selection_statement  : 101
specifier_qualifier_list : 22 179 225
specifier_qualifier_list_opt : 168 169
statement            : 237 241 242 243 244 245 245 246 247 248 249 250
storage_class_specifier : 139
struct_declaration   : 177 178
struct_declaration_list : 172 173 174 178
struct_declarator    : 180 181
struct_declarator_list : 24 181
struct_declarator_list_opt : 179
struct_or_union      : 170 171 172 173 174
struct_or_union_specifier : 160
translation_unit     : 67 74
translation_unit_or_empty : 0
type_name            : 296 302 317 318
type_qualifier       : 137 168 205 206
type_qualifier_list  : 26 206
type_qualifier_list_opt : 203 204
type_specifier       : 138 169
typedef_name         : 158
unary_expression     : 261 295 298 299 301
unary_operator       : 300
unified_string_literal : 321 335
unified_wstring_literal : 322 337

Parsing method: LALR

state 0

    (0) S' -> . translation_unit_or_empty
    (67) translation_unit_or_empty -> . translation_unit
    (68) translation_unit_or_empty -> . empty
    (73) translation_unit -> . external_declaration
    (74) translation_unit -> . translation_unit external_declaration
    (340) empty -> .
    (79) external_declaration -> . function_definition
    (80) external_declaration -> . declaration
    (85) external_declaration -> . pp_directive
    (86) external_declaration -> . SEMI
    (92) function_definition -> . declarator declaration_list_opt compound_statement
    (97) function_definition -> . declaration_specifiers declarator declaration_list_opt compound_statement
    (134) declaration -> . decl_body SEMI
    (87) pp_directive -> . PPHASH
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    $end            reduce using rule 340 (empty -> .)
    SEMI            shift and go to state 14
    PPHASH          shift and go to state 37
    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 5
    pp_directive                   shift and go to state 10
    external_declaration           shift and go to state 11
    type_specifier                 shift and go to state 13
    pointer                        shift and go to state 15
    translation_unit               shift and go to state 21
    struct_or_union                shift and go to state 7
    direct_declarator              shift and go to state 24
    declaration_specifiers         shift and go to state 29
    declaration                    shift and go to state 30
    typedef_name                   shift and go to state 28
    function_definition            shift and go to state 35
    translation_unit_or_empty      shift and go to state 38
    enum_specifier                 shift and go to state 45
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    empty                          shift and go to state 47
    declarator                     shift and go to state 48

state 1

    (139) declaration_specifiers -> storage_class_specifier . declaration_specifiers_opt
    (9) declaration_specifiers_opt -> . empty
    (10) declaration_specifiers_opt -> . declaration_specifiers
    (340) empty -> .
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    ID              reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    SEMI            reduce using rule 340 (empty -> .)
    LBRACKET        reduce using rule 340 (empty -> .)
    COMMA           reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    declaration_specifiers         shift and go to state 52
    declaration_specifiers_opt     shift and go to state 50
    typedef_name                   shift and go to state 28
    empty                          shift and go to state 51

state 2

    (150) type_specifier -> SHORT .

    CONST           reduce using rule 150 (type_specifier -> SHORT .)
    RESTRICT        reduce using rule 150 (type_specifier -> SHORT .)
    VOLATILE        reduce using rule 150 (type_specifier -> SHORT .)
    VOID            reduce using rule 150 (type_specifier -> SHORT .)
    _BOOL           reduce using rule 150 (type_specifier -> SHORT .)
    CHAR            reduce using rule 150 (type_specifier -> SHORT .)
    SHORT           reduce using rule 150 (type_specifier -> SHORT .)
    INT             reduce using rule 150 (type_specifier -> SHORT .)
    LONG            reduce using rule 150 (type_specifier -> SHORT .)
    FLOAT           reduce using rule 150 (type_specifier -> SHORT .)
    DOUBLE          reduce using rule 150 (type_specifier -> SHORT .)
    _COMPLEX        reduce using rule 150 (type_specifier -> SHORT .)
    SIGNED          reduce using rule 150 (type_specifier -> SHORT .)
    UNSIGNED        reduce using rule 150 (type_specifier -> SHORT .)
    AUTO            reduce using rule 150 (type_specifier -> SHORT .)
    REGISTER        reduce using rule 150 (type_specifier -> SHORT .)
    STATIC          reduce using rule 150 (type_specifier -> SHORT .)
    EXTERN          reduce using rule 150 (type_specifier -> SHORT .)
    TYPEDEF         reduce using rule 150 (type_specifier -> SHORT .)
    INLINE          reduce using rule 150 (type_specifier -> SHORT .)
    TYPEID          reduce using rule 150 (type_specifier -> SHORT .)
    ENUM            reduce using rule 150 (type_specifier -> SHORT .)
    STRUCT          reduce using rule 150 (type_specifier -> SHORT .)
    UNION           reduce using rule 150 (type_specifier -> SHORT .)
    ID              reduce using rule 150 (type_specifier -> SHORT .)
    LPAREN          reduce using rule 150 (type_specifier -> SHORT .)
    TIMES           reduce using rule 150 (type_specifier -> SHORT .)
    SEMI            reduce using rule 150 (type_specifier -> SHORT .)
    LBRACKET        reduce using rule 150 (type_specifier -> SHORT .)
    COMMA           reduce using rule 150 (type_specifier -> SHORT .)
    RPAREN          reduce using rule 150 (type_specifier -> SHORT .)
    COLON           reduce using rule 150 (type_specifier -> SHORT .)


state 3

    (161) type_qualifier -> CONST .

    CONST           reduce using rule 161 (type_qualifier -> CONST .)
    RESTRICT        reduce using rule 161 (type_qualifier -> CONST .)
    VOLATILE        reduce using rule 161 (type_qualifier -> CONST .)
    VOID            reduce using rule 161 (type_qualifier -> CONST .)
    _BOOL           reduce using rule 161 (type_qualifier -> CONST .)
    CHAR            reduce using rule 161 (type_qualifier -> CONST .)
    SHORT           reduce using rule 161 (type_qualifier -> CONST .)
    INT             reduce using rule 161 (type_qualifier -> CONST .)
    LONG            reduce using rule 161 (type_qualifier -> CONST .)
    FLOAT           reduce using rule 161 (type_qualifier -> CONST .)
    DOUBLE          reduce using rule 161 (type_qualifier -> CONST .)
    _COMPLEX        reduce using rule 161 (type_qualifier -> CONST .)
    SIGNED          reduce using rule 161 (type_qualifier -> CONST .)
    UNSIGNED        reduce using rule 161 (type_qualifier -> CONST .)
    AUTO            reduce using rule 161 (type_qualifier -> CONST .)
    REGISTER        reduce using rule 161 (type_qualifier -> CONST .)
    STATIC          reduce using rule 161 (type_qualifier -> CONST .)
    EXTERN          reduce using rule 161 (type_qualifier -> CONST .)
    TYPEDEF         reduce using rule 161 (type_qualifier -> CONST .)
    INLINE          reduce using rule 161 (type_qualifier -> CONST .)
    TYPEID          reduce using rule 161 (type_qualifier -> CONST .)
    ENUM            reduce using rule 161 (type_qualifier -> CONST .)
    STRUCT          reduce using rule 161 (type_qualifier -> CONST .)
    UNION           reduce using rule 161 (type_qualifier -> CONST .)
    ID              reduce using rule 161 (type_qualifier -> CONST .)
    LPAREN          reduce using rule 161 (type_qualifier -> CONST .)
    TIMES           reduce using rule 161 (type_qualifier -> CONST .)
    SEMI            reduce using rule 161 (type_qualifier -> CONST .)
    LBRACKET        reduce using rule 161 (type_qualifier -> CONST .)
    COMMA           reduce using rule 161 (type_qualifier -> CONST .)
    RPAREN          reduce using rule 161 (type_qualifier -> CONST .)
    COLON           reduce using rule 161 (type_qualifier -> CONST .)


state 4

    (198) direct_declarator -> LPAREN . declarator RPAREN
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer

    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27

    direct_declarator              shift and go to state 24
    declarator                     shift and go to state 53
    pointer                        shift and go to state 15

state 5

    (160) type_specifier -> struct_or_union_specifier .

    CONST           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    RESTRICT        reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    VOLATILE        reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    VOID            reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    _BOOL           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    CHAR            reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    SHORT           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    INT             reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    LONG            reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    FLOAT           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    DOUBLE          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    _COMPLEX        reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    SIGNED          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    UNSIGNED        reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    AUTO            reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    REGISTER        reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    STATIC          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    EXTERN          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    TYPEDEF         reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    INLINE          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    TYPEID          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    ENUM            reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    STRUCT          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    UNION           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    ID              reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    LPAREN          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    TIMES           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    SEMI            reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    LBRACKET        reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    COMMA           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    RPAREN          reduce using rule 160 (type_specifier -> struct_or_union_specifier .)
    COLON           reduce using rule 160 (type_specifier -> struct_or_union_specifier .)


state 6

    (147) type_specifier -> VOID .

    CONST           reduce using rule 147 (type_specifier -> VOID .)
    RESTRICT        reduce using rule 147 (type_specifier -> VOID .)
    VOLATILE        reduce using rule 147 (type_specifier -> VOID .)
    VOID            reduce using rule 147 (type_specifier -> VOID .)
    _BOOL           reduce using rule 147 (type_specifier -> VOID .)
    CHAR            reduce using rule 147 (type_specifier -> VOID .)
    SHORT           reduce using rule 147 (type_specifier -> VOID .)
    INT             reduce using rule 147 (type_specifier -> VOID .)
    LONG            reduce using rule 147 (type_specifier -> VOID .)
    FLOAT           reduce using rule 147 (type_specifier -> VOID .)
    DOUBLE          reduce using rule 147 (type_specifier -> VOID .)
    _COMPLEX        reduce using rule 147 (type_specifier -> VOID .)
    SIGNED          reduce using rule 147 (type_specifier -> VOID .)
    UNSIGNED        reduce using rule 147 (type_specifier -> VOID .)
    AUTO            reduce using rule 147 (type_specifier -> VOID .)
    REGISTER        reduce using rule 147 (type_specifier -> VOID .)
    STATIC          reduce using rule 147 (type_specifier -> VOID .)
    EXTERN          reduce using rule 147 (type_specifier -> VOID .)
    TYPEDEF         reduce using rule 147 (type_specifier -> VOID .)
    INLINE          reduce using rule 147 (type_specifier -> VOID .)
    TYPEID          reduce using rule 147 (type_specifier -> VOID .)
    ENUM            reduce using rule 147 (type_specifier -> VOID .)
    STRUCT          reduce using rule 147 (type_specifier -> VOID .)
    UNION           reduce using rule 147 (type_specifier -> VOID .)
    ID              reduce using rule 147 (type_specifier -> VOID .)
    LPAREN          reduce using rule 147 (type_specifier -> VOID .)
    TIMES           reduce using rule 147 (type_specifier -> VOID .)
    SEMI            reduce using rule 147 (type_specifier -> VOID .)
    LBRACKET        reduce using rule 147 (type_specifier -> VOID .)
    COMMA           reduce using rule 147 (type_specifier -> VOID .)
    RPAREN          reduce using rule 147 (type_specifier -> VOID .)
    COLON           reduce using rule 147 (type_specifier -> VOID .)


state 7

    (170) struct_or_union_specifier -> struct_or_union . ID
    (171) struct_or_union_specifier -> struct_or_union . TYPEID
    (172) struct_or_union_specifier -> struct_or_union . brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> struct_or_union . ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> struct_or_union . TYPEID brace_open struct_declaration_list brace_close
    (338) brace_open -> . LBRACE

    ID              shift and go to state 56
    TYPEID          shift and go to state 54
    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 57

state 8

    (143) storage_class_specifier -> STATIC .

    CONST           reduce using rule 143 (storage_class_specifier -> STATIC .)
    RESTRICT        reduce using rule 143 (storage_class_specifier -> STATIC .)
    VOLATILE        reduce using rule 143 (storage_class_specifier -> STATIC .)
    VOID            reduce using rule 143 (storage_class_specifier -> STATIC .)
    _BOOL           reduce using rule 143 (storage_class_specifier -> STATIC .)
    CHAR            reduce using rule 143 (storage_class_specifier -> STATIC .)
    SHORT           reduce using rule 143 (storage_class_specifier -> STATIC .)
    INT             reduce using rule 143 (storage_class_specifier -> STATIC .)
    LONG            reduce using rule 143 (storage_class_specifier -> STATIC .)
    FLOAT           reduce using rule 143 (storage_class_specifier -> STATIC .)
    DOUBLE          reduce using rule 143 (storage_class_specifier -> STATIC .)
    _COMPLEX        reduce using rule 143 (storage_class_specifier -> STATIC .)
    SIGNED          reduce using rule 143 (storage_class_specifier -> STATIC .)
    UNSIGNED        reduce using rule 143 (storage_class_specifier -> STATIC .)
    AUTO            reduce using rule 143 (storage_class_specifier -> STATIC .)
    REGISTER        reduce using rule 143 (storage_class_specifier -> STATIC .)
    STATIC          reduce using rule 143 (storage_class_specifier -> STATIC .)
    EXTERN          reduce using rule 143 (storage_class_specifier -> STATIC .)
    TYPEDEF         reduce using rule 143 (storage_class_specifier -> STATIC .)
    INLINE          reduce using rule 143 (storage_class_specifier -> STATIC .)
    TYPEID          reduce using rule 143 (storage_class_specifier -> STATIC .)
    ENUM            reduce using rule 143 (storage_class_specifier -> STATIC .)
    STRUCT          reduce using rule 143 (storage_class_specifier -> STATIC .)
    UNION           reduce using rule 143 (storage_class_specifier -> STATIC .)
    ID              reduce using rule 143 (storage_class_specifier -> STATIC .)
    LPAREN          reduce using rule 143 (storage_class_specifier -> STATIC .)
    TIMES           reduce using rule 143 (storage_class_specifier -> STATIC .)
    SEMI            reduce using rule 143 (storage_class_specifier -> STATIC .)
    LBRACKET        reduce using rule 143 (storage_class_specifier -> STATIC .)
    COMMA           reduce using rule 143 (storage_class_specifier -> STATIC .)
    RPAREN          reduce using rule 143 (storage_class_specifier -> STATIC .)


state 9

    (144) storage_class_specifier -> EXTERN .

    CONST           reduce using rule 144 (storage_class_specifier -> EXTERN .)
    RESTRICT        reduce using rule 144 (storage_class_specifier -> EXTERN .)
    VOLATILE        reduce using rule 144 (storage_class_specifier -> EXTERN .)
    VOID            reduce using rule 144 (storage_class_specifier -> EXTERN .)
    _BOOL           reduce using rule 144 (storage_class_specifier -> EXTERN .)
    CHAR            reduce using rule 144 (storage_class_specifier -> EXTERN .)
    SHORT           reduce using rule 144 (storage_class_specifier -> EXTERN .)
    INT             reduce using rule 144 (storage_class_specifier -> EXTERN .)
    LONG            reduce using rule 144 (storage_class_specifier -> EXTERN .)
    FLOAT           reduce using rule 144 (storage_class_specifier -> EXTERN .)
    DOUBLE          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    _COMPLEX        reduce using rule 144 (storage_class_specifier -> EXTERN .)
    SIGNED          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    UNSIGNED        reduce using rule 144 (storage_class_specifier -> EXTERN .)
    AUTO            reduce using rule 144 (storage_class_specifier -> EXTERN .)
    REGISTER        reduce using rule 144 (storage_class_specifier -> EXTERN .)
    STATIC          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    EXTERN          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    TYPEDEF         reduce using rule 144 (storage_class_specifier -> EXTERN .)
    INLINE          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    TYPEID          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    ENUM            reduce using rule 144 (storage_class_specifier -> EXTERN .)
    STRUCT          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    UNION           reduce using rule 144 (storage_class_specifier -> EXTERN .)
    ID              reduce using rule 144 (storage_class_specifier -> EXTERN .)
    LPAREN          reduce using rule 144 (storage_class_specifier -> EXTERN .)
    TIMES           reduce using rule 144 (storage_class_specifier -> EXTERN .)
    SEMI            reduce using rule 144 (storage_class_specifier -> EXTERN .)
    LBRACKET        reduce using rule 144 (storage_class_specifier -> EXTERN .)
    COMMA           reduce using rule 144 (storage_class_specifier -> EXTERN .)
    RPAREN          reduce using rule 144 (storage_class_specifier -> EXTERN .)


state 10

    (85) external_declaration -> pp_directive .

    SEMI            reduce using rule 85 (external_declaration -> pp_directive .)
    PPHASH          reduce using rule 85 (external_declaration -> pp_directive .)
    ID              reduce using rule 85 (external_declaration -> pp_directive .)
    LPAREN          reduce using rule 85 (external_declaration -> pp_directive .)
    TIMES           reduce using rule 85 (external_declaration -> pp_directive .)
    CONST           reduce using rule 85 (external_declaration -> pp_directive .)
    RESTRICT        reduce using rule 85 (external_declaration -> pp_directive .)
    VOLATILE        reduce using rule 85 (external_declaration -> pp_directive .)
    VOID            reduce using rule 85 (external_declaration -> pp_directive .)
    _BOOL           reduce using rule 85 (external_declaration -> pp_directive .)
    CHAR            reduce using rule 85 (external_declaration -> pp_directive .)
    SHORT           reduce using rule 85 (external_declaration -> pp_directive .)
    INT             reduce using rule 85 (external_declaration -> pp_directive .)
    LONG            reduce using rule 85 (external_declaration -> pp_directive .)
    FLOAT           reduce using rule 85 (external_declaration -> pp_directive .)
    DOUBLE          reduce using rule 85 (external_declaration -> pp_directive .)
    _COMPLEX        reduce using rule 85 (external_declaration -> pp_directive .)
    SIGNED          reduce using rule 85 (external_declaration -> pp_directive .)
    UNSIGNED        reduce using rule 85 (external_declaration -> pp_directive .)
    AUTO            reduce using rule 85 (external_declaration -> pp_directive .)
    REGISTER        reduce using rule 85 (external_declaration -> pp_directive .)
    STATIC          reduce using rule 85 (external_declaration -> pp_directive .)
    EXTERN          reduce using rule 85 (external_declaration -> pp_directive .)
    TYPEDEF         reduce using rule 85 (external_declaration -> pp_directive .)
    INLINE          reduce using rule 85 (external_declaration -> pp_directive .)
    TYPEID          reduce using rule 85 (external_declaration -> pp_directive .)
    ENUM            reduce using rule 85 (external_declaration -> pp_directive .)
    STRUCT          reduce using rule 85 (external_declaration -> pp_directive .)
    UNION           reduce using rule 85 (external_declaration -> pp_directive .)
    $end            reduce using rule 85 (external_declaration -> pp_directive .)


state 11

    (73) translation_unit -> external_declaration .

    SEMI            reduce using rule 73 (translation_unit -> external_declaration .)
    PPHASH          reduce using rule 73 (translation_unit -> external_declaration .)
    ID              reduce using rule 73 (translation_unit -> external_declaration .)
    LPAREN          reduce using rule 73 (translation_unit -> external_declaration .)
    TIMES           reduce using rule 73 (translation_unit -> external_declaration .)
    CONST           reduce using rule 73 (translation_unit -> external_declaration .)
    RESTRICT        reduce using rule 73 (translation_unit -> external_declaration .)
    VOLATILE        reduce using rule 73 (translation_unit -> external_declaration .)
    VOID            reduce using rule 73 (translation_unit -> external_declaration .)
    _BOOL           reduce using rule 73 (translation_unit -> external_declaration .)
    CHAR            reduce using rule 73 (translation_unit -> external_declaration .)
    SHORT           reduce using rule 73 (translation_unit -> external_declaration .)
    INT             reduce using rule 73 (translation_unit -> external_declaration .)
    LONG            reduce using rule 73 (translation_unit -> external_declaration .)
    FLOAT           reduce using rule 73 (translation_unit -> external_declaration .)
    DOUBLE          reduce using rule 73 (translation_unit -> external_declaration .)
    _COMPLEX        reduce using rule 73 (translation_unit -> external_declaration .)
    SIGNED          reduce using rule 73 (translation_unit -> external_declaration .)
    UNSIGNED        reduce using rule 73 (translation_unit -> external_declaration .)
    AUTO            reduce using rule 73 (translation_unit -> external_declaration .)
    REGISTER        reduce using rule 73 (translation_unit -> external_declaration .)
    STATIC          reduce using rule 73 (translation_unit -> external_declaration .)
    EXTERN          reduce using rule 73 (translation_unit -> external_declaration .)
    TYPEDEF         reduce using rule 73 (translation_unit -> external_declaration .)
    INLINE          reduce using rule 73 (translation_unit -> external_declaration .)
    TYPEID          reduce using rule 73 (translation_unit -> external_declaration .)
    ENUM            reduce using rule 73 (translation_unit -> external_declaration .)
    STRUCT          reduce using rule 73 (translation_unit -> external_declaration .)
    UNION           reduce using rule 73 (translation_unit -> external_declaration .)
    $end            reduce using rule 73 (translation_unit -> external_declaration .)


state 12

    (148) type_specifier -> _BOOL .

    CONST           reduce using rule 148 (type_specifier -> _BOOL .)
    RESTRICT        reduce using rule 148 (type_specifier -> _BOOL .)
    VOLATILE        reduce using rule 148 (type_specifier -> _BOOL .)
    VOID            reduce using rule 148 (type_specifier -> _BOOL .)
    _BOOL           reduce using rule 148 (type_specifier -> _BOOL .)
    CHAR            reduce using rule 148 (type_specifier -> _BOOL .)
    SHORT           reduce using rule 148 (type_specifier -> _BOOL .)
    INT             reduce using rule 148 (type_specifier -> _BOOL .)
    LONG            reduce using rule 148 (type_specifier -> _BOOL .)
    FLOAT           reduce using rule 148 (type_specifier -> _BOOL .)
    DOUBLE          reduce using rule 148 (type_specifier -> _BOOL .)
    _COMPLEX        reduce using rule 148 (type_specifier -> _BOOL .)
    SIGNED          reduce using rule 148 (type_specifier -> _BOOL .)
    UNSIGNED        reduce using rule 148 (type_specifier -> _BOOL .)
    AUTO            reduce using rule 148 (type_specifier -> _BOOL .)
    REGISTER        reduce using rule 148 (type_specifier -> _BOOL .)
    STATIC          reduce using rule 148 (type_specifier -> _BOOL .)
    EXTERN          reduce using rule 148 (type_specifier -> _BOOL .)
    TYPEDEF         reduce using rule 148 (type_specifier -> _BOOL .)
    INLINE          reduce using rule 148 (type_specifier -> _BOOL .)
    TYPEID          reduce using rule 148 (type_specifier -> _BOOL .)
    ENUM            reduce using rule 148 (type_specifier -> _BOOL .)
    STRUCT          reduce using rule 148 (type_specifier -> _BOOL .)
    UNION           reduce using rule 148 (type_specifier -> _BOOL .)
    ID              reduce using rule 148 (type_specifier -> _BOOL .)
    LPAREN          reduce using rule 148 (type_specifier -> _BOOL .)
    TIMES           reduce using rule 148 (type_specifier -> _BOOL .)
    SEMI            reduce using rule 148 (type_specifier -> _BOOL .)
    LBRACKET        reduce using rule 148 (type_specifier -> _BOOL .)
    COMMA           reduce using rule 148 (type_specifier -> _BOOL .)
    RPAREN          reduce using rule 148 (type_specifier -> _BOOL .)
    COLON           reduce using rule 148 (type_specifier -> _BOOL .)


state 13

    (138) declaration_specifiers -> type_specifier . declaration_specifiers_opt
    (9) declaration_specifiers_opt -> . empty
    (10) declaration_specifiers_opt -> . declaration_specifiers
    (340) empty -> .
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    ID              reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    SEMI            reduce using rule 340 (empty -> .)
    LBRACKET        reduce using rule 340 (empty -> .)
    COMMA           reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    declaration_specifiers         shift and go to state 52
    declaration_specifiers_opt     shift and go to state 58
    typedef_name                   shift and go to state 28
    empty                          shift and go to state 51

state 14

    (86) external_declaration -> SEMI .

    SEMI            reduce using rule 86 (external_declaration -> SEMI .)
    PPHASH          reduce using rule 86 (external_declaration -> SEMI .)
    ID              reduce using rule 86 (external_declaration -> SEMI .)
    LPAREN          reduce using rule 86 (external_declaration -> SEMI .)
    TIMES           reduce using rule 86 (external_declaration -> SEMI .)
    CONST           reduce using rule 86 (external_declaration -> SEMI .)
    RESTRICT        reduce using rule 86 (external_declaration -> SEMI .)
    VOLATILE        reduce using rule 86 (external_declaration -> SEMI .)
    VOID            reduce using rule 86 (external_declaration -> SEMI .)
    _BOOL           reduce using rule 86 (external_declaration -> SEMI .)
    CHAR            reduce using rule 86 (external_declaration -> SEMI .)
    SHORT           reduce using rule 86 (external_declaration -> SEMI .)
    INT             reduce using rule 86 (external_declaration -> SEMI .)
    LONG            reduce using rule 86 (external_declaration -> SEMI .)
    FLOAT           reduce using rule 86 (external_declaration -> SEMI .)
    DOUBLE          reduce using rule 86 (external_declaration -> SEMI .)
    _COMPLEX        reduce using rule 86 (external_declaration -> SEMI .)
    SIGNED          reduce using rule 86 (external_declaration -> SEMI .)
    UNSIGNED        reduce using rule 86 (external_declaration -> SEMI .)
    AUTO            reduce using rule 86 (external_declaration -> SEMI .)
    REGISTER        reduce using rule 86 (external_declaration -> SEMI .)
    STATIC          reduce using rule 86 (external_declaration -> SEMI .)
    EXTERN          reduce using rule 86 (external_declaration -> SEMI .)
    TYPEDEF         reduce using rule 86 (external_declaration -> SEMI .)
    INLINE          reduce using rule 86 (external_declaration -> SEMI .)
    TYPEID          reduce using rule 86 (external_declaration -> SEMI .)
    ENUM            reduce using rule 86 (external_declaration -> SEMI .)
    STRUCT          reduce using rule 86 (external_declaration -> SEMI .)
    UNION           reduce using rule 86 (external_declaration -> SEMI .)
    $end            reduce using rule 86 (external_declaration -> SEMI .)


state 15

    (196) declarator -> pointer . direct_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN

    ID              shift and go to state 32
    LPAREN          shift and go to state 4

    direct_declarator              shift and go to state 59

state 16

    (142) storage_class_specifier -> REGISTER .

    CONST           reduce using rule 142 (storage_class_specifier -> REGISTER .)
    RESTRICT        reduce using rule 142 (storage_class_specifier -> REGISTER .)
    VOLATILE        reduce using rule 142 (storage_class_specifier -> REGISTER .)
    VOID            reduce using rule 142 (storage_class_specifier -> REGISTER .)
    _BOOL           reduce using rule 142 (storage_class_specifier -> REGISTER .)
    CHAR            reduce using rule 142 (storage_class_specifier -> REGISTER .)
    SHORT           reduce using rule 142 (storage_class_specifier -> REGISTER .)
    INT             reduce using rule 142 (storage_class_specifier -> REGISTER .)
    LONG            reduce using rule 142 (storage_class_specifier -> REGISTER .)
    FLOAT           reduce using rule 142 (storage_class_specifier -> REGISTER .)
    DOUBLE          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    _COMPLEX        reduce using rule 142 (storage_class_specifier -> REGISTER .)
    SIGNED          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    UNSIGNED        reduce using rule 142 (storage_class_specifier -> REGISTER .)
    AUTO            reduce using rule 142 (storage_class_specifier -> REGISTER .)
    REGISTER        reduce using rule 142 (storage_class_specifier -> REGISTER .)
    STATIC          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    EXTERN          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    TYPEDEF         reduce using rule 142 (storage_class_specifier -> REGISTER .)
    INLINE          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    TYPEID          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    ENUM            reduce using rule 142 (storage_class_specifier -> REGISTER .)
    STRUCT          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    UNION           reduce using rule 142 (storage_class_specifier -> REGISTER .)
    ID              reduce using rule 142 (storage_class_specifier -> REGISTER .)
    LPAREN          reduce using rule 142 (storage_class_specifier -> REGISTER .)
    TIMES           reduce using rule 142 (storage_class_specifier -> REGISTER .)
    SEMI            reduce using rule 142 (storage_class_specifier -> REGISTER .)
    LBRACKET        reduce using rule 142 (storage_class_specifier -> REGISTER .)
    COMMA           reduce using rule 142 (storage_class_specifier -> REGISTER .)
    RPAREN          reduce using rule 142 (storage_class_specifier -> REGISTER .)


state 17

    (157) type_specifier -> UNSIGNED .

    CONST           reduce using rule 157 (type_specifier -> UNSIGNED .)
    RESTRICT        reduce using rule 157 (type_specifier -> UNSIGNED .)
    VOLATILE        reduce using rule 157 (type_specifier -> UNSIGNED .)
    VOID            reduce using rule 157 (type_specifier -> UNSIGNED .)
    _BOOL           reduce using rule 157 (type_specifier -> UNSIGNED .)
    CHAR            reduce using rule 157 (type_specifier -> UNSIGNED .)
    SHORT           reduce using rule 157 (type_specifier -> UNSIGNED .)
    INT             reduce using rule 157 (type_specifier -> UNSIGNED .)
    LONG            reduce using rule 157 (type_specifier -> UNSIGNED .)
    FLOAT           reduce using rule 157 (type_specifier -> UNSIGNED .)
    DOUBLE          reduce using rule 157 (type_specifier -> UNSIGNED .)
    _COMPLEX        reduce using rule 157 (type_specifier -> UNSIGNED .)
    SIGNED          reduce using rule 157 (type_specifier -> UNSIGNED .)
    UNSIGNED        reduce using rule 157 (type_specifier -> UNSIGNED .)
    AUTO            reduce using rule 157 (type_specifier -> UNSIGNED .)
    REGISTER        reduce using rule 157 (type_specifier -> UNSIGNED .)
    STATIC          reduce using rule 157 (type_specifier -> UNSIGNED .)
    EXTERN          reduce using rule 157 (type_specifier -> UNSIGNED .)
    TYPEDEF         reduce using rule 157 (type_specifier -> UNSIGNED .)
    INLINE          reduce using rule 157 (type_specifier -> UNSIGNED .)
    TYPEID          reduce using rule 157 (type_specifier -> UNSIGNED .)
    ENUM            reduce using rule 157 (type_specifier -> UNSIGNED .)
    STRUCT          reduce using rule 157 (type_specifier -> UNSIGNED .)
    UNION           reduce using rule 157 (type_specifier -> UNSIGNED .)
    ID              reduce using rule 157 (type_specifier -> UNSIGNED .)
    LPAREN          reduce using rule 157 (type_specifier -> UNSIGNED .)
    TIMES           reduce using rule 157 (type_specifier -> UNSIGNED .)
    SEMI            reduce using rule 157 (type_specifier -> UNSIGNED .)
    LBRACKET        reduce using rule 157 (type_specifier -> UNSIGNED .)
    COMMA           reduce using rule 157 (type_specifier -> UNSIGNED .)
    RPAREN          reduce using rule 157 (type_specifier -> UNSIGNED .)
    COLON           reduce using rule 157 (type_specifier -> UNSIGNED .)


state 18

    (152) type_specifier -> LONG .

    CONST           reduce using rule 152 (type_specifier -> LONG .)
    RESTRICT        reduce using rule 152 (type_specifier -> LONG .)
    VOLATILE        reduce using rule 152 (type_specifier -> LONG .)
    VOID            reduce using rule 152 (type_specifier -> LONG .)
    _BOOL           reduce using rule 152 (type_specifier -> LONG .)
    CHAR            reduce using rule 152 (type_specifier -> LONG .)
    SHORT           reduce using rule 152 (type_specifier -> LONG .)
    INT             reduce using rule 152 (type_specifier -> LONG .)
    LONG            reduce using rule 152 (type_specifier -> LONG .)
    FLOAT           reduce using rule 152 (type_specifier -> LONG .)
    DOUBLE          reduce using rule 152 (type_specifier -> LONG .)
    _COMPLEX        reduce using rule 152 (type_specifier -> LONG .)
    SIGNED          reduce using rule 152 (type_specifier -> LONG .)
    UNSIGNED        reduce using rule 152 (type_specifier -> LONG .)
    AUTO            reduce using rule 152 (type_specifier -> LONG .)
    REGISTER        reduce using rule 152 (type_specifier -> LONG .)
    STATIC          reduce using rule 152 (type_specifier -> LONG .)
    EXTERN          reduce using rule 152 (type_specifier -> LONG .)
    TYPEDEF         reduce using rule 152 (type_specifier -> LONG .)
    INLINE          reduce using rule 152 (type_specifier -> LONG .)
    TYPEID          reduce using rule 152 (type_specifier -> LONG .)
    ENUM            reduce using rule 152 (type_specifier -> LONG .)
    STRUCT          reduce using rule 152 (type_specifier -> LONG .)
    UNION           reduce using rule 152 (type_specifier -> LONG .)
    ID              reduce using rule 152 (type_specifier -> LONG .)
    LPAREN          reduce using rule 152 (type_specifier -> LONG .)
    TIMES           reduce using rule 152 (type_specifier -> LONG .)
    SEMI            reduce using rule 152 (type_specifier -> LONG .)
    LBRACKET        reduce using rule 152 (type_specifier -> LONG .)
    COMMA           reduce using rule 152 (type_specifier -> LONG .)
    RPAREN          reduce using rule 152 (type_specifier -> LONG .)
    COLON           reduce using rule 152 (type_specifier -> LONG .)


state 19

    (176) struct_or_union -> UNION .

    ID              reduce using rule 176 (struct_or_union -> UNION .)
    TYPEID          reduce using rule 176 (struct_or_union -> UNION .)
    LBRACE          reduce using rule 176 (struct_or_union -> UNION .)


state 20

    (141) storage_class_specifier -> AUTO .

    CONST           reduce using rule 141 (storage_class_specifier -> AUTO .)
    RESTRICT        reduce using rule 141 (storage_class_specifier -> AUTO .)
    VOLATILE        reduce using rule 141 (storage_class_specifier -> AUTO .)
    VOID            reduce using rule 141 (storage_class_specifier -> AUTO .)
    _BOOL           reduce using rule 141 (storage_class_specifier -> AUTO .)
    CHAR            reduce using rule 141 (storage_class_specifier -> AUTO .)
    SHORT           reduce using rule 141 (storage_class_specifier -> AUTO .)
    INT             reduce using rule 141 (storage_class_specifier -> AUTO .)
    LONG            reduce using rule 141 (storage_class_specifier -> AUTO .)
    FLOAT           reduce using rule 141 (storage_class_specifier -> AUTO .)
    DOUBLE          reduce using rule 141 (storage_class_specifier -> AUTO .)
    _COMPLEX        reduce using rule 141 (storage_class_specifier -> AUTO .)
    SIGNED          reduce using rule 141 (storage_class_specifier -> AUTO .)
    UNSIGNED        reduce using rule 141 (storage_class_specifier -> AUTO .)
    AUTO            reduce using rule 141 (storage_class_specifier -> AUTO .)
    REGISTER        reduce using rule 141 (storage_class_specifier -> AUTO .)
    STATIC          reduce using rule 141 (storage_class_specifier -> AUTO .)
    EXTERN          reduce using rule 141 (storage_class_specifier -> AUTO .)
    TYPEDEF         reduce using rule 141 (storage_class_specifier -> AUTO .)
    INLINE          reduce using rule 141 (storage_class_specifier -> AUTO .)
    TYPEID          reduce using rule 141 (storage_class_specifier -> AUTO .)
    ENUM            reduce using rule 141 (storage_class_specifier -> AUTO .)
    STRUCT          reduce using rule 141 (storage_class_specifier -> AUTO .)
    UNION           reduce using rule 141 (storage_class_specifier -> AUTO .)
    ID              reduce using rule 141 (storage_class_specifier -> AUTO .)
    LPAREN          reduce using rule 141 (storage_class_specifier -> AUTO .)
    TIMES           reduce using rule 141 (storage_class_specifier -> AUTO .)
    SEMI            reduce using rule 141 (storage_class_specifier -> AUTO .)
    LBRACKET        reduce using rule 141 (storage_class_specifier -> AUTO .)
    COMMA           reduce using rule 141 (storage_class_specifier -> AUTO .)
    RPAREN          reduce using rule 141 (storage_class_specifier -> AUTO .)


state 21

    (67) translation_unit_or_empty -> translation_unit .
    (74) translation_unit -> translation_unit . external_declaration
    (79) external_declaration -> . function_definition
    (80) external_declaration -> . declaration
    (85) external_declaration -> . pp_directive
    (86) external_declaration -> . SEMI
    (92) function_definition -> . declarator declaration_list_opt compound_statement
    (97) function_definition -> . declaration_specifiers declarator declaration_list_opt compound_statement
    (134) declaration -> . decl_body SEMI
    (87) pp_directive -> . PPHASH
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    $end            reduce using rule 67 (translation_unit_or_empty -> translation_unit .)
    SEMI            shift and go to state 14
    PPHASH          shift and go to state 37
    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 5
    pp_directive                   shift and go to state 10
    external_declaration           shift and go to state 60
    type_specifier                 shift and go to state 13
    pointer                        shift and go to state 15
    struct_or_union                shift and go to state 7
    direct_declarator              shift and go to state 24
    declaration_specifiers         shift and go to state 29
    declaration                    shift and go to state 30
    typedef_name                   shift and go to state 28
    function_definition            shift and go to state 35
    enum_specifier                 shift and go to state 45
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    declarator                     shift and go to state 48

state 22

    (145) storage_class_specifier -> TYPEDEF .

    CONST           reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    RESTRICT        reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    VOLATILE        reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    VOID            reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    _BOOL           reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    CHAR            reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    SHORT           reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    INT             reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    LONG            reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    FLOAT           reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    DOUBLE          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    _COMPLEX        reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    SIGNED          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    UNSIGNED        reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    AUTO            reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    REGISTER        reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    STATIC          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    EXTERN          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    TYPEDEF         reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    INLINE          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    TYPEID          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    ENUM            reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    STRUCT          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    UNION           reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    ID              reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    LPAREN          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    TIMES           reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    SEMI            reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    LBRACKET        reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    COMMA           reduce using rule 145 (storage_class_specifier -> TYPEDEF .)
    RPAREN          reduce using rule 145 (storage_class_specifier -> TYPEDEF .)


state 23

    (259) typedef_name -> TYPEID .

    CONST           reduce using rule 259 (typedef_name -> TYPEID .)
    RESTRICT        reduce using rule 259 (typedef_name -> TYPEID .)
    VOLATILE        reduce using rule 259 (typedef_name -> TYPEID .)
    VOID            reduce using rule 259 (typedef_name -> TYPEID .)
    _BOOL           reduce using rule 259 (typedef_name -> TYPEID .)
    CHAR            reduce using rule 259 (typedef_name -> TYPEID .)
    SHORT           reduce using rule 259 (typedef_name -> TYPEID .)
    INT             reduce using rule 259 (typedef_name -> TYPEID .)
    LONG            reduce using rule 259 (typedef_name -> TYPEID .)
    FLOAT           reduce using rule 259 (typedef_name -> TYPEID .)
    DOUBLE          reduce using rule 259 (typedef_name -> TYPEID .)
    _COMPLEX        reduce using rule 259 (typedef_name -> TYPEID .)
    SIGNED          reduce using rule 259 (typedef_name -> TYPEID .)
    UNSIGNED        reduce using rule 259 (typedef_name -> TYPEID .)
    AUTO            reduce using rule 259 (typedef_name -> TYPEID .)
    REGISTER        reduce using rule 259 (typedef_name -> TYPEID .)
    STATIC          reduce using rule 259 (typedef_name -> TYPEID .)
    EXTERN          reduce using rule 259 (typedef_name -> TYPEID .)
    TYPEDEF         reduce using rule 259 (typedef_name -> TYPEID .)
    INLINE          reduce using rule 259 (typedef_name -> TYPEID .)
    TYPEID          reduce using rule 259 (typedef_name -> TYPEID .)
    ENUM            reduce using rule 259 (typedef_name -> TYPEID .)
    STRUCT          reduce using rule 259 (typedef_name -> TYPEID .)
    UNION           reduce using rule 259 (typedef_name -> TYPEID .)
    ID              reduce using rule 259 (typedef_name -> TYPEID .)
    LPAREN          reduce using rule 259 (typedef_name -> TYPEID .)
    TIMES           reduce using rule 259 (typedef_name -> TYPEID .)
    SEMI            reduce using rule 259 (typedef_name -> TYPEID .)
    LBRACKET        reduce using rule 259 (typedef_name -> TYPEID .)
    COMMA           reduce using rule 259 (typedef_name -> TYPEID .)
    RPAREN          reduce using rule 259 (typedef_name -> TYPEID .)
    COLON           reduce using rule 259 (typedef_name -> TYPEID .)


state 24

    (195) declarator -> direct_declarator .
    (199) direct_declarator -> direct_declarator . LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> direct_declarator . LBRACKET TIMES RBRACKET
    (201) direct_declarator -> direct_declarator . LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> direct_declarator . LPAREN identifier_list_opt RPAREN

    COMMA           reduce using rule 195 (declarator -> direct_declarator .)
    RPAREN          reduce using rule 195 (declarator -> direct_declarator .)
    COLON           reduce using rule 195 (declarator -> direct_declarator .)
    SEMI            reduce using rule 195 (declarator -> direct_declarator .)
    CONST           reduce using rule 195 (declarator -> direct_declarator .)
    RESTRICT        reduce using rule 195 (declarator -> direct_declarator .)
    VOLATILE        reduce using rule 195 (declarator -> direct_declarator .)
    VOID            reduce using rule 195 (declarator -> direct_declarator .)
    _BOOL           reduce using rule 195 (declarator -> direct_declarator .)
    CHAR            reduce using rule 195 (declarator -> direct_declarator .)
    SHORT           reduce using rule 195 (declarator -> direct_declarator .)
    INT             reduce using rule 195 (declarator -> direct_declarator .)
    LONG            reduce using rule 195 (declarator -> direct_declarator .)
    FLOAT           reduce using rule 195 (declarator -> direct_declarator .)
    DOUBLE          reduce using rule 195 (declarator -> direct_declarator .)
    _COMPLEX        reduce using rule 195 (declarator -> direct_declarator .)
    SIGNED          reduce using rule 195 (declarator -> direct_declarator .)
    UNSIGNED        reduce using rule 195 (declarator -> direct_declarator .)
    AUTO            reduce using rule 195 (declarator -> direct_declarator .)
    REGISTER        reduce using rule 195 (declarator -> direct_declarator .)
    STATIC          reduce using rule 195 (declarator -> direct_declarator .)
    EXTERN          reduce using rule 195 (declarator -> direct_declarator .)
    TYPEDEF         reduce using rule 195 (declarator -> direct_declarator .)
    INLINE          reduce using rule 195 (declarator -> direct_declarator .)
    TYPEID          reduce using rule 195 (declarator -> direct_declarator .)
    ENUM            reduce using rule 195 (declarator -> direct_declarator .)
    STRUCT          reduce using rule 195 (declarator -> direct_declarator .)
    UNION           reduce using rule 195 (declarator -> direct_declarator .)
    LBRACE          reduce using rule 195 (declarator -> direct_declarator .)
    EQUALS          reduce using rule 195 (declarator -> direct_declarator .)
    LBRACKET        shift and go to state 61
    LPAREN          shift and go to state 62


state 25

    (185) enum_specifier -> ENUM . ID
    (186) enum_specifier -> ENUM . TYPEID
    (187) enum_specifier -> ENUM . brace_open enumerator_list brace_close
    (188) enum_specifier -> ENUM . ID brace_open enumerator_list brace_close
    (189) enum_specifier -> ENUM . TYPEID brace_open enumerator_list brace_close
    (338) brace_open -> . LBRACE

    ID              shift and go to state 64
    TYPEID          shift and go to state 63
    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 65

state 26

    (155) type_specifier -> _COMPLEX .

    CONST           reduce using rule 155 (type_specifier -> _COMPLEX .)
    RESTRICT        reduce using rule 155 (type_specifier -> _COMPLEX .)
    VOLATILE        reduce using rule 155 (type_specifier -> _COMPLEX .)
    VOID            reduce using rule 155 (type_specifier -> _COMPLEX .)
    _BOOL           reduce using rule 155 (type_specifier -> _COMPLEX .)
    CHAR            reduce using rule 155 (type_specifier -> _COMPLEX .)
    SHORT           reduce using rule 155 (type_specifier -> _COMPLEX .)
    INT             reduce using rule 155 (type_specifier -> _COMPLEX .)
    LONG            reduce using rule 155 (type_specifier -> _COMPLEX .)
    FLOAT           reduce using rule 155 (type_specifier -> _COMPLEX .)
    DOUBLE          reduce using rule 155 (type_specifier -> _COMPLEX .)
    _COMPLEX        reduce using rule 155 (type_specifier -> _COMPLEX .)
    SIGNED          reduce using rule 155 (type_specifier -> _COMPLEX .)
    UNSIGNED        reduce using rule 155 (type_specifier -> _COMPLEX .)
    AUTO            reduce using rule 155 (type_specifier -> _COMPLEX .)
    REGISTER        reduce using rule 155 (type_specifier -> _COMPLEX .)
    STATIC          reduce using rule 155 (type_specifier -> _COMPLEX .)
    EXTERN          reduce using rule 155 (type_specifier -> _COMPLEX .)
    TYPEDEF         reduce using rule 155 (type_specifier -> _COMPLEX .)
    INLINE          reduce using rule 155 (type_specifier -> _COMPLEX .)
    TYPEID          reduce using rule 155 (type_specifier -> _COMPLEX .)
    ENUM            reduce using rule 155 (type_specifier -> _COMPLEX .)
    STRUCT          reduce using rule 155 (type_specifier -> _COMPLEX .)
    UNION           reduce using rule 155 (type_specifier -> _COMPLEX .)
    ID              reduce using rule 155 (type_specifier -> _COMPLEX .)
    LPAREN          reduce using rule 155 (type_specifier -> _COMPLEX .)
    TIMES           reduce using rule 155 (type_specifier -> _COMPLEX .)
    SEMI            reduce using rule 155 (type_specifier -> _COMPLEX .)
    LBRACKET        reduce using rule 155 (type_specifier -> _COMPLEX .)
    COMMA           reduce using rule 155 (type_specifier -> _COMPLEX .)
    RPAREN          reduce using rule 155 (type_specifier -> _COMPLEX .)
    COLON           reduce using rule 155 (type_specifier -> _COMPLEX .)


state 27

    (203) pointer -> TIMES . type_qualifier_list_opt
    (204) pointer -> TIMES . type_qualifier_list_opt pointer
    (25) type_qualifier_list_opt -> . empty
    (26) type_qualifier_list_opt -> . type_qualifier_list
    (340) empty -> .
    (205) type_qualifier_list -> . type_qualifier
    (206) type_qualifier_list -> . type_qualifier_list type_qualifier
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE

    TIMES           reduce using rule 340 (empty -> .)
    ID              reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    LBRACKET        reduce using rule 340 (empty -> .)
    COMMA           reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46

    type_qualifier_list_opt        shift and go to state 67
    type_qualifier_list            shift and go to state 66
    empty                          shift and go to state 69
    type_qualifier                 shift and go to state 68

state 28

    (158) type_specifier -> typedef_name .

    CONST           reduce using rule 158 (type_specifier -> typedef_name .)
    RESTRICT        reduce using rule 158 (type_specifier -> typedef_name .)
    VOLATILE        reduce using rule 158 (type_specifier -> typedef_name .)
    VOID            reduce using rule 158 (type_specifier -> typedef_name .)
    _BOOL           reduce using rule 158 (type_specifier -> typedef_name .)
    CHAR            reduce using rule 158 (type_specifier -> typedef_name .)
    SHORT           reduce using rule 158 (type_specifier -> typedef_name .)
    INT             reduce using rule 158 (type_specifier -> typedef_name .)
    LONG            reduce using rule 158 (type_specifier -> typedef_name .)
    FLOAT           reduce using rule 158 (type_specifier -> typedef_name .)
    DOUBLE          reduce using rule 158 (type_specifier -> typedef_name .)
    _COMPLEX        reduce using rule 158 (type_specifier -> typedef_name .)
    SIGNED          reduce using rule 158 (type_specifier -> typedef_name .)
    UNSIGNED        reduce using rule 158 (type_specifier -> typedef_name .)
    AUTO            reduce using rule 158 (type_specifier -> typedef_name .)
    REGISTER        reduce using rule 158 (type_specifier -> typedef_name .)
    STATIC          reduce using rule 158 (type_specifier -> typedef_name .)
    EXTERN          reduce using rule 158 (type_specifier -> typedef_name .)
    TYPEDEF         reduce using rule 158 (type_specifier -> typedef_name .)
    INLINE          reduce using rule 158 (type_specifier -> typedef_name .)
    TYPEID          reduce using rule 158 (type_specifier -> typedef_name .)
    ENUM            reduce using rule 158 (type_specifier -> typedef_name .)
    STRUCT          reduce using rule 158 (type_specifier -> typedef_name .)
    UNION           reduce using rule 158 (type_specifier -> typedef_name .)
    ID              reduce using rule 158 (type_specifier -> typedef_name .)
    LPAREN          reduce using rule 158 (type_specifier -> typedef_name .)
    TIMES           reduce using rule 158 (type_specifier -> typedef_name .)
    SEMI            reduce using rule 158 (type_specifier -> typedef_name .)
    LBRACKET        reduce using rule 158 (type_specifier -> typedef_name .)
    COMMA           reduce using rule 158 (type_specifier -> typedef_name .)
    RPAREN          reduce using rule 158 (type_specifier -> typedef_name .)
    COLON           reduce using rule 158 (type_specifier -> typedef_name .)


state 29

    (97) function_definition -> declaration_specifiers . declarator declaration_list_opt compound_statement
    (108) decl_body -> declaration_specifiers . init_declarator_list_opt
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (17) init_declarator_list_opt -> . empty
    (18) init_declarator_list_opt -> . init_declarator_list
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer
    (340) empty -> .
    (164) init_declarator_list -> . init_declarator
    (165) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (166) init_declarator -> . declarator
    (167) init_declarator -> . declarator EQUALS initializer

    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27
    SEMI            reduce using rule 340 (empty -> .)

    direct_declarator              shift and go to state 24
    init_declarator                shift and go to state 74
    init_declarator_list           shift and go to state 70
    init_declarator_list_opt       shift and go to state 71
    declarator                     shift and go to state 73
    pointer                        shift and go to state 15
    empty                          shift and go to state 72

state 30

    (80) external_declaration -> declaration .

    SEMI            reduce using rule 80 (external_declaration -> declaration .)
    PPHASH          reduce using rule 80 (external_declaration -> declaration .)
    ID              reduce using rule 80 (external_declaration -> declaration .)
    LPAREN          reduce using rule 80 (external_declaration -> declaration .)
    TIMES           reduce using rule 80 (external_declaration -> declaration .)
    CONST           reduce using rule 80 (external_declaration -> declaration .)
    RESTRICT        reduce using rule 80 (external_declaration -> declaration .)
    VOLATILE        reduce using rule 80 (external_declaration -> declaration .)
    VOID            reduce using rule 80 (external_declaration -> declaration .)
    _BOOL           reduce using rule 80 (external_declaration -> declaration .)
    CHAR            reduce using rule 80 (external_declaration -> declaration .)
    SHORT           reduce using rule 80 (external_declaration -> declaration .)
    INT             reduce using rule 80 (external_declaration -> declaration .)
    LONG            reduce using rule 80 (external_declaration -> declaration .)
    FLOAT           reduce using rule 80 (external_declaration -> declaration .)
    DOUBLE          reduce using rule 80 (external_declaration -> declaration .)
    _COMPLEX        reduce using rule 80 (external_declaration -> declaration .)
    SIGNED          reduce using rule 80 (external_declaration -> declaration .)
    UNSIGNED        reduce using rule 80 (external_declaration -> declaration .)
    AUTO            reduce using rule 80 (external_declaration -> declaration .)
    REGISTER        reduce using rule 80 (external_declaration -> declaration .)
    STATIC          reduce using rule 80 (external_declaration -> declaration .)
    EXTERN          reduce using rule 80 (external_declaration -> declaration .)
    TYPEDEF         reduce using rule 80 (external_declaration -> declaration .)
    INLINE          reduce using rule 80 (external_declaration -> declaration .)
    TYPEID          reduce using rule 80 (external_declaration -> declaration .)
    ENUM            reduce using rule 80 (external_declaration -> declaration .)
    STRUCT          reduce using rule 80 (external_declaration -> declaration .)
    UNION           reduce using rule 80 (external_declaration -> declaration .)
    $end            reduce using rule 80 (external_declaration -> declaration .)


state 31

    (162) type_qualifier -> RESTRICT .

    CONST           reduce using rule 162 (type_qualifier -> RESTRICT .)
    RESTRICT        reduce using rule 162 (type_qualifier -> RESTRICT .)
    VOLATILE        reduce using rule 162 (type_qualifier -> RESTRICT .)
    VOID            reduce using rule 162 (type_qualifier -> RESTRICT .)
    _BOOL           reduce using rule 162 (type_qualifier -> RESTRICT .)
    CHAR            reduce using rule 162 (type_qualifier -> RESTRICT .)
    SHORT           reduce using rule 162 (type_qualifier -> RESTRICT .)
    INT             reduce using rule 162 (type_qualifier -> RESTRICT .)
    LONG            reduce using rule 162 (type_qualifier -> RESTRICT .)
    FLOAT           reduce using rule 162 (type_qualifier -> RESTRICT .)
    DOUBLE          reduce using rule 162 (type_qualifier -> RESTRICT .)
    _COMPLEX        reduce using rule 162 (type_qualifier -> RESTRICT .)
    SIGNED          reduce using rule 162 (type_qualifier -> RESTRICT .)
    UNSIGNED        reduce using rule 162 (type_qualifier -> RESTRICT .)
    AUTO            reduce using rule 162 (type_qualifier -> RESTRICT .)
    REGISTER        reduce using rule 162 (type_qualifier -> RESTRICT .)
    STATIC          reduce using rule 162 (type_qualifier -> RESTRICT .)
    EXTERN          reduce using rule 162 (type_qualifier -> RESTRICT .)
    TYPEDEF         reduce using rule 162 (type_qualifier -> RESTRICT .)
    INLINE          reduce using rule 162 (type_qualifier -> RESTRICT .)
    TYPEID          reduce using rule 162 (type_qualifier -> RESTRICT .)
    ENUM            reduce using rule 162 (type_qualifier -> RESTRICT .)
    STRUCT          reduce using rule 162 (type_qualifier -> RESTRICT .)
    UNION           reduce using rule 162 (type_qualifier -> RESTRICT .)
    ID              reduce using rule 162 (type_qualifier -> RESTRICT .)
    LPAREN          reduce using rule 162 (type_qualifier -> RESTRICT .)
    TIMES           reduce using rule 162 (type_qualifier -> RESTRICT .)
    SEMI            reduce using rule 162 (type_qualifier -> RESTRICT .)
    LBRACKET        reduce using rule 162 (type_qualifier -> RESTRICT .)
    COMMA           reduce using rule 162 (type_qualifier -> RESTRICT .)
    RPAREN          reduce using rule 162 (type_qualifier -> RESTRICT .)
    COLON           reduce using rule 162 (type_qualifier -> RESTRICT .)


state 32

    (197) direct_declarator -> ID .

    LBRACKET        reduce using rule 197 (direct_declarator -> ID .)
    LPAREN          reduce using rule 197 (direct_declarator -> ID .)
    EQUALS          reduce using rule 197 (direct_declarator -> ID .)
    CONST           reduce using rule 197 (direct_declarator -> ID .)
    RESTRICT        reduce using rule 197 (direct_declarator -> ID .)
    VOLATILE        reduce using rule 197 (direct_declarator -> ID .)
    VOID            reduce using rule 197 (direct_declarator -> ID .)
    _BOOL           reduce using rule 197 (direct_declarator -> ID .)
    CHAR            reduce using rule 197 (direct_declarator -> ID .)
    SHORT           reduce using rule 197 (direct_declarator -> ID .)
    INT             reduce using rule 197 (direct_declarator -> ID .)
    LONG            reduce using rule 197 (direct_declarator -> ID .)
    FLOAT           reduce using rule 197 (direct_declarator -> ID .)
    DOUBLE          reduce using rule 197 (direct_declarator -> ID .)
    _COMPLEX        reduce using rule 197 (direct_declarator -> ID .)
    SIGNED          reduce using rule 197 (direct_declarator -> ID .)
    UNSIGNED        reduce using rule 197 (direct_declarator -> ID .)
    AUTO            reduce using rule 197 (direct_declarator -> ID .)
    REGISTER        reduce using rule 197 (direct_declarator -> ID .)
    STATIC          reduce using rule 197 (direct_declarator -> ID .)
    EXTERN          reduce using rule 197 (direct_declarator -> ID .)
    TYPEDEF         reduce using rule 197 (direct_declarator -> ID .)
    INLINE          reduce using rule 197 (direct_declarator -> ID .)
    TYPEID          reduce using rule 197 (direct_declarator -> ID .)
    ENUM            reduce using rule 197 (direct_declarator -> ID .)
    STRUCT          reduce using rule 197 (direct_declarator -> ID .)
    UNION           reduce using rule 197 (direct_declarator -> ID .)
    LBRACE          reduce using rule 197 (direct_declarator -> ID .)
    COMMA           reduce using rule 197 (direct_declarator -> ID .)
    SEMI            reduce using rule 197 (direct_declarator -> ID .)
    RPAREN          reduce using rule 197 (direct_declarator -> ID .)
    COLON           reduce using rule 197 (direct_declarator -> ID .)


state 33

    (175) struct_or_union -> STRUCT .

    ID              reduce using rule 175 (struct_or_union -> STRUCT .)
    TYPEID          reduce using rule 175 (struct_or_union -> STRUCT .)
    LBRACE          reduce using rule 175 (struct_or_union -> STRUCT .)


state 34

    (153) type_specifier -> FLOAT .

    CONST           reduce using rule 153 (type_specifier -> FLOAT .)
    RESTRICT        reduce using rule 153 (type_specifier -> FLOAT .)
    VOLATILE        reduce using rule 153 (type_specifier -> FLOAT .)
    VOID            reduce using rule 153 (type_specifier -> FLOAT .)
    _BOOL           reduce using rule 153 (type_specifier -> FLOAT .)
    CHAR            reduce using rule 153 (type_specifier -> FLOAT .)
    SHORT           reduce using rule 153 (type_specifier -> FLOAT .)
    INT             reduce using rule 153 (type_specifier -> FLOAT .)
    LONG            reduce using rule 153 (type_specifier -> FLOAT .)
    FLOAT           reduce using rule 153 (type_specifier -> FLOAT .)
    DOUBLE          reduce using rule 153 (type_specifier -> FLOAT .)
    _COMPLEX        reduce using rule 153 (type_specifier -> FLOAT .)
    SIGNED          reduce using rule 153 (type_specifier -> FLOAT .)
    UNSIGNED        reduce using rule 153 (type_specifier -> FLOAT .)
    AUTO            reduce using rule 153 (type_specifier -> FLOAT .)
    REGISTER        reduce using rule 153 (type_specifier -> FLOAT .)
    STATIC          reduce using rule 153 (type_specifier -> FLOAT .)
    EXTERN          reduce using rule 153 (type_specifier -> FLOAT .)
    TYPEDEF         reduce using rule 153 (type_specifier -> FLOAT .)
    INLINE          reduce using rule 153 (type_specifier -> FLOAT .)
    TYPEID          reduce using rule 153 (type_specifier -> FLOAT .)
    ENUM            reduce using rule 153 (type_specifier -> FLOAT .)
    STRUCT          reduce using rule 153 (type_specifier -> FLOAT .)
    UNION           reduce using rule 153 (type_specifier -> FLOAT .)
    ID              reduce using rule 153 (type_specifier -> FLOAT .)
    LPAREN          reduce using rule 153 (type_specifier -> FLOAT .)
    TIMES           reduce using rule 153 (type_specifier -> FLOAT .)
    SEMI            reduce using rule 153 (type_specifier -> FLOAT .)
    LBRACKET        reduce using rule 153 (type_specifier -> FLOAT .)
    COMMA           reduce using rule 153 (type_specifier -> FLOAT .)
    RPAREN          reduce using rule 153 (type_specifier -> FLOAT .)
    COLON           reduce using rule 153 (type_specifier -> FLOAT .)


state 35

    (79) external_declaration -> function_definition .

    SEMI            reduce using rule 79 (external_declaration -> function_definition .)
    PPHASH          reduce using rule 79 (external_declaration -> function_definition .)
    ID              reduce using rule 79 (external_declaration -> function_definition .)
    LPAREN          reduce using rule 79 (external_declaration -> function_definition .)
    TIMES           reduce using rule 79 (external_declaration -> function_definition .)
    CONST           reduce using rule 79 (external_declaration -> function_definition .)
    RESTRICT        reduce using rule 79 (external_declaration -> function_definition .)
    VOLATILE        reduce using rule 79 (external_declaration -> function_definition .)
    VOID            reduce using rule 79 (external_declaration -> function_definition .)
    _BOOL           reduce using rule 79 (external_declaration -> function_definition .)
    CHAR            reduce using rule 79 (external_declaration -> function_definition .)
    SHORT           reduce using rule 79 (external_declaration -> function_definition .)
    INT             reduce using rule 79 (external_declaration -> function_definition .)
    LONG            reduce using rule 79 (external_declaration -> function_definition .)
    FLOAT           reduce using rule 79 (external_declaration -> function_definition .)
    DOUBLE          reduce using rule 79 (external_declaration -> function_definition .)
    _COMPLEX        reduce using rule 79 (external_declaration -> function_definition .)
    SIGNED          reduce using rule 79 (external_declaration -> function_definition .)
    UNSIGNED        reduce using rule 79 (external_declaration -> function_definition .)
    AUTO            reduce using rule 79 (external_declaration -> function_definition .)
    REGISTER        reduce using rule 79 (external_declaration -> function_definition .)
    STATIC          reduce using rule 79 (external_declaration -> function_definition .)
    EXTERN          reduce using rule 79 (external_declaration -> function_definition .)
    TYPEDEF         reduce using rule 79 (external_declaration -> function_definition .)
    INLINE          reduce using rule 79 (external_declaration -> function_definition .)
    TYPEID          reduce using rule 79 (external_declaration -> function_definition .)
    ENUM            reduce using rule 79 (external_declaration -> function_definition .)
    STRUCT          reduce using rule 79 (external_declaration -> function_definition .)
    UNION           reduce using rule 79 (external_declaration -> function_definition .)
    $end            reduce using rule 79 (external_declaration -> function_definition .)


state 36

    (149) type_specifier -> CHAR .

    CONST           reduce using rule 149 (type_specifier -> CHAR .)
    RESTRICT        reduce using rule 149 (type_specifier -> CHAR .)
    VOLATILE        reduce using rule 149 (type_specifier -> CHAR .)
    VOID            reduce using rule 149 (type_specifier -> CHAR .)
    _BOOL           reduce using rule 149 (type_specifier -> CHAR .)
    CHAR            reduce using rule 149 (type_specifier -> CHAR .)
    SHORT           reduce using rule 149 (type_specifier -> CHAR .)
    INT             reduce using rule 149 (type_specifier -> CHAR .)
    LONG            reduce using rule 149 (type_specifier -> CHAR .)
    FLOAT           reduce using rule 149 (type_specifier -> CHAR .)
    DOUBLE          reduce using rule 149 (type_specifier -> CHAR .)
    _COMPLEX        reduce using rule 149 (type_specifier -> CHAR .)
    SIGNED          reduce using rule 149 (type_specifier -> CHAR .)
    UNSIGNED        reduce using rule 149 (type_specifier -> CHAR .)
    AUTO            reduce using rule 149 (type_specifier -> CHAR .)
    REGISTER        reduce using rule 149 (type_specifier -> CHAR .)
    STATIC          reduce using rule 149 (type_specifier -> CHAR .)
    EXTERN          reduce using rule 149 (type_specifier -> CHAR .)
    TYPEDEF         reduce using rule 149 (type_specifier -> CHAR .)
    INLINE          reduce using rule 149 (type_specifier -> CHAR .)
    TYPEID          reduce using rule 149 (type_specifier -> CHAR .)
    ENUM            reduce using rule 149 (type_specifier -> CHAR .)
    STRUCT          reduce using rule 149 (type_specifier -> CHAR .)
    UNION           reduce using rule 149 (type_specifier -> CHAR .)
    ID              reduce using rule 149 (type_specifier -> CHAR .)
    LPAREN          reduce using rule 149 (type_specifier -> CHAR .)
    TIMES           reduce using rule 149 (type_specifier -> CHAR .)
    SEMI            reduce using rule 149 (type_specifier -> CHAR .)
    LBRACKET        reduce using rule 149 (type_specifier -> CHAR .)
    COMMA           reduce using rule 149 (type_specifier -> CHAR .)
    RPAREN          reduce using rule 149 (type_specifier -> CHAR .)
    COLON           reduce using rule 149 (type_specifier -> CHAR .)


state 37

    (87) pp_directive -> PPHASH .

    SEMI            reduce using rule 87 (pp_directive -> PPHASH .)
    PPHASH          reduce using rule 87 (pp_directive -> PPHASH .)
    ID              reduce using rule 87 (pp_directive -> PPHASH .)
    LPAREN          reduce using rule 87 (pp_directive -> PPHASH .)
    TIMES           reduce using rule 87 (pp_directive -> PPHASH .)
    CONST           reduce using rule 87 (pp_directive -> PPHASH .)
    RESTRICT        reduce using rule 87 (pp_directive -> PPHASH .)
    VOLATILE        reduce using rule 87 (pp_directive -> PPHASH .)
    VOID            reduce using rule 87 (pp_directive -> PPHASH .)
    _BOOL           reduce using rule 87 (pp_directive -> PPHASH .)
    CHAR            reduce using rule 87 (pp_directive -> PPHASH .)
    SHORT           reduce using rule 87 (pp_directive -> PPHASH .)
    INT             reduce using rule 87 (pp_directive -> PPHASH .)
    LONG            reduce using rule 87 (pp_directive -> PPHASH .)
    FLOAT           reduce using rule 87 (pp_directive -> PPHASH .)
    DOUBLE          reduce using rule 87 (pp_directive -> PPHASH .)
    _COMPLEX        reduce using rule 87 (pp_directive -> PPHASH .)
    SIGNED          reduce using rule 87 (pp_directive -> PPHASH .)
    UNSIGNED        reduce using rule 87 (pp_directive -> PPHASH .)
    AUTO            reduce using rule 87 (pp_directive -> PPHASH .)
    REGISTER        reduce using rule 87 (pp_directive -> PPHASH .)
    STATIC          reduce using rule 87 (pp_directive -> PPHASH .)
    EXTERN          reduce using rule 87 (pp_directive -> PPHASH .)
    TYPEDEF         reduce using rule 87 (pp_directive -> PPHASH .)
    INLINE          reduce using rule 87 (pp_directive -> PPHASH .)
    TYPEID          reduce using rule 87 (pp_directive -> PPHASH .)
    ENUM            reduce using rule 87 (pp_directive -> PPHASH .)
    STRUCT          reduce using rule 87 (pp_directive -> PPHASH .)
    UNION           reduce using rule 87 (pp_directive -> PPHASH .)
    $end            reduce using rule 87 (pp_directive -> PPHASH .)


state 38

    (0) S' -> translation_unit_or_empty .



state 39

    (151) type_specifier -> INT .

    CONST           reduce using rule 151 (type_specifier -> INT .)
    RESTRICT        reduce using rule 151 (type_specifier -> INT .)
    VOLATILE        reduce using rule 151 (type_specifier -> INT .)
    VOID            reduce using rule 151 (type_specifier -> INT .)
    _BOOL           reduce using rule 151 (type_specifier -> INT .)
    CHAR            reduce using rule 151 (type_specifier -> INT .)
    SHORT           reduce using rule 151 (type_specifier -> INT .)
    INT             reduce using rule 151 (type_specifier -> INT .)
    LONG            reduce using rule 151 (type_specifier -> INT .)
    FLOAT           reduce using rule 151 (type_specifier -> INT .)
    DOUBLE          reduce using rule 151 (type_specifier -> INT .)
    _COMPLEX        reduce using rule 151 (type_specifier -> INT .)
    SIGNED          reduce using rule 151 (type_specifier -> INT .)
    UNSIGNED        reduce using rule 151 (type_specifier -> INT .)
    AUTO            reduce using rule 151 (type_specifier -> INT .)
    REGISTER        reduce using rule 151 (type_specifier -> INT .)
    STATIC          reduce using rule 151 (type_specifier -> INT .)
    EXTERN          reduce using rule 151 (type_specifier -> INT .)
    TYPEDEF         reduce using rule 151 (type_specifier -> INT .)
    INLINE          reduce using rule 151 (type_specifier -> INT .)
    TYPEID          reduce using rule 151 (type_specifier -> INT .)
    ENUM            reduce using rule 151 (type_specifier -> INT .)
    STRUCT          reduce using rule 151 (type_specifier -> INT .)
    UNION           reduce using rule 151 (type_specifier -> INT .)
    ID              reduce using rule 151 (type_specifier -> INT .)
    LPAREN          reduce using rule 151 (type_specifier -> INT .)
    TIMES           reduce using rule 151 (type_specifier -> INT .)
    SEMI            reduce using rule 151 (type_specifier -> INT .)
    LBRACKET        reduce using rule 151 (type_specifier -> INT .)
    COMMA           reduce using rule 151 (type_specifier -> INT .)
    RPAREN          reduce using rule 151 (type_specifier -> INT .)
    COLON           reduce using rule 151 (type_specifier -> INT .)


state 40

    (154) type_specifier -> DOUBLE .

    CONST           reduce using rule 154 (type_specifier -> DOUBLE .)
    RESTRICT        reduce using rule 154 (type_specifier -> DOUBLE .)
    VOLATILE        reduce using rule 154 (type_specifier -> DOUBLE .)
    VOID            reduce using rule 154 (type_specifier -> DOUBLE .)
    _BOOL           reduce using rule 154 (type_specifier -> DOUBLE .)
    CHAR            reduce using rule 154 (type_specifier -> DOUBLE .)
    SHORT           reduce using rule 154 (type_specifier -> DOUBLE .)
    INT             reduce using rule 154 (type_specifier -> DOUBLE .)
    LONG            reduce using rule 154 (type_specifier -> DOUBLE .)
    FLOAT           reduce using rule 154 (type_specifier -> DOUBLE .)
    DOUBLE          reduce using rule 154 (type_specifier -> DOUBLE .)
    _COMPLEX        reduce using rule 154 (type_specifier -> DOUBLE .)
    SIGNED          reduce using rule 154 (type_specifier -> DOUBLE .)
    UNSIGNED        reduce using rule 154 (type_specifier -> DOUBLE .)
    AUTO            reduce using rule 154 (type_specifier -> DOUBLE .)
    REGISTER        reduce using rule 154 (type_specifier -> DOUBLE .)
    STATIC          reduce using rule 154 (type_specifier -> DOUBLE .)
    EXTERN          reduce using rule 154 (type_specifier -> DOUBLE .)
    TYPEDEF         reduce using rule 154 (type_specifier -> DOUBLE .)
    INLINE          reduce using rule 154 (type_specifier -> DOUBLE .)
    TYPEID          reduce using rule 154 (type_specifier -> DOUBLE .)
    ENUM            reduce using rule 154 (type_specifier -> DOUBLE .)
    STRUCT          reduce using rule 154 (type_specifier -> DOUBLE .)
    UNION           reduce using rule 154 (type_specifier -> DOUBLE .)
    ID              reduce using rule 154 (type_specifier -> DOUBLE .)
    LPAREN          reduce using rule 154 (type_specifier -> DOUBLE .)
    TIMES           reduce using rule 154 (type_specifier -> DOUBLE .)
    SEMI            reduce using rule 154 (type_specifier -> DOUBLE .)
    LBRACKET        reduce using rule 154 (type_specifier -> DOUBLE .)
    COMMA           reduce using rule 154 (type_specifier -> DOUBLE .)
    RPAREN          reduce using rule 154 (type_specifier -> DOUBLE .)
    COLON           reduce using rule 154 (type_specifier -> DOUBLE .)


state 41

    (134) declaration -> decl_body . SEMI

    SEMI            shift and go to state 75


state 42

    (137) declaration_specifiers -> type_qualifier . declaration_specifiers_opt
    (9) declaration_specifiers_opt -> . empty
    (10) declaration_specifiers_opt -> . declaration_specifiers
    (340) empty -> .
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    ID              reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    SEMI            reduce using rule 340 (empty -> .)
    LBRACKET        reduce using rule 340 (empty -> .)
    COMMA           reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    declaration_specifiers         shift and go to state 52
    declaration_specifiers_opt     shift and go to state 76
    typedef_name                   shift and go to state 28
    empty                          shift and go to state 51

state 43

    (156) type_specifier -> SIGNED .

    CONST           reduce using rule 156 (type_specifier -> SIGNED .)
    RESTRICT        reduce using rule 156 (type_specifier -> SIGNED .)
    VOLATILE        reduce using rule 156 (type_specifier -> SIGNED .)
    VOID            reduce using rule 156 (type_specifier -> SIGNED .)
    _BOOL           reduce using rule 156 (type_specifier -> SIGNED .)
    CHAR            reduce using rule 156 (type_specifier -> SIGNED .)
    SHORT           reduce using rule 156 (type_specifier -> SIGNED .)
    INT             reduce using rule 156 (type_specifier -> SIGNED .)
    LONG            reduce using rule 156 (type_specifier -> SIGNED .)
    FLOAT           reduce using rule 156 (type_specifier -> SIGNED .)
    DOUBLE          reduce using rule 156 (type_specifier -> SIGNED .)
    _COMPLEX        reduce using rule 156 (type_specifier -> SIGNED .)
    SIGNED          reduce using rule 156 (type_specifier -> SIGNED .)
    UNSIGNED        reduce using rule 156 (type_specifier -> SIGNED .)
    AUTO            reduce using rule 156 (type_specifier -> SIGNED .)
    REGISTER        reduce using rule 156 (type_specifier -> SIGNED .)
    STATIC          reduce using rule 156 (type_specifier -> SIGNED .)
    EXTERN          reduce using rule 156 (type_specifier -> SIGNED .)
    TYPEDEF         reduce using rule 156 (type_specifier -> SIGNED .)
    INLINE          reduce using rule 156 (type_specifier -> SIGNED .)
    TYPEID          reduce using rule 156 (type_specifier -> SIGNED .)
    ENUM            reduce using rule 156 (type_specifier -> SIGNED .)
    STRUCT          reduce using rule 156 (type_specifier -> SIGNED .)
    UNION           reduce using rule 156 (type_specifier -> SIGNED .)
    ID              reduce using rule 156 (type_specifier -> SIGNED .)
    LPAREN          reduce using rule 156 (type_specifier -> SIGNED .)
    TIMES           reduce using rule 156 (type_specifier -> SIGNED .)
    SEMI            reduce using rule 156 (type_specifier -> SIGNED .)
    LBRACKET        reduce using rule 156 (type_specifier -> SIGNED .)
    COMMA           reduce using rule 156 (type_specifier -> SIGNED .)
    RPAREN          reduce using rule 156 (type_specifier -> SIGNED .)
    COLON           reduce using rule 156 (type_specifier -> SIGNED .)


state 44

    (140) declaration_specifiers -> function_specifier . declaration_specifiers_opt
    (9) declaration_specifiers_opt -> . empty
    (10) declaration_specifiers_opt -> . declaration_specifiers
    (340) empty -> .
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    ID              reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    SEMI            reduce using rule 340 (empty -> .)
    LBRACKET        reduce using rule 340 (empty -> .)
    COMMA           reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    declaration_specifiers         shift and go to state 52
    declaration_specifiers_opt     shift and go to state 77
    typedef_name                   shift and go to state 28
    empty                          shift and go to state 51

state 45

    (159) type_specifier -> enum_specifier .

    CONST           reduce using rule 159 (type_specifier -> enum_specifier .)
    RESTRICT        reduce using rule 159 (type_specifier -> enum_specifier .)
    VOLATILE        reduce using rule 159 (type_specifier -> enum_specifier .)
    VOID            reduce using rule 159 (type_specifier -> enum_specifier .)
    _BOOL           reduce using rule 159 (type_specifier -> enum_specifier .)
    CHAR            reduce using rule 159 (type_specifier -> enum_specifier .)
    SHORT           reduce using rule 159 (type_specifier -> enum_specifier .)
    INT             reduce using rule 159 (type_specifier -> enum_specifier .)
    LONG            reduce using rule 159 (type_specifier -> enum_specifier .)
    FLOAT           reduce using rule 159 (type_specifier -> enum_specifier .)
    DOUBLE          reduce using rule 159 (type_specifier -> enum_specifier .)
    _COMPLEX        reduce using rule 159 (type_specifier -> enum_specifier .)
    SIGNED          reduce using rule 159 (type_specifier -> enum_specifier .)
    UNSIGNED        reduce using rule 159 (type_specifier -> enum_specifier .)
    AUTO            reduce using rule 159 (type_specifier -> enum_specifier .)
    REGISTER        reduce using rule 159 (type_specifier -> enum_specifier .)
    STATIC          reduce using rule 159 (type_specifier -> enum_specifier .)
    EXTERN          reduce using rule 159 (type_specifier -> enum_specifier .)
    TYPEDEF         reduce using rule 159 (type_specifier -> enum_specifier .)
    INLINE          reduce using rule 159 (type_specifier -> enum_specifier .)
    TYPEID          reduce using rule 159 (type_specifier -> enum_specifier .)
    ENUM            reduce using rule 159 (type_specifier -> enum_specifier .)
    STRUCT          reduce using rule 159 (type_specifier -> enum_specifier .)
    UNION           reduce using rule 159 (type_specifier -> enum_specifier .)
    ID              reduce using rule 159 (type_specifier -> enum_specifier .)
    LPAREN          reduce using rule 159 (type_specifier -> enum_specifier .)
    TIMES           reduce using rule 159 (type_specifier -> enum_specifier .)
    SEMI            reduce using rule 159 (type_specifier -> enum_specifier .)
    LBRACKET        reduce using rule 159 (type_specifier -> enum_specifier .)
    COMMA           reduce using rule 159 (type_specifier -> enum_specifier .)
    RPAREN          reduce using rule 159 (type_specifier -> enum_specifier .)
    COLON           reduce using rule 159 (type_specifier -> enum_specifier .)


state 46

    (163) type_qualifier -> VOLATILE .

    CONST           reduce using rule 163 (type_qualifier -> VOLATILE .)
    RESTRICT        reduce using rule 163 (type_qualifier -> VOLATILE .)
    VOLATILE        reduce using rule 163 (type_qualifier -> VOLATILE .)
    VOID            reduce using rule 163 (type_qualifier -> VOLATILE .)
    _BOOL           reduce using rule 163 (type_qualifier -> VOLATILE .)
    CHAR            reduce using rule 163 (type_qualifier -> VOLATILE .)
    SHORT           reduce using rule 163 (type_qualifier -> VOLATILE .)
    INT             reduce using rule 163 (type_qualifier -> VOLATILE .)
    LONG            reduce using rule 163 (type_qualifier -> VOLATILE .)
    FLOAT           reduce using rule 163 (type_qualifier -> VOLATILE .)
    DOUBLE          reduce using rule 163 (type_qualifier -> VOLATILE .)
    _COMPLEX        reduce using rule 163 (type_qualifier -> VOLATILE .)
    SIGNED          reduce using rule 163 (type_qualifier -> VOLATILE .)
    UNSIGNED        reduce using rule 163 (type_qualifier -> VOLATILE .)
    AUTO            reduce using rule 163 (type_qualifier -> VOLATILE .)
    REGISTER        reduce using rule 163 (type_qualifier -> VOLATILE .)
    STATIC          reduce using rule 163 (type_qualifier -> VOLATILE .)
    EXTERN          reduce using rule 163 (type_qualifier -> VOLATILE .)
    TYPEDEF         reduce using rule 163 (type_qualifier -> VOLATILE .)
    INLINE          reduce using rule 163 (type_qualifier -> VOLATILE .)
    TYPEID          reduce using rule 163 (type_qualifier -> VOLATILE .)
    ENUM            reduce using rule 163 (type_qualifier -> VOLATILE .)
    STRUCT          reduce using rule 163 (type_qualifier -> VOLATILE .)
    UNION           reduce using rule 163 (type_qualifier -> VOLATILE .)
    ID              reduce using rule 163 (type_qualifier -> VOLATILE .)
    LPAREN          reduce using rule 163 (type_qualifier -> VOLATILE .)
    TIMES           reduce using rule 163 (type_qualifier -> VOLATILE .)
    SEMI            reduce using rule 163 (type_qualifier -> VOLATILE .)
    LBRACKET        reduce using rule 163 (type_qualifier -> VOLATILE .)
    COMMA           reduce using rule 163 (type_qualifier -> VOLATILE .)
    RPAREN          reduce using rule 163 (type_qualifier -> VOLATILE .)
    COLON           reduce using rule 163 (type_qualifier -> VOLATILE .)


state 47

    (68) translation_unit_or_empty -> empty .

    $end            reduce using rule 68 (translation_unit_or_empty -> empty .)


state 48

    (92) function_definition -> declarator . declaration_list_opt compound_statement
    (7) declaration_list_opt -> . empty
    (8) declaration_list_opt -> . declaration_list
    (340) empty -> .
    (135) declaration_list -> . declaration
    (136) declaration_list -> . declaration_list declaration
    (134) declaration -> . decl_body SEMI
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    LBRACE          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 5
    function_specifier             shift and go to state 44
    type_specifier                 shift and go to state 13
    struct_or_union                shift and go to state 7
    declaration_specifiers         shift and go to state 79
    declaration                    shift and go to state 80
    typedef_name                   shift and go to state 28
    declaration_list_opt           shift and go to state 81
    enum_specifier                 shift and go to state 45
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    declaration_list               shift and go to state 82
    empty                          shift and go to state 78

state 49

    (146) function_specifier -> INLINE .

    CONST           reduce using rule 146 (function_specifier -> INLINE .)
    RESTRICT        reduce using rule 146 (function_specifier -> INLINE .)
    VOLATILE        reduce using rule 146 (function_specifier -> INLINE .)
    VOID            reduce using rule 146 (function_specifier -> INLINE .)
    _BOOL           reduce using rule 146 (function_specifier -> INLINE .)
    CHAR            reduce using rule 146 (function_specifier -> INLINE .)
    SHORT           reduce using rule 146 (function_specifier -> INLINE .)
    INT             reduce using rule 146 (function_specifier -> INLINE .)
    LONG            reduce using rule 146 (function_specifier -> INLINE .)
    FLOAT           reduce using rule 146 (function_specifier -> INLINE .)
    DOUBLE          reduce using rule 146 (function_specifier -> INLINE .)
    _COMPLEX        reduce using rule 146 (function_specifier -> INLINE .)
    SIGNED          reduce using rule 146 (function_specifier -> INLINE .)
    UNSIGNED        reduce using rule 146 (function_specifier -> INLINE .)
    AUTO            reduce using rule 146 (function_specifier -> INLINE .)
    REGISTER        reduce using rule 146 (function_specifier -> INLINE .)
    STATIC          reduce using rule 146 (function_specifier -> INLINE .)
    EXTERN          reduce using rule 146 (function_specifier -> INLINE .)
    TYPEDEF         reduce using rule 146 (function_specifier -> INLINE .)
    INLINE          reduce using rule 146 (function_specifier -> INLINE .)
    TYPEID          reduce using rule 146 (function_specifier -> INLINE .)
    ENUM            reduce using rule 146 (function_specifier -> INLINE .)
    STRUCT          reduce using rule 146 (function_specifier -> INLINE .)
    UNION           reduce using rule 146 (function_specifier -> INLINE .)
    ID              reduce using rule 146 (function_specifier -> INLINE .)
    LPAREN          reduce using rule 146 (function_specifier -> INLINE .)
    TIMES           reduce using rule 146 (function_specifier -> INLINE .)
    SEMI            reduce using rule 146 (function_specifier -> INLINE .)
    LBRACKET        reduce using rule 146 (function_specifier -> INLINE .)
    COMMA           reduce using rule 146 (function_specifier -> INLINE .)
    RPAREN          reduce using rule 146 (function_specifier -> INLINE .)


state 50

    (139) declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .

    ID              reduce using rule 139 (declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .)
    LPAREN          reduce using rule 139 (declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .)
    TIMES           reduce using rule 139 (declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .)
    LBRACKET        reduce using rule 139 (declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .)
    COMMA           reduce using rule 139 (declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .)
    RPAREN          reduce using rule 139 (declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .)
    SEMI            reduce using rule 139 (declaration_specifiers -> storage_class_specifier declaration_specifiers_opt .)


state 51

    (9) declaration_specifiers_opt -> empty .

    ID              reduce using rule 9 (declaration_specifiers_opt -> empty .)
    LPAREN          reduce using rule 9 (declaration_specifiers_opt -> empty .)
    TIMES           reduce using rule 9 (declaration_specifiers_opt -> empty .)
    SEMI            reduce using rule 9 (declaration_specifiers_opt -> empty .)
    LBRACKET        reduce using rule 9 (declaration_specifiers_opt -> empty .)
    COMMA           reduce using rule 9 (declaration_specifiers_opt -> empty .)
    RPAREN          reduce using rule 9 (declaration_specifiers_opt -> empty .)


state 52

    (10) declaration_specifiers_opt -> declaration_specifiers .

    ID              reduce using rule 10 (declaration_specifiers_opt -> declaration_specifiers .)
    LPAREN          reduce using rule 10 (declaration_specifiers_opt -> declaration_specifiers .)
    TIMES           reduce using rule 10 (declaration_specifiers_opt -> declaration_specifiers .)
    SEMI            reduce using rule 10 (declaration_specifiers_opt -> declaration_specifiers .)
    LBRACKET        reduce using rule 10 (declaration_specifiers_opt -> declaration_specifiers .)
    COMMA           reduce using rule 10 (declaration_specifiers_opt -> declaration_specifiers .)
    RPAREN          reduce using rule 10 (declaration_specifiers_opt -> declaration_specifiers .)


state 53

    (198) direct_declarator -> LPAREN declarator . RPAREN

    RPAREN          shift and go to state 83


state 54

    (171) struct_or_union_specifier -> struct_or_union TYPEID .
    (174) struct_or_union_specifier -> struct_or_union TYPEID . brace_open struct_declaration_list brace_close
    (338) brace_open -> . LBRACE

    CONST           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    RESTRICT        reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    VOLATILE        reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    VOID            reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    _BOOL           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    CHAR            reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    SHORT           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    INT             reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    LONG            reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    FLOAT           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    DOUBLE          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    _COMPLEX        reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    SIGNED          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    UNSIGNED        reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    AUTO            reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    REGISTER        reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    STATIC          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    EXTERN          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    TYPEDEF         reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    INLINE          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    TYPEID          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    ENUM            reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    STRUCT          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    UNION           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    ID              reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    LPAREN          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    TIMES           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    SEMI            reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    LBRACKET        reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    COMMA           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    RPAREN          reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    COLON           reduce using rule 171 (struct_or_union_specifier -> struct_or_union TYPEID .)
    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 84

state 55

    (338) brace_open -> LBRACE .

    ID              reduce using rule 338 (brace_open -> LBRACE .)
    CASE            reduce using rule 338 (brace_open -> LBRACE .)
    DEFAULT         reduce using rule 338 (brace_open -> LBRACE .)
    IF              reduce using rule 338 (brace_open -> LBRACE .)
    SWITCH          reduce using rule 338 (brace_open -> LBRACE .)
    WHILE           reduce using rule 338 (brace_open -> LBRACE .)
    DO              reduce using rule 338 (brace_open -> LBRACE .)
    FOR             reduce using rule 338 (brace_open -> LBRACE .)
    GOTO            reduce using rule 338 (brace_open -> LBRACE .)
    BREAK           reduce using rule 338 (brace_open -> LBRACE .)
    CONTINUE        reduce using rule 338 (brace_open -> LBRACE .)
    RETURN          reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_APPEND_AFTER_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_APPEND_AROUND_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 338 (brace_open -> LBRACE .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 338 (brace_open -> LBRACE .)
    LBRACE          reduce using rule 338 (brace_open -> LBRACE .)
    CONST           reduce using rule 338 (brace_open -> LBRACE .)
    RESTRICT        reduce using rule 338 (brace_open -> LBRACE .)
    VOLATILE        reduce using rule 338 (brace_open -> LBRACE .)
    VOID            reduce using rule 338 (brace_open -> LBRACE .)
    _BOOL           reduce using rule 338 (brace_open -> LBRACE .)
    CHAR            reduce using rule 338 (brace_open -> LBRACE .)
    SHORT           reduce using rule 338 (brace_open -> LBRACE .)
    INT             reduce using rule 338 (brace_open -> LBRACE .)
    LONG            reduce using rule 338 (brace_open -> LBRACE .)
    FLOAT           reduce using rule 338 (brace_open -> LBRACE .)
    DOUBLE          reduce using rule 338 (brace_open -> LBRACE .)
    _COMPLEX        reduce using rule 338 (brace_open -> LBRACE .)
    SIGNED          reduce using rule 338 (brace_open -> LBRACE .)
    UNSIGNED        reduce using rule 338 (brace_open -> LBRACE .)
    AUTO            reduce using rule 338 (brace_open -> LBRACE .)
    REGISTER        reduce using rule 338 (brace_open -> LBRACE .)
    STATIC          reduce using rule 338 (brace_open -> LBRACE .)
    EXTERN          reduce using rule 338 (brace_open -> LBRACE .)
    TYPEDEF         reduce using rule 338 (brace_open -> LBRACE .)
    INLINE          reduce using rule 338 (brace_open -> LBRACE .)
    TYPEID          reduce using rule 338 (brace_open -> LBRACE .)
    ENUM            reduce using rule 338 (brace_open -> LBRACE .)
    STRUCT          reduce using rule 338 (brace_open -> LBRACE .)
    UNION           reduce using rule 338 (brace_open -> LBRACE .)
    PLUSPLUS        reduce using rule 338 (brace_open -> LBRACE .)
    MINUSMINUS      reduce using rule 338 (brace_open -> LBRACE .)
    SIZEOF          reduce using rule 338 (brace_open -> LBRACE .)
    POINTCUT        reduce using rule 338 (brace_open -> LBRACE .)
    POINTCUT_ADD    reduce using rule 338 (brace_open -> LBRACE .)
    POINTCUT_SUB    reduce using rule 338 (brace_open -> LBRACE .)
    POINTCUT_FIRST  reduce using rule 338 (brace_open -> LBRACE .)
    POINTCUT_LAST   reduce using rule 338 (brace_open -> LBRACE .)
    POINTCUT_MIN    reduce using rule 338 (brace_open -> LBRACE .)
    POINTCUT_MAX    reduce using rule 338 (brace_open -> LBRACE .)
    LPAREN          reduce using rule 338 (brace_open -> LBRACE .)
    AND             reduce using rule 338 (brace_open -> LBRACE .)
    TIMES           reduce using rule 338 (brace_open -> LBRACE .)
    PLUS            reduce using rule 338 (brace_open -> LBRACE .)
    MINUS           reduce using rule 338 (brace_open -> LBRACE .)
    NOT             reduce using rule 338 (brace_open -> LBRACE .)
    LNOT            reduce using rule 338 (brace_open -> LBRACE .)
    INT_CONST_DEC   reduce using rule 338 (brace_open -> LBRACE .)
    INT_CONST_OCT   reduce using rule 338 (brace_open -> LBRACE .)
    INT_CONST_HEX   reduce using rule 338 (brace_open -> LBRACE .)
    FLOAT_CONST     reduce using rule 338 (brace_open -> LBRACE .)
    HEX_FLOAT_CONST reduce using rule 338 (brace_open -> LBRACE .)
    CHAR_CONST      reduce using rule 338 (brace_open -> LBRACE .)
    WCHAR_CONST     reduce using rule 338 (brace_open -> LBRACE .)
    STRING_LITERAL  reduce using rule 338 (brace_open -> LBRACE .)
    WSTRING_LITERAL reduce using rule 338 (brace_open -> LBRACE .)
    RBRACE          reduce using rule 338 (brace_open -> LBRACE .)
    SEMI            reduce using rule 338 (brace_open -> LBRACE .)
    LBRACKET        reduce using rule 338 (brace_open -> LBRACE .)
    PERIOD          reduce using rule 338 (brace_open -> LBRACE .)


state 56

    (170) struct_or_union_specifier -> struct_or_union ID .
    (173) struct_or_union_specifier -> struct_or_union ID . brace_open struct_declaration_list brace_close
    (338) brace_open -> . LBRACE

    CONST           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    RESTRICT        reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    VOLATILE        reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    VOID            reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    _BOOL           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    CHAR            reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    SHORT           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    INT             reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    LONG            reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    FLOAT           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    DOUBLE          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    _COMPLEX        reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    SIGNED          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    UNSIGNED        reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    AUTO            reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    REGISTER        reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    STATIC          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    EXTERN          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    TYPEDEF         reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    INLINE          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    TYPEID          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    ENUM            reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    STRUCT          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    UNION           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    ID              reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    LPAREN          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    TIMES           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    SEMI            reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    LBRACKET        reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    COMMA           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    RPAREN          reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    COLON           reduce using rule 170 (struct_or_union_specifier -> struct_or_union ID .)
    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 85

state 57

    (172) struct_or_union_specifier -> struct_or_union brace_open . struct_declaration_list brace_close
    (177) struct_declaration_list -> . struct_declaration
    (178) struct_declaration_list -> . struct_declaration_list struct_declaration
    (179) struct_declaration -> . specifier_qualifier_list struct_declarator_list_opt SEMI
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    struct_declaration             shift and go to state 88
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 90
    struct_declaration_list        shift and go to state 86
    typedef_name                   shift and go to state 28

state 58

    (138) declaration_specifiers -> type_specifier declaration_specifiers_opt .

    ID              reduce using rule 138 (declaration_specifiers -> type_specifier declaration_specifiers_opt .)
    LPAREN          reduce using rule 138 (declaration_specifiers -> type_specifier declaration_specifiers_opt .)
    TIMES           reduce using rule 138 (declaration_specifiers -> type_specifier declaration_specifiers_opt .)
    LBRACKET        reduce using rule 138 (declaration_specifiers -> type_specifier declaration_specifiers_opt .)
    COMMA           reduce using rule 138 (declaration_specifiers -> type_specifier declaration_specifiers_opt .)
    RPAREN          reduce using rule 138 (declaration_specifiers -> type_specifier declaration_specifiers_opt .)
    SEMI            reduce using rule 138 (declaration_specifiers -> type_specifier declaration_specifiers_opt .)


state 59

    (196) declarator -> pointer direct_declarator .
    (199) direct_declarator -> direct_declarator . LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> direct_declarator . LBRACKET TIMES RBRACKET
    (201) direct_declarator -> direct_declarator . LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> direct_declarator . LPAREN identifier_list_opt RPAREN

    COMMA           reduce using rule 196 (declarator -> pointer direct_declarator .)
    RPAREN          reduce using rule 196 (declarator -> pointer direct_declarator .)
    COLON           reduce using rule 196 (declarator -> pointer direct_declarator .)
    SEMI            reduce using rule 196 (declarator -> pointer direct_declarator .)
    CONST           reduce using rule 196 (declarator -> pointer direct_declarator .)
    RESTRICT        reduce using rule 196 (declarator -> pointer direct_declarator .)
    VOLATILE        reduce using rule 196 (declarator -> pointer direct_declarator .)
    VOID            reduce using rule 196 (declarator -> pointer direct_declarator .)
    _BOOL           reduce using rule 196 (declarator -> pointer direct_declarator .)
    CHAR            reduce using rule 196 (declarator -> pointer direct_declarator .)
    SHORT           reduce using rule 196 (declarator -> pointer direct_declarator .)
    INT             reduce using rule 196 (declarator -> pointer direct_declarator .)
    LONG            reduce using rule 196 (declarator -> pointer direct_declarator .)
    FLOAT           reduce using rule 196 (declarator -> pointer direct_declarator .)
    DOUBLE          reduce using rule 196 (declarator -> pointer direct_declarator .)
    _COMPLEX        reduce using rule 196 (declarator -> pointer direct_declarator .)
    SIGNED          reduce using rule 196 (declarator -> pointer direct_declarator .)
    UNSIGNED        reduce using rule 196 (declarator -> pointer direct_declarator .)
    AUTO            reduce using rule 196 (declarator -> pointer direct_declarator .)
    REGISTER        reduce using rule 196 (declarator -> pointer direct_declarator .)
    STATIC          reduce using rule 196 (declarator -> pointer direct_declarator .)
    EXTERN          reduce using rule 196 (declarator -> pointer direct_declarator .)
    TYPEDEF         reduce using rule 196 (declarator -> pointer direct_declarator .)
    INLINE          reduce using rule 196 (declarator -> pointer direct_declarator .)
    TYPEID          reduce using rule 196 (declarator -> pointer direct_declarator .)
    ENUM            reduce using rule 196 (declarator -> pointer direct_declarator .)
    STRUCT          reduce using rule 196 (declarator -> pointer direct_declarator .)
    UNION           reduce using rule 196 (declarator -> pointer direct_declarator .)
    LBRACE          reduce using rule 196 (declarator -> pointer direct_declarator .)
    EQUALS          reduce using rule 196 (declarator -> pointer direct_declarator .)
    LBRACKET        shift and go to state 61
    LPAREN          shift and go to state 62


state 60

    (74) translation_unit -> translation_unit external_declaration .

    SEMI            reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    PPHASH          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    ID              reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    LPAREN          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    TIMES           reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    CONST           reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    RESTRICT        reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    VOLATILE        reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    VOID            reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    _BOOL           reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    CHAR            reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    SHORT           reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    INT             reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    LONG            reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    FLOAT           reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    DOUBLE          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    _COMPLEX        reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    SIGNED          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    UNSIGNED        reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    AUTO            reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    REGISTER        reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    STATIC          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    EXTERN          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    TYPEDEF         reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    INLINE          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    TYPEID          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    ENUM            reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    STRUCT          reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    UNION           reduce using rule 74 (translation_unit -> translation_unit external_declaration .)
    $end            reduce using rule 74 (translation_unit -> translation_unit external_declaration .)


state 61

    (199) direct_declarator -> direct_declarator LBRACKET . assignment_expression_opt RBRACKET
    (200) direct_declarator -> direct_declarator LBRACKET . TIMES RBRACKET
    (3) assignment_expression_opt -> . empty
    (4) assignment_expression_opt -> . assignment_expression
    (340) empty -> .
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    TIMES           shift and go to state 120
    RBRACKET        reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    assignment_expression_opt      shift and go to state 108
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 115
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    empty                          shift and go to state 113
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116

state 62

    (201) direct_declarator -> direct_declarator LPAREN . parameter_type_list RPAREN
    (202) direct_declarator -> direct_declarator LPAREN . identifier_list_opt RPAREN
    (207) parameter_type_list -> . parameter_list
    (208) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (15) identifier_list_opt -> . empty
    (16) identifier_list_opt -> . identifier_list
    (209) parameter_list -> . parameter_declaration
    (210) parameter_list -> . parameter_list COMMA parameter_declaration
    (340) empty -> .
    (213) identifier_list -> . identifier
    (214) identifier_list -> . identifier_list COMMA identifier
    (211) parameter_declaration -> . declaration_specifiers declarator
    (212) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (326) identifier -> . ID
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    RPAREN          reduce using rule 340 (empty -> .)
    ID              shift and go to state 124
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    identifier_list_opt            shift and go to state 139
    struct_or_union_specifier      shift and go to state 5
    type_specifier                 shift and go to state 13
    struct_or_union                shift and go to state 7
    parameter_type_list            shift and go to state 141
    parameter_declaration          shift and go to state 142
    declaration_specifiers         shift and go to state 143
    identifier_list                shift and go to state 144
    typedef_name                   shift and go to state 28
    parameter_list                 shift and go to state 145
    enum_specifier                 shift and go to state 45
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    empty                          shift and go to state 140
    identifier                     shift and go to state 146

state 63

    (186) enum_specifier -> ENUM TYPEID .
    (189) enum_specifier -> ENUM TYPEID . brace_open enumerator_list brace_close
    (338) brace_open -> . LBRACE

    CONST           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    RESTRICT        reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    VOLATILE        reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    VOID            reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    _BOOL           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    CHAR            reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    SHORT           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    INT             reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    LONG            reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    FLOAT           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    DOUBLE          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    _COMPLEX        reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    SIGNED          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    UNSIGNED        reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    TYPEID          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    ENUM            reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    STRUCT          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    UNION           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    COLON           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    ID              reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    LPAREN          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    TIMES           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    SEMI            reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    LBRACKET        reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    RPAREN          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    AUTO            reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    REGISTER        reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    STATIC          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    EXTERN          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    TYPEDEF         reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    INLINE          reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    COMMA           reduce using rule 186 (enum_specifier -> ENUM TYPEID .)
    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 147

state 64

    (185) enum_specifier -> ENUM ID .
    (188) enum_specifier -> ENUM ID . brace_open enumerator_list brace_close
    (338) brace_open -> . LBRACE

    CONST           reduce using rule 185 (enum_specifier -> ENUM ID .)
    RESTRICT        reduce using rule 185 (enum_specifier -> ENUM ID .)
    VOLATILE        reduce using rule 185 (enum_specifier -> ENUM ID .)
    VOID            reduce using rule 185 (enum_specifier -> ENUM ID .)
    _BOOL           reduce using rule 185 (enum_specifier -> ENUM ID .)
    CHAR            reduce using rule 185 (enum_specifier -> ENUM ID .)
    SHORT           reduce using rule 185 (enum_specifier -> ENUM ID .)
    INT             reduce using rule 185 (enum_specifier -> ENUM ID .)
    LONG            reduce using rule 185 (enum_specifier -> ENUM ID .)
    FLOAT           reduce using rule 185 (enum_specifier -> ENUM ID .)
    DOUBLE          reduce using rule 185 (enum_specifier -> ENUM ID .)
    _COMPLEX        reduce using rule 185 (enum_specifier -> ENUM ID .)
    SIGNED          reduce using rule 185 (enum_specifier -> ENUM ID .)
    UNSIGNED        reduce using rule 185 (enum_specifier -> ENUM ID .)
    TYPEID          reduce using rule 185 (enum_specifier -> ENUM ID .)
    ENUM            reduce using rule 185 (enum_specifier -> ENUM ID .)
    STRUCT          reduce using rule 185 (enum_specifier -> ENUM ID .)
    UNION           reduce using rule 185 (enum_specifier -> ENUM ID .)
    COLON           reduce using rule 185 (enum_specifier -> ENUM ID .)
    ID              reduce using rule 185 (enum_specifier -> ENUM ID .)
    LPAREN          reduce using rule 185 (enum_specifier -> ENUM ID .)
    TIMES           reduce using rule 185 (enum_specifier -> ENUM ID .)
    SEMI            reduce using rule 185 (enum_specifier -> ENUM ID .)
    LBRACKET        reduce using rule 185 (enum_specifier -> ENUM ID .)
    RPAREN          reduce using rule 185 (enum_specifier -> ENUM ID .)
    AUTO            reduce using rule 185 (enum_specifier -> ENUM ID .)
    REGISTER        reduce using rule 185 (enum_specifier -> ENUM ID .)
    STATIC          reduce using rule 185 (enum_specifier -> ENUM ID .)
    EXTERN          reduce using rule 185 (enum_specifier -> ENUM ID .)
    TYPEDEF         reduce using rule 185 (enum_specifier -> ENUM ID .)
    INLINE          reduce using rule 185 (enum_specifier -> ENUM ID .)
    COMMA           reduce using rule 185 (enum_specifier -> ENUM ID .)
    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 148

state 65

    (187) enum_specifier -> ENUM brace_open . enumerator_list brace_close
    (190) enumerator_list -> . enumerator
    (191) enumerator_list -> . enumerator_list COMMA
    (192) enumerator_list -> . enumerator_list COMMA enumerator
    (193) enumerator -> . ID
    (194) enumerator -> . ID EQUALS constant_expression

    ID              shift and go to state 151

    enumerator_list                shift and go to state 150
    enumerator                     shift and go to state 149

state 66

    (26) type_qualifier_list_opt -> type_qualifier_list .
    (206) type_qualifier_list -> type_qualifier_list . type_qualifier
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE

    TIMES           reduce using rule 26 (type_qualifier_list_opt -> type_qualifier_list .)
    ID              reduce using rule 26 (type_qualifier_list_opt -> type_qualifier_list .)
    LPAREN          reduce using rule 26 (type_qualifier_list_opt -> type_qualifier_list .)
    LBRACKET        reduce using rule 26 (type_qualifier_list_opt -> type_qualifier_list .)
    COMMA           reduce using rule 26 (type_qualifier_list_opt -> type_qualifier_list .)
    RPAREN          reduce using rule 26 (type_qualifier_list_opt -> type_qualifier_list .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46

    type_qualifier                 shift and go to state 152

state 67

    (203) pointer -> TIMES type_qualifier_list_opt .
    (204) pointer -> TIMES type_qualifier_list_opt . pointer
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer

    ID              reduce using rule 203 (pointer -> TIMES type_qualifier_list_opt .)
    LPAREN          reduce using rule 203 (pointer -> TIMES type_qualifier_list_opt .)
    LBRACKET        reduce using rule 203 (pointer -> TIMES type_qualifier_list_opt .)
    COMMA           reduce using rule 203 (pointer -> TIMES type_qualifier_list_opt .)
    RPAREN          reduce using rule 203 (pointer -> TIMES type_qualifier_list_opt .)
    TIMES           shift and go to state 27

    pointer                        shift and go to state 153

state 68

    (205) type_qualifier_list -> type_qualifier .

    CONST           reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    RESTRICT        reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    VOLATILE        reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    TIMES           reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    ID              reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    LPAREN          reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    LBRACKET        reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    COMMA           reduce using rule 205 (type_qualifier_list -> type_qualifier .)
    RPAREN          reduce using rule 205 (type_qualifier_list -> type_qualifier .)


state 69

    (25) type_qualifier_list_opt -> empty .

    TIMES           reduce using rule 25 (type_qualifier_list_opt -> empty .)
    ID              reduce using rule 25 (type_qualifier_list_opt -> empty .)
    LPAREN          reduce using rule 25 (type_qualifier_list_opt -> empty .)
    LBRACKET        reduce using rule 25 (type_qualifier_list_opt -> empty .)
    COMMA           reduce using rule 25 (type_qualifier_list_opt -> empty .)
    RPAREN          reduce using rule 25 (type_qualifier_list_opt -> empty .)


state 70

    (18) init_declarator_list_opt -> init_declarator_list .
    (165) init_declarator_list -> init_declarator_list . COMMA init_declarator

    SEMI            reduce using rule 18 (init_declarator_list_opt -> init_declarator_list .)
    COMMA           shift and go to state 154


state 71

    (108) decl_body -> declaration_specifiers init_declarator_list_opt .

    SEMI            reduce using rule 108 (decl_body -> declaration_specifiers init_declarator_list_opt .)


state 72

    (17) init_declarator_list_opt -> empty .

    SEMI            reduce using rule 17 (init_declarator_list_opt -> empty .)


state 73

    (97) function_definition -> declaration_specifiers declarator . declaration_list_opt compound_statement
    (166) init_declarator -> declarator .
    (167) init_declarator -> declarator . EQUALS initializer
    (7) declaration_list_opt -> . empty
    (8) declaration_list_opt -> . declaration_list
    (340) empty -> .
    (135) declaration_list -> . declaration
    (136) declaration_list -> . declaration_list declaration
    (134) declaration -> . decl_body SEMI
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    COMMA           reduce using rule 166 (init_declarator -> declarator .)
    SEMI            reduce using rule 166 (init_declarator -> declarator .)
    EQUALS          shift and go to state 155
    LBRACE          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 5
    declaration_list               shift and go to state 82
    type_specifier                 shift and go to state 13
    struct_or_union                shift and go to state 7
    declaration_specifiers         shift and go to state 79
    declaration                    shift and go to state 80
    typedef_name                   shift and go to state 28
    declaration_list_opt           shift and go to state 156
    enum_specifier                 shift and go to state 45
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    empty                          shift and go to state 78

state 74

    (164) init_declarator_list -> init_declarator .

    COMMA           reduce using rule 164 (init_declarator_list -> init_declarator .)
    SEMI            reduce using rule 164 (init_declarator_list -> init_declarator .)


state 75

    (134) declaration -> decl_body SEMI .

    ID              reduce using rule 134 (declaration -> decl_body SEMI .)
    CASE            reduce using rule 134 (declaration -> decl_body SEMI .)
    DEFAULT         reduce using rule 134 (declaration -> decl_body SEMI .)
    IF              reduce using rule 134 (declaration -> decl_body SEMI .)
    SWITCH          reduce using rule 134 (declaration -> decl_body SEMI .)
    WHILE           reduce using rule 134 (declaration -> decl_body SEMI .)
    DO              reduce using rule 134 (declaration -> decl_body SEMI .)
    FOR             reduce using rule 134 (declaration -> decl_body SEMI .)
    GOTO            reduce using rule 134 (declaration -> decl_body SEMI .)
    BREAK           reduce using rule 134 (declaration -> decl_body SEMI .)
    CONTINUE        reduce using rule 134 (declaration -> decl_body SEMI .)
    RETURN          reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 134 (declaration -> decl_body SEMI .)
    LBRACE          reduce using rule 134 (declaration -> decl_body SEMI .)
    CONST           reduce using rule 134 (declaration -> decl_body SEMI .)
    RESTRICT        reduce using rule 134 (declaration -> decl_body SEMI .)
    VOLATILE        reduce using rule 134 (declaration -> decl_body SEMI .)
    VOID            reduce using rule 134 (declaration -> decl_body SEMI .)
    _BOOL           reduce using rule 134 (declaration -> decl_body SEMI .)
    CHAR            reduce using rule 134 (declaration -> decl_body SEMI .)
    SHORT           reduce using rule 134 (declaration -> decl_body SEMI .)
    INT             reduce using rule 134 (declaration -> decl_body SEMI .)
    LONG            reduce using rule 134 (declaration -> decl_body SEMI .)
    FLOAT           reduce using rule 134 (declaration -> decl_body SEMI .)
    DOUBLE          reduce using rule 134 (declaration -> decl_body SEMI .)
    _COMPLEX        reduce using rule 134 (declaration -> decl_body SEMI .)
    SIGNED          reduce using rule 134 (declaration -> decl_body SEMI .)
    UNSIGNED        reduce using rule 134 (declaration -> decl_body SEMI .)
    AUTO            reduce using rule 134 (declaration -> decl_body SEMI .)
    REGISTER        reduce using rule 134 (declaration -> decl_body SEMI .)
    STATIC          reduce using rule 134 (declaration -> decl_body SEMI .)
    EXTERN          reduce using rule 134 (declaration -> decl_body SEMI .)
    TYPEDEF         reduce using rule 134 (declaration -> decl_body SEMI .)
    INLINE          reduce using rule 134 (declaration -> decl_body SEMI .)
    TYPEID          reduce using rule 134 (declaration -> decl_body SEMI .)
    ENUM            reduce using rule 134 (declaration -> decl_body SEMI .)
    STRUCT          reduce using rule 134 (declaration -> decl_body SEMI .)
    UNION           reduce using rule 134 (declaration -> decl_body SEMI .)
    PLUSPLUS        reduce using rule 134 (declaration -> decl_body SEMI .)
    MINUSMINUS      reduce using rule 134 (declaration -> decl_body SEMI .)
    SIZEOF          reduce using rule 134 (declaration -> decl_body SEMI .)
    POINTCUT        reduce using rule 134 (declaration -> decl_body SEMI .)
    POINTCUT_ADD    reduce using rule 134 (declaration -> decl_body SEMI .)
    POINTCUT_SUB    reduce using rule 134 (declaration -> decl_body SEMI .)
    POINTCUT_FIRST  reduce using rule 134 (declaration -> decl_body SEMI .)
    POINTCUT_LAST   reduce using rule 134 (declaration -> decl_body SEMI .)
    POINTCUT_MIN    reduce using rule 134 (declaration -> decl_body SEMI .)
    POINTCUT_MAX    reduce using rule 134 (declaration -> decl_body SEMI .)
    LPAREN          reduce using rule 134 (declaration -> decl_body SEMI .)
    AND             reduce using rule 134 (declaration -> decl_body SEMI .)
    TIMES           reduce using rule 134 (declaration -> decl_body SEMI .)
    PLUS            reduce using rule 134 (declaration -> decl_body SEMI .)
    MINUS           reduce using rule 134 (declaration -> decl_body SEMI .)
    NOT             reduce using rule 134 (declaration -> decl_body SEMI .)
    LNOT            reduce using rule 134 (declaration -> decl_body SEMI .)
    INT_CONST_DEC   reduce using rule 134 (declaration -> decl_body SEMI .)
    INT_CONST_OCT   reduce using rule 134 (declaration -> decl_body SEMI .)
    INT_CONST_HEX   reduce using rule 134 (declaration -> decl_body SEMI .)
    FLOAT_CONST     reduce using rule 134 (declaration -> decl_body SEMI .)
    HEX_FLOAT_CONST reduce using rule 134 (declaration -> decl_body SEMI .)
    CHAR_CONST      reduce using rule 134 (declaration -> decl_body SEMI .)
    WCHAR_CONST     reduce using rule 134 (declaration -> decl_body SEMI .)
    STRING_LITERAL  reduce using rule 134 (declaration -> decl_body SEMI .)
    WSTRING_LITERAL reduce using rule 134 (declaration -> decl_body SEMI .)
    SEMI            reduce using rule 134 (declaration -> decl_body SEMI .)
    RBRACE          reduce using rule 134 (declaration -> decl_body SEMI .)
    PPHASH          reduce using rule 134 (declaration -> decl_body SEMI .)
    $end            reduce using rule 134 (declaration -> decl_body SEMI .)


state 76

    (137) declaration_specifiers -> type_qualifier declaration_specifiers_opt .

    ID              reduce using rule 137 (declaration_specifiers -> type_qualifier declaration_specifiers_opt .)
    LPAREN          reduce using rule 137 (declaration_specifiers -> type_qualifier declaration_specifiers_opt .)
    TIMES           reduce using rule 137 (declaration_specifiers -> type_qualifier declaration_specifiers_opt .)
    LBRACKET        reduce using rule 137 (declaration_specifiers -> type_qualifier declaration_specifiers_opt .)
    COMMA           reduce using rule 137 (declaration_specifiers -> type_qualifier declaration_specifiers_opt .)
    RPAREN          reduce using rule 137 (declaration_specifiers -> type_qualifier declaration_specifiers_opt .)
    SEMI            reduce using rule 137 (declaration_specifiers -> type_qualifier declaration_specifiers_opt .)


state 77

    (140) declaration_specifiers -> function_specifier declaration_specifiers_opt .

    ID              reduce using rule 140 (declaration_specifiers -> function_specifier declaration_specifiers_opt .)
    LPAREN          reduce using rule 140 (declaration_specifiers -> function_specifier declaration_specifiers_opt .)
    TIMES           reduce using rule 140 (declaration_specifiers -> function_specifier declaration_specifiers_opt .)
    LBRACKET        reduce using rule 140 (declaration_specifiers -> function_specifier declaration_specifiers_opt .)
    COMMA           reduce using rule 140 (declaration_specifiers -> function_specifier declaration_specifiers_opt .)
    RPAREN          reduce using rule 140 (declaration_specifiers -> function_specifier declaration_specifiers_opt .)
    SEMI            reduce using rule 140 (declaration_specifiers -> function_specifier declaration_specifiers_opt .)


state 78

    (7) declaration_list_opt -> empty .

    LBRACE          reduce using rule 7 (declaration_list_opt -> empty .)


state 79

    (108) decl_body -> declaration_specifiers . init_declarator_list_opt
    (17) init_declarator_list_opt -> . empty
    (18) init_declarator_list_opt -> . init_declarator_list
    (340) empty -> .
    (164) init_declarator_list -> . init_declarator
    (165) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (166) init_declarator -> . declarator
    (167) init_declarator -> . declarator EQUALS initializer
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer

    SEMI            reduce using rule 340 (empty -> .)
    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27

    direct_declarator              shift and go to state 24
    declarator                     shift and go to state 157
    init_declarator_list           shift and go to state 70
    init_declarator_list_opt       shift and go to state 71
    init_declarator                shift and go to state 74
    pointer                        shift and go to state 15
    empty                          shift and go to state 72

state 80

    (135) declaration_list -> declaration .

    CONST           reduce using rule 135 (declaration_list -> declaration .)
    RESTRICT        reduce using rule 135 (declaration_list -> declaration .)
    VOLATILE        reduce using rule 135 (declaration_list -> declaration .)
    VOID            reduce using rule 135 (declaration_list -> declaration .)
    _BOOL           reduce using rule 135 (declaration_list -> declaration .)
    CHAR            reduce using rule 135 (declaration_list -> declaration .)
    SHORT           reduce using rule 135 (declaration_list -> declaration .)
    INT             reduce using rule 135 (declaration_list -> declaration .)
    LONG            reduce using rule 135 (declaration_list -> declaration .)
    FLOAT           reduce using rule 135 (declaration_list -> declaration .)
    DOUBLE          reduce using rule 135 (declaration_list -> declaration .)
    _COMPLEX        reduce using rule 135 (declaration_list -> declaration .)
    SIGNED          reduce using rule 135 (declaration_list -> declaration .)
    UNSIGNED        reduce using rule 135 (declaration_list -> declaration .)
    AUTO            reduce using rule 135 (declaration_list -> declaration .)
    REGISTER        reduce using rule 135 (declaration_list -> declaration .)
    STATIC          reduce using rule 135 (declaration_list -> declaration .)
    EXTERN          reduce using rule 135 (declaration_list -> declaration .)
    TYPEDEF         reduce using rule 135 (declaration_list -> declaration .)
    INLINE          reduce using rule 135 (declaration_list -> declaration .)
    TYPEID          reduce using rule 135 (declaration_list -> declaration .)
    ENUM            reduce using rule 135 (declaration_list -> declaration .)
    STRUCT          reduce using rule 135 (declaration_list -> declaration .)
    UNION           reduce using rule 135 (declaration_list -> declaration .)
    LBRACE          reduce using rule 135 (declaration_list -> declaration .)


state 81

    (92) function_definition -> declarator declaration_list_opt . compound_statement
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (338) brace_open -> . LBRACE

    LBRACE          shift and go to state 55

    compound_statement             shift and go to state 158
    brace_open                     shift and go to state 159

state 82

    (8) declaration_list_opt -> declaration_list .
    (136) declaration_list -> declaration_list . declaration
    (134) declaration -> . decl_body SEMI
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    LBRACE          reduce using rule 8 (declaration_list_opt -> declaration_list .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    declaration_specifiers         shift and go to state 79
    declaration                    shift and go to state 160
    function_specifier             shift and go to state 44
    typedef_name                   shift and go to state 28

state 83

    (198) direct_declarator -> LPAREN declarator RPAREN .

    LBRACKET        reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    LPAREN          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    EQUALS          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    CONST           reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    RESTRICT        reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    VOLATILE        reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    VOID            reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    _BOOL           reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    CHAR            reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    SHORT           reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    INT             reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    LONG            reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    FLOAT           reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    DOUBLE          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    _COMPLEX        reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    SIGNED          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    UNSIGNED        reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    AUTO            reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    REGISTER        reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    STATIC          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    EXTERN          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    TYPEDEF         reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    INLINE          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    TYPEID          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    ENUM            reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    STRUCT          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    UNION           reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    LBRACE          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    COMMA           reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    SEMI            reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    RPAREN          reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)
    COLON           reduce using rule 198 (direct_declarator -> LPAREN declarator RPAREN .)


state 84

    (174) struct_or_union_specifier -> struct_or_union TYPEID brace_open . struct_declaration_list brace_close
    (177) struct_declaration_list -> . struct_declaration
    (178) struct_declaration_list -> . struct_declaration_list struct_declaration
    (179) struct_declaration -> . specifier_qualifier_list struct_declarator_list_opt SEMI
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    struct_declaration             shift and go to state 88
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 90
    struct_declaration_list        shift and go to state 161
    typedef_name                   shift and go to state 28

state 85

    (173) struct_or_union_specifier -> struct_or_union ID brace_open . struct_declaration_list brace_close
    (177) struct_declaration_list -> . struct_declaration
    (178) struct_declaration_list -> . struct_declaration_list struct_declaration
    (179) struct_declaration -> . specifier_qualifier_list struct_declarator_list_opt SEMI
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    struct_declaration             shift and go to state 88
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 90
    struct_declaration_list        shift and go to state 162
    typedef_name                   shift and go to state 28

state 86

    (172) struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list . brace_close
    (178) struct_declaration_list -> struct_declaration_list . struct_declaration
    (339) brace_close -> . RBRACE
    (179) struct_declaration -> . specifier_qualifier_list struct_declarator_list_opt SEMI
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    RBRACE          shift and go to state 165
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    struct_declaration             shift and go to state 164
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 90
    brace_close                    shift and go to state 163
    typedef_name                   shift and go to state 28

state 87

    (169) specifier_qualifier_list -> type_specifier . specifier_qualifier_list_opt
    (21) specifier_qualifier_list_opt -> . empty
    (22) specifier_qualifier_list_opt -> . specifier_qualifier_list
    (340) empty -> .
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    COLON           reduce using rule 340 (empty -> .)
    ID              reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    SEMI            reduce using rule 340 (empty -> .)
    LBRACKET        reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 168
    specifier_qualifier_list_opt   shift and go to state 167
    typedef_name                   shift and go to state 28
    empty                          shift and go to state 166

state 88

    (177) struct_declaration_list -> struct_declaration .

    RBRACE          reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    CONST           reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    RESTRICT        reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    VOLATILE        reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    VOID            reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    _BOOL           reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    CHAR            reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    SHORT           reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    INT             reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    LONG            reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    FLOAT           reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    DOUBLE          reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    _COMPLEX        reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    SIGNED          reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    UNSIGNED        reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    TYPEID          reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    ENUM            reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    STRUCT          reduce using rule 177 (struct_declaration_list -> struct_declaration .)
    UNION           reduce using rule 177 (struct_declaration_list -> struct_declaration .)


state 89

    (168) specifier_qualifier_list -> type_qualifier . specifier_qualifier_list_opt
    (21) specifier_qualifier_list_opt -> . empty
    (22) specifier_qualifier_list_opt -> . specifier_qualifier_list
    (340) empty -> .
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    COLON           reduce using rule 340 (empty -> .)
    ID              reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    SEMI            reduce using rule 340 (empty -> .)
    LBRACKET        reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 168
    specifier_qualifier_list_opt   shift and go to state 169
    typedef_name                   shift and go to state 28
    empty                          shift and go to state 166

state 90

    (179) struct_declaration -> specifier_qualifier_list . struct_declarator_list_opt SEMI
    (23) struct_declarator_list_opt -> . empty
    (24) struct_declarator_list_opt -> . struct_declarator_list
    (340) empty -> .
    (180) struct_declarator_list -> . struct_declarator
    (181) struct_declarator_list -> . struct_declarator_list COMMA struct_declarator
    (182) struct_declarator -> . declarator
    (183) struct_declarator -> . declarator COLON constant_expression
    (184) struct_declarator -> . COLON constant_expression
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer

    SEMI            reduce using rule 340 (empty -> .)
    COLON           shift and go to state 170
    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27

    struct_declarator              shift and go to state 173
    pointer                        shift and go to state 15
    direct_declarator              shift and go to state 24
    struct_declarator_list_opt     shift and go to state 172
    declarator                     shift and go to state 175
    struct_declarator_list         shift and go to state 171
    empty                          shift and go to state 174

state 91

    (131) unary_expression -> pointcut_last_keyword .

    EQUALS          reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    XOREQUAL        reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    TIMESEQUAL      reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    DIVEQUAL        reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    MODEQUAL        reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    PLUSEQUAL       reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    MINUSEQUAL      reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    LSHIFTEQUAL     reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    RSHIFTEQUAL     reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    ANDEQUAL        reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    OREQUAL         reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    CONDOP          reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    TIMES           reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    DIVIDE          reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    MOD             reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    PLUS            reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    MINUS           reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    RSHIFT          reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    LSHIFT          reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    LT              reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    LE              reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    GE              reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    GT              reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    EQ              reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    NE              reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    AND             reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    OR              reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    XOR             reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    LAND            reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    LOR             reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    RPAREN          reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    COMMA           reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    SEMI            reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    RBRACKET        reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    COLON           reduce using rule 131 (unary_expression -> pointcut_last_keyword .)
    RBRACE          reduce using rule 131 (unary_expression -> pointcut_last_keyword .)


state 92

    (104) pointcut_max_keyword -> POINTCUT_MAX . LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> POINTCUT_MAX . LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> POINTCUT_MAX . LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> POINTCUT_MAX . LPAREN ID RPAREN

    LPAREN          shift and go to state 176


state 93

    (261) assignment_expression -> unary_expression . assignment_operator assignment_expression
    (295) cast_expression -> unary_expression .
    (262) assignment_operator -> . EQUALS
    (263) assignment_operator -> . XOREQUAL
    (264) assignment_operator -> . TIMESEQUAL
    (265) assignment_operator -> . DIVEQUAL
    (266) assignment_operator -> . MODEQUAL
    (267) assignment_operator -> . PLUSEQUAL
    (268) assignment_operator -> . MINUSEQUAL
    (269) assignment_operator -> . LSHIFTEQUAL
    (270) assignment_operator -> . RSHIFTEQUAL
    (271) assignment_operator -> . ANDEQUAL
    (272) assignment_operator -> . OREQUAL

    CONDOP          reduce using rule 295 (cast_expression -> unary_expression .)
    TIMES           reduce using rule 295 (cast_expression -> unary_expression .)
    DIVIDE          reduce using rule 295 (cast_expression -> unary_expression .)
    MOD             reduce using rule 295 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 295 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 295 (cast_expression -> unary_expression .)
    RSHIFT          reduce using rule 295 (cast_expression -> unary_expression .)
    LSHIFT          reduce using rule 295 (cast_expression -> unary_expression .)
    LT              reduce using rule 295 (cast_expression -> unary_expression .)
    LE              reduce using rule 295 (cast_expression -> unary_expression .)
    GE              reduce using rule 295 (cast_expression -> unary_expression .)
    GT              reduce using rule 295 (cast_expression -> unary_expression .)
    EQ              reduce using rule 295 (cast_expression -> unary_expression .)
    NE              reduce using rule 295 (cast_expression -> unary_expression .)
    AND             reduce using rule 295 (cast_expression -> unary_expression .)
    OR              reduce using rule 295 (cast_expression -> unary_expression .)
    XOR             reduce using rule 295 (cast_expression -> unary_expression .)
    LAND            reduce using rule 295 (cast_expression -> unary_expression .)
    LOR             reduce using rule 295 (cast_expression -> unary_expression .)
    RBRACKET        reduce using rule 295 (cast_expression -> unary_expression .)
    RPAREN          reduce using rule 295 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 295 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 295 (cast_expression -> unary_expression .)
    RBRACE          reduce using rule 295 (cast_expression -> unary_expression .)
    COLON           reduce using rule 295 (cast_expression -> unary_expression .)
    EQUALS          shift and go to state 180
    XOREQUAL        shift and go to state 181
    TIMESEQUAL      shift and go to state 187
    DIVEQUAL        shift and go to state 177
    MODEQUAL        shift and go to state 179
    PLUSEQUAL       shift and go to state 182
    MINUSEQUAL      shift and go to state 178
    LSHIFTEQUAL     shift and go to state 183
    RSHIFTEQUAL     shift and go to state 188
    ANDEQUAL        shift and go to state 185
    OREQUAL         shift and go to state 186

    assignment_operator            shift and go to state 184

state 94

    (88) pointcut_last_keyword -> POINTCUT_LAST . LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> POINTCUT_LAST . LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> POINTCUT_LAST . LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> POINTCUT_LAST . LPAREN ID RPAREN

    LPAREN          shift and go to state 189


state 95

    (332) constant -> CHAR_CONST .

    LBRACKET        reduce using rule 332 (constant -> CHAR_CONST .)
    LPAREN          reduce using rule 332 (constant -> CHAR_CONST .)
    PERIOD          reduce using rule 332 (constant -> CHAR_CONST .)
    ARROW           reduce using rule 332 (constant -> CHAR_CONST .)
    PLUSPLUS        reduce using rule 332 (constant -> CHAR_CONST .)
    MINUSMINUS      reduce using rule 332 (constant -> CHAR_CONST .)
    EQUALS          reduce using rule 332 (constant -> CHAR_CONST .)
    XOREQUAL        reduce using rule 332 (constant -> CHAR_CONST .)
    TIMESEQUAL      reduce using rule 332 (constant -> CHAR_CONST .)
    DIVEQUAL        reduce using rule 332 (constant -> CHAR_CONST .)
    MODEQUAL        reduce using rule 332 (constant -> CHAR_CONST .)
    PLUSEQUAL       reduce using rule 332 (constant -> CHAR_CONST .)
    MINUSEQUAL      reduce using rule 332 (constant -> CHAR_CONST .)
    LSHIFTEQUAL     reduce using rule 332 (constant -> CHAR_CONST .)
    RSHIFTEQUAL     reduce using rule 332 (constant -> CHAR_CONST .)
    ANDEQUAL        reduce using rule 332 (constant -> CHAR_CONST .)
    OREQUAL         reduce using rule 332 (constant -> CHAR_CONST .)
    CONDOP          reduce using rule 332 (constant -> CHAR_CONST .)
    TIMES           reduce using rule 332 (constant -> CHAR_CONST .)
    DIVIDE          reduce using rule 332 (constant -> CHAR_CONST .)
    MOD             reduce using rule 332 (constant -> CHAR_CONST .)
    PLUS            reduce using rule 332 (constant -> CHAR_CONST .)
    MINUS           reduce using rule 332 (constant -> CHAR_CONST .)
    RSHIFT          reduce using rule 332 (constant -> CHAR_CONST .)
    LSHIFT          reduce using rule 332 (constant -> CHAR_CONST .)
    LT              reduce using rule 332 (constant -> CHAR_CONST .)
    LE              reduce using rule 332 (constant -> CHAR_CONST .)
    GE              reduce using rule 332 (constant -> CHAR_CONST .)
    GT              reduce using rule 332 (constant -> CHAR_CONST .)
    EQ              reduce using rule 332 (constant -> CHAR_CONST .)
    NE              reduce using rule 332 (constant -> CHAR_CONST .)
    AND             reduce using rule 332 (constant -> CHAR_CONST .)
    OR              reduce using rule 332 (constant -> CHAR_CONST .)
    XOR             reduce using rule 332 (constant -> CHAR_CONST .)
    LAND            reduce using rule 332 (constant -> CHAR_CONST .)
    LOR             reduce using rule 332 (constant -> CHAR_CONST .)
    RBRACKET        reduce using rule 332 (constant -> CHAR_CONST .)
    COMMA           reduce using rule 332 (constant -> CHAR_CONST .)
    RBRACE          reduce using rule 332 (constant -> CHAR_CONST .)
    RPAREN          reduce using rule 332 (constant -> CHAR_CONST .)
    SEMI            reduce using rule 332 (constant -> CHAR_CONST .)
    COLON           reduce using rule 332 (constant -> CHAR_CONST .)


state 96

    (308) unary_operator -> LNOT .

    LPAREN          reduce using rule 308 (unary_operator -> LNOT .)
    PLUSPLUS        reduce using rule 308 (unary_operator -> LNOT .)
    MINUSMINUS      reduce using rule 308 (unary_operator -> LNOT .)
    SIZEOF          reduce using rule 308 (unary_operator -> LNOT .)
    POINTCUT        reduce using rule 308 (unary_operator -> LNOT .)
    POINTCUT_ADD    reduce using rule 308 (unary_operator -> LNOT .)
    POINTCUT_SUB    reduce using rule 308 (unary_operator -> LNOT .)
    POINTCUT_FIRST  reduce using rule 308 (unary_operator -> LNOT .)
    POINTCUT_LAST   reduce using rule 308 (unary_operator -> LNOT .)
    POINTCUT_MIN    reduce using rule 308 (unary_operator -> LNOT .)
    POINTCUT_MAX    reduce using rule 308 (unary_operator -> LNOT .)
    AND             reduce using rule 308 (unary_operator -> LNOT .)
    TIMES           reduce using rule 308 (unary_operator -> LNOT .)
    PLUS            reduce using rule 308 (unary_operator -> LNOT .)
    MINUS           reduce using rule 308 (unary_operator -> LNOT .)
    NOT             reduce using rule 308 (unary_operator -> LNOT .)
    LNOT            reduce using rule 308 (unary_operator -> LNOT .)
    ID              reduce using rule 308 (unary_operator -> LNOT .)
    INT_CONST_DEC   reduce using rule 308 (unary_operator -> LNOT .)
    INT_CONST_OCT   reduce using rule 308 (unary_operator -> LNOT .)
    INT_CONST_HEX   reduce using rule 308 (unary_operator -> LNOT .)
    FLOAT_CONST     reduce using rule 308 (unary_operator -> LNOT .)
    HEX_FLOAT_CONST reduce using rule 308 (unary_operator -> LNOT .)
    CHAR_CONST      reduce using rule 308 (unary_operator -> LNOT .)
    WCHAR_CONST     reduce using rule 308 (unary_operator -> LNOT .)
    STRING_LITERAL  reduce using rule 308 (unary_operator -> LNOT .)
    WSTRING_LITERAL reduce using rule 308 (unary_operator -> LNOT .)


state 97

    (333) constant -> WCHAR_CONST .

    LBRACKET        reduce using rule 333 (constant -> WCHAR_CONST .)
    LPAREN          reduce using rule 333 (constant -> WCHAR_CONST .)
    PERIOD          reduce using rule 333 (constant -> WCHAR_CONST .)
    ARROW           reduce using rule 333 (constant -> WCHAR_CONST .)
    PLUSPLUS        reduce using rule 333 (constant -> WCHAR_CONST .)
    MINUSMINUS      reduce using rule 333 (constant -> WCHAR_CONST .)
    EQUALS          reduce using rule 333 (constant -> WCHAR_CONST .)
    XOREQUAL        reduce using rule 333 (constant -> WCHAR_CONST .)
    TIMESEQUAL      reduce using rule 333 (constant -> WCHAR_CONST .)
    DIVEQUAL        reduce using rule 333 (constant -> WCHAR_CONST .)
    MODEQUAL        reduce using rule 333 (constant -> WCHAR_CONST .)
    PLUSEQUAL       reduce using rule 333 (constant -> WCHAR_CONST .)
    MINUSEQUAL      reduce using rule 333 (constant -> WCHAR_CONST .)
    LSHIFTEQUAL     reduce using rule 333 (constant -> WCHAR_CONST .)
    RSHIFTEQUAL     reduce using rule 333 (constant -> WCHAR_CONST .)
    ANDEQUAL        reduce using rule 333 (constant -> WCHAR_CONST .)
    OREQUAL         reduce using rule 333 (constant -> WCHAR_CONST .)
    CONDOP          reduce using rule 333 (constant -> WCHAR_CONST .)
    TIMES           reduce using rule 333 (constant -> WCHAR_CONST .)
    DIVIDE          reduce using rule 333 (constant -> WCHAR_CONST .)
    MOD             reduce using rule 333 (constant -> WCHAR_CONST .)
    PLUS            reduce using rule 333 (constant -> WCHAR_CONST .)
    MINUS           reduce using rule 333 (constant -> WCHAR_CONST .)
    RSHIFT          reduce using rule 333 (constant -> WCHAR_CONST .)
    LSHIFT          reduce using rule 333 (constant -> WCHAR_CONST .)
    LT              reduce using rule 333 (constant -> WCHAR_CONST .)
    LE              reduce using rule 333 (constant -> WCHAR_CONST .)
    GE              reduce using rule 333 (constant -> WCHAR_CONST .)
    GT              reduce using rule 333 (constant -> WCHAR_CONST .)
    EQ              reduce using rule 333 (constant -> WCHAR_CONST .)
    NE              reduce using rule 333 (constant -> WCHAR_CONST .)
    AND             reduce using rule 333 (constant -> WCHAR_CONST .)
    OR              reduce using rule 333 (constant -> WCHAR_CONST .)
    XOR             reduce using rule 333 (constant -> WCHAR_CONST .)
    LAND            reduce using rule 333 (constant -> WCHAR_CONST .)
    LOR             reduce using rule 333 (constant -> WCHAR_CONST .)
    RBRACKET        reduce using rule 333 (constant -> WCHAR_CONST .)
    COMMA           reduce using rule 333 (constant -> WCHAR_CONST .)
    RBRACE          reduce using rule 333 (constant -> WCHAR_CONST .)
    RPAREN          reduce using rule 333 (constant -> WCHAR_CONST .)
    SEMI            reduce using rule 333 (constant -> WCHAR_CONST .)
    COLON           reduce using rule 333 (constant -> WCHAR_CONST .)


state 98

    (330) constant -> FLOAT_CONST .

    LBRACKET        reduce using rule 330 (constant -> FLOAT_CONST .)
    LPAREN          reduce using rule 330 (constant -> FLOAT_CONST .)
    PERIOD          reduce using rule 330 (constant -> FLOAT_CONST .)
    ARROW           reduce using rule 330 (constant -> FLOAT_CONST .)
    PLUSPLUS        reduce using rule 330 (constant -> FLOAT_CONST .)
    MINUSMINUS      reduce using rule 330 (constant -> FLOAT_CONST .)
    EQUALS          reduce using rule 330 (constant -> FLOAT_CONST .)
    XOREQUAL        reduce using rule 330 (constant -> FLOAT_CONST .)
    TIMESEQUAL      reduce using rule 330 (constant -> FLOAT_CONST .)
    DIVEQUAL        reduce using rule 330 (constant -> FLOAT_CONST .)
    MODEQUAL        reduce using rule 330 (constant -> FLOAT_CONST .)
    PLUSEQUAL       reduce using rule 330 (constant -> FLOAT_CONST .)
    MINUSEQUAL      reduce using rule 330 (constant -> FLOAT_CONST .)
    LSHIFTEQUAL     reduce using rule 330 (constant -> FLOAT_CONST .)
    RSHIFTEQUAL     reduce using rule 330 (constant -> FLOAT_CONST .)
    ANDEQUAL        reduce using rule 330 (constant -> FLOAT_CONST .)
    OREQUAL         reduce using rule 330 (constant -> FLOAT_CONST .)
    CONDOP          reduce using rule 330 (constant -> FLOAT_CONST .)
    TIMES           reduce using rule 330 (constant -> FLOAT_CONST .)
    DIVIDE          reduce using rule 330 (constant -> FLOAT_CONST .)
    MOD             reduce using rule 330 (constant -> FLOAT_CONST .)
    PLUS            reduce using rule 330 (constant -> FLOAT_CONST .)
    MINUS           reduce using rule 330 (constant -> FLOAT_CONST .)
    RSHIFT          reduce using rule 330 (constant -> FLOAT_CONST .)
    LSHIFT          reduce using rule 330 (constant -> FLOAT_CONST .)
    LT              reduce using rule 330 (constant -> FLOAT_CONST .)
    LE              reduce using rule 330 (constant -> FLOAT_CONST .)
    GE              reduce using rule 330 (constant -> FLOAT_CONST .)
    GT              reduce using rule 330 (constant -> FLOAT_CONST .)
    EQ              reduce using rule 330 (constant -> FLOAT_CONST .)
    NE              reduce using rule 330 (constant -> FLOAT_CONST .)
    AND             reduce using rule 330 (constant -> FLOAT_CONST .)
    OR              reduce using rule 330 (constant -> FLOAT_CONST .)
    XOR             reduce using rule 330 (constant -> FLOAT_CONST .)
    LAND            reduce using rule 330 (constant -> FLOAT_CONST .)
    LOR             reduce using rule 330 (constant -> FLOAT_CONST .)
    RBRACKET        reduce using rule 330 (constant -> FLOAT_CONST .)
    COMMA           reduce using rule 330 (constant -> FLOAT_CONST .)
    RBRACE          reduce using rule 330 (constant -> FLOAT_CONST .)
    RPAREN          reduce using rule 330 (constant -> FLOAT_CONST .)
    SEMI            reduce using rule 330 (constant -> FLOAT_CONST .)
    COLON           reduce using rule 330 (constant -> FLOAT_CONST .)


state 99

    (336) unified_wstring_literal -> WSTRING_LITERAL .

    WSTRING_LITERAL reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LBRACKET        reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LPAREN          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    PERIOD          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    ARROW           reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    PLUSPLUS        reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    MINUSMINUS      reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    EQUALS          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    XOREQUAL        reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    TIMESEQUAL      reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    DIVEQUAL        reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    MODEQUAL        reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    PLUSEQUAL       reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    MINUSEQUAL      reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LSHIFTEQUAL     reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    RSHIFTEQUAL     reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    ANDEQUAL        reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    OREQUAL         reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    CONDOP          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    TIMES           reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    DIVIDE          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    MOD             reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    PLUS            reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    MINUS           reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    RSHIFT          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LSHIFT          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LT              reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LE              reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    GE              reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    GT              reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    EQ              reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    NE              reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    AND             reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    OR              reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    XOR             reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LAND            reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    LOR             reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    RPAREN          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    COMMA           reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    SEMI            reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    RBRACKET        reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    COLON           reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)
    RBRACE          reduce using rule 336 (unified_wstring_literal -> WSTRING_LITERAL .)


state 100

    (320) primary_expression -> constant .

    LBRACKET        reduce using rule 320 (primary_expression -> constant .)
    LPAREN          reduce using rule 320 (primary_expression -> constant .)
    PERIOD          reduce using rule 320 (primary_expression -> constant .)
    ARROW           reduce using rule 320 (primary_expression -> constant .)
    PLUSPLUS        reduce using rule 320 (primary_expression -> constant .)
    MINUSMINUS      reduce using rule 320 (primary_expression -> constant .)
    EQUALS          reduce using rule 320 (primary_expression -> constant .)
    XOREQUAL        reduce using rule 320 (primary_expression -> constant .)
    TIMESEQUAL      reduce using rule 320 (primary_expression -> constant .)
    DIVEQUAL        reduce using rule 320 (primary_expression -> constant .)
    MODEQUAL        reduce using rule 320 (primary_expression -> constant .)
    PLUSEQUAL       reduce using rule 320 (primary_expression -> constant .)
    MINUSEQUAL      reduce using rule 320 (primary_expression -> constant .)
    LSHIFTEQUAL     reduce using rule 320 (primary_expression -> constant .)
    RSHIFTEQUAL     reduce using rule 320 (primary_expression -> constant .)
    ANDEQUAL        reduce using rule 320 (primary_expression -> constant .)
    OREQUAL         reduce using rule 320 (primary_expression -> constant .)
    CONDOP          reduce using rule 320 (primary_expression -> constant .)
    TIMES           reduce using rule 320 (primary_expression -> constant .)
    DIVIDE          reduce using rule 320 (primary_expression -> constant .)
    MOD             reduce using rule 320 (primary_expression -> constant .)
    PLUS            reduce using rule 320 (primary_expression -> constant .)
    MINUS           reduce using rule 320 (primary_expression -> constant .)
    RSHIFT          reduce using rule 320 (primary_expression -> constant .)
    LSHIFT          reduce using rule 320 (primary_expression -> constant .)
    LT              reduce using rule 320 (primary_expression -> constant .)
    LE              reduce using rule 320 (primary_expression -> constant .)
    GE              reduce using rule 320 (primary_expression -> constant .)
    GT              reduce using rule 320 (primary_expression -> constant .)
    EQ              reduce using rule 320 (primary_expression -> constant .)
    NE              reduce using rule 320 (primary_expression -> constant .)
    AND             reduce using rule 320 (primary_expression -> constant .)
    OR              reduce using rule 320 (primary_expression -> constant .)
    XOR             reduce using rule 320 (primary_expression -> constant .)
    LAND            reduce using rule 320 (primary_expression -> constant .)
    LOR             reduce using rule 320 (primary_expression -> constant .)
    RPAREN          reduce using rule 320 (primary_expression -> constant .)
    COMMA           reduce using rule 320 (primary_expression -> constant .)
    SEMI            reduce using rule 320 (primary_expression -> constant .)
    COLON           reduce using rule 320 (primary_expression -> constant .)
    RBRACE          reduce using rule 320 (primary_expression -> constant .)
    RBRACKET        reduce using rule 320 (primary_expression -> constant .)


state 101

    (301) unary_expression -> SIZEOF . unary_expression
    (302) unary_expression -> SIZEOF . LPAREN type_name RPAREN
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 191
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 190
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 102

    (306) unary_operator -> MINUS .

    LPAREN          reduce using rule 306 (unary_operator -> MINUS .)
    PLUSPLUS        reduce using rule 306 (unary_operator -> MINUS .)
    MINUSMINUS      reduce using rule 306 (unary_operator -> MINUS .)
    SIZEOF          reduce using rule 306 (unary_operator -> MINUS .)
    POINTCUT        reduce using rule 306 (unary_operator -> MINUS .)
    POINTCUT_ADD    reduce using rule 306 (unary_operator -> MINUS .)
    POINTCUT_SUB    reduce using rule 306 (unary_operator -> MINUS .)
    POINTCUT_FIRST  reduce using rule 306 (unary_operator -> MINUS .)
    POINTCUT_LAST   reduce using rule 306 (unary_operator -> MINUS .)
    POINTCUT_MIN    reduce using rule 306 (unary_operator -> MINUS .)
    POINTCUT_MAX    reduce using rule 306 (unary_operator -> MINUS .)
    AND             reduce using rule 306 (unary_operator -> MINUS .)
    TIMES           reduce using rule 306 (unary_operator -> MINUS .)
    PLUS            reduce using rule 306 (unary_operator -> MINUS .)
    MINUS           reduce using rule 306 (unary_operator -> MINUS .)
    NOT             reduce using rule 306 (unary_operator -> MINUS .)
    LNOT            reduce using rule 306 (unary_operator -> MINUS .)
    ID              reduce using rule 306 (unary_operator -> MINUS .)
    INT_CONST_DEC   reduce using rule 306 (unary_operator -> MINUS .)
    INT_CONST_OCT   reduce using rule 306 (unary_operator -> MINUS .)
    INT_CONST_HEX   reduce using rule 306 (unary_operator -> MINUS .)
    FLOAT_CONST     reduce using rule 306 (unary_operator -> MINUS .)
    HEX_FLOAT_CONST reduce using rule 306 (unary_operator -> MINUS .)
    CHAR_CONST      reduce using rule 306 (unary_operator -> MINUS .)
    WCHAR_CONST     reduce using rule 306 (unary_operator -> MINUS .)
    STRING_LITERAL  reduce using rule 306 (unary_operator -> MINUS .)
    WSTRING_LITERAL reduce using rule 306 (unary_operator -> MINUS .)


state 103

    (130) unary_expression -> pointcut_first_keyword .

    EQUALS          reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    XOREQUAL        reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    TIMESEQUAL      reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    DIVEQUAL        reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    MODEQUAL        reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    PLUSEQUAL       reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    MINUSEQUAL      reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    LSHIFTEQUAL     reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    RSHIFTEQUAL     reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    ANDEQUAL        reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    OREQUAL         reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    CONDOP          reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    TIMES           reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    DIVIDE          reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    MOD             reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    PLUS            reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    MINUS           reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    RSHIFT          reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    LSHIFT          reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    LT              reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    LE              reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    GE              reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    GT              reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    EQ              reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    NE              reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    AND             reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    OR              reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    XOR             reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    LAND            reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    LOR             reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    RPAREN          reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    COMMA           reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    SEMI            reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    RBRACKET        reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    COLON           reduce using rule 130 (unary_expression -> pointcut_first_keyword .)
    RBRACE          reduce using rule 130 (unary_expression -> pointcut_first_keyword .)


state 104

    (128) unary_expression -> pointcut_add_keyword .

    EQUALS          reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    XOREQUAL        reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    TIMESEQUAL      reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    DIVEQUAL        reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    MODEQUAL        reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    PLUSEQUAL       reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    MINUSEQUAL      reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    LSHIFTEQUAL     reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    RSHIFTEQUAL     reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    ANDEQUAL        reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    OREQUAL         reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    CONDOP          reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    TIMES           reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    DIVIDE          reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    MOD             reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    PLUS            reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    MINUS           reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    RSHIFT          reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    LSHIFT          reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    LT              reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    LE              reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    GE              reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    GT              reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    EQ              reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    NE              reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    AND             reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    OR              reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    XOR             reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    LAND            reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    LOR             reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    RPAREN          reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    COMMA           reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    SEMI            reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    RBRACKET        reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    COLON           reduce using rule 128 (unary_expression -> pointcut_add_keyword .)
    RBRACE          reduce using rule 128 (unary_expression -> pointcut_add_keyword .)


state 105

    (132) unary_expression -> pointcut_min_keyword .

    EQUALS          reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    XOREQUAL        reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    TIMESEQUAL      reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    DIVEQUAL        reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    MODEQUAL        reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    PLUSEQUAL       reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    MINUSEQUAL      reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    LSHIFTEQUAL     reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    RSHIFTEQUAL     reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    ANDEQUAL        reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    OREQUAL         reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    CONDOP          reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    TIMES           reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    DIVIDE          reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    MOD             reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    PLUS            reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    MINUS           reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    RSHIFT          reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    LSHIFT          reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    LT              reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    LE              reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    GE              reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    GT              reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    EQ              reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    NE              reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    AND             reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    OR              reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    XOR             reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    LAND            reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    LOR             reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    RPAREN          reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    COMMA           reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    SEMI            reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    RBRACKET        reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    COLON           reduce using rule 132 (unary_expression -> pointcut_min_keyword .)
    RBRACE          reduce using rule 132 (unary_expression -> pointcut_min_keyword .)


state 106

    (321) primary_expression -> unified_string_literal .
    (335) unified_string_literal -> unified_string_literal . STRING_LITERAL

    LBRACKET        reduce using rule 321 (primary_expression -> unified_string_literal .)
    LPAREN          reduce using rule 321 (primary_expression -> unified_string_literal .)
    PERIOD          reduce using rule 321 (primary_expression -> unified_string_literal .)
    ARROW           reduce using rule 321 (primary_expression -> unified_string_literal .)
    PLUSPLUS        reduce using rule 321 (primary_expression -> unified_string_literal .)
    MINUSMINUS      reduce using rule 321 (primary_expression -> unified_string_literal .)
    EQUALS          reduce using rule 321 (primary_expression -> unified_string_literal .)
    XOREQUAL        reduce using rule 321 (primary_expression -> unified_string_literal .)
    TIMESEQUAL      reduce using rule 321 (primary_expression -> unified_string_literal .)
    DIVEQUAL        reduce using rule 321 (primary_expression -> unified_string_literal .)
    MODEQUAL        reduce using rule 321 (primary_expression -> unified_string_literal .)
    PLUSEQUAL       reduce using rule 321 (primary_expression -> unified_string_literal .)
    MINUSEQUAL      reduce using rule 321 (primary_expression -> unified_string_literal .)
    LSHIFTEQUAL     reduce using rule 321 (primary_expression -> unified_string_literal .)
    RSHIFTEQUAL     reduce using rule 321 (primary_expression -> unified_string_literal .)
    ANDEQUAL        reduce using rule 321 (primary_expression -> unified_string_literal .)
    OREQUAL         reduce using rule 321 (primary_expression -> unified_string_literal .)
    CONDOP          reduce using rule 321 (primary_expression -> unified_string_literal .)
    TIMES           reduce using rule 321 (primary_expression -> unified_string_literal .)
    DIVIDE          reduce using rule 321 (primary_expression -> unified_string_literal .)
    MOD             reduce using rule 321 (primary_expression -> unified_string_literal .)
    PLUS            reduce using rule 321 (primary_expression -> unified_string_literal .)
    MINUS           reduce using rule 321 (primary_expression -> unified_string_literal .)
    RSHIFT          reduce using rule 321 (primary_expression -> unified_string_literal .)
    LSHIFT          reduce using rule 321 (primary_expression -> unified_string_literal .)
    LT              reduce using rule 321 (primary_expression -> unified_string_literal .)
    LE              reduce using rule 321 (primary_expression -> unified_string_literal .)
    GE              reduce using rule 321 (primary_expression -> unified_string_literal .)
    GT              reduce using rule 321 (primary_expression -> unified_string_literal .)
    EQ              reduce using rule 321 (primary_expression -> unified_string_literal .)
    NE              reduce using rule 321 (primary_expression -> unified_string_literal .)
    AND             reduce using rule 321 (primary_expression -> unified_string_literal .)
    OR              reduce using rule 321 (primary_expression -> unified_string_literal .)
    XOR             reduce using rule 321 (primary_expression -> unified_string_literal .)
    LAND            reduce using rule 321 (primary_expression -> unified_string_literal .)
    LOR             reduce using rule 321 (primary_expression -> unified_string_literal .)
    RPAREN          reduce using rule 321 (primary_expression -> unified_string_literal .)
    COMMA           reduce using rule 321 (primary_expression -> unified_string_literal .)
    SEMI            reduce using rule 321 (primary_expression -> unified_string_literal .)
    COLON           reduce using rule 321 (primary_expression -> unified_string_literal .)
    RBRACE          reduce using rule 321 (primary_expression -> unified_string_literal .)
    RBRACKET        reduce using rule 321 (primary_expression -> unified_string_literal .)
    STRING_LITERAL  shift and go to state 193


state 107

    (297) unary_expression -> postfix_expression .
    (310) postfix_expression -> postfix_expression . LBRACKET expression RBRACKET
    (311) postfix_expression -> postfix_expression . LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> postfix_expression . LPAREN RPAREN
    (313) postfix_expression -> postfix_expression . PERIOD identifier
    (314) postfix_expression -> postfix_expression . ARROW identifier
    (315) postfix_expression -> postfix_expression . PLUSPLUS
    (316) postfix_expression -> postfix_expression . MINUSMINUS

    EQUALS          reduce using rule 297 (unary_expression -> postfix_expression .)
    XOREQUAL        reduce using rule 297 (unary_expression -> postfix_expression .)
    TIMESEQUAL      reduce using rule 297 (unary_expression -> postfix_expression .)
    DIVEQUAL        reduce using rule 297 (unary_expression -> postfix_expression .)
    MODEQUAL        reduce using rule 297 (unary_expression -> postfix_expression .)
    PLUSEQUAL       reduce using rule 297 (unary_expression -> postfix_expression .)
    MINUSEQUAL      reduce using rule 297 (unary_expression -> postfix_expression .)
    LSHIFTEQUAL     reduce using rule 297 (unary_expression -> postfix_expression .)
    RSHIFTEQUAL     reduce using rule 297 (unary_expression -> postfix_expression .)
    ANDEQUAL        reduce using rule 297 (unary_expression -> postfix_expression .)
    OREQUAL         reduce using rule 297 (unary_expression -> postfix_expression .)
    CONDOP          reduce using rule 297 (unary_expression -> postfix_expression .)
    TIMES           reduce using rule 297 (unary_expression -> postfix_expression .)
    DIVIDE          reduce using rule 297 (unary_expression -> postfix_expression .)
    MOD             reduce using rule 297 (unary_expression -> postfix_expression .)
    PLUS            reduce using rule 297 (unary_expression -> postfix_expression .)
    MINUS           reduce using rule 297 (unary_expression -> postfix_expression .)
    RSHIFT          reduce using rule 297 (unary_expression -> postfix_expression .)
    LSHIFT          reduce using rule 297 (unary_expression -> postfix_expression .)
    LT              reduce using rule 297 (unary_expression -> postfix_expression .)
    LE              reduce using rule 297 (unary_expression -> postfix_expression .)
    GE              reduce using rule 297 (unary_expression -> postfix_expression .)
    GT              reduce using rule 297 (unary_expression -> postfix_expression .)
    EQ              reduce using rule 297 (unary_expression -> postfix_expression .)
    NE              reduce using rule 297 (unary_expression -> postfix_expression .)
    AND             reduce using rule 297 (unary_expression -> postfix_expression .)
    OR              reduce using rule 297 (unary_expression -> postfix_expression .)
    XOR             reduce using rule 297 (unary_expression -> postfix_expression .)
    LAND            reduce using rule 297 (unary_expression -> postfix_expression .)
    LOR             reduce using rule 297 (unary_expression -> postfix_expression .)
    RPAREN          reduce using rule 297 (unary_expression -> postfix_expression .)
    COMMA           reduce using rule 297 (unary_expression -> postfix_expression .)
    SEMI            reduce using rule 297 (unary_expression -> postfix_expression .)
    RBRACKET        reduce using rule 297 (unary_expression -> postfix_expression .)
    COLON           reduce using rule 297 (unary_expression -> postfix_expression .)
    RBRACE          reduce using rule 297 (unary_expression -> postfix_expression .)
    LBRACKET        shift and go to state 197
    LPAREN          shift and go to state 198
    PERIOD          shift and go to state 196
    ARROW           shift and go to state 194
    PLUSPLUS        shift and go to state 195
    MINUSMINUS      shift and go to state 199


state 108

    (199) direct_declarator -> direct_declarator LBRACKET assignment_expression_opt . RBRACKET

    RBRACKET        shift and go to state 200


state 109

    (75) pointcut_sub_keyword -> POINTCUT_SUB . LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> POINTCUT_SUB . LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> POINTCUT_SUB . LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> POINTCUT_SUB . LPAREN ID RPAREN

    LPAREN          shift and go to state 201


state 110

    (300) unary_expression -> unary_operator . cast_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 202
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 203
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 111

    (276) binary_expression -> cast_expression .

    TIMES           reduce using rule 276 (binary_expression -> cast_expression .)
    DIVIDE          reduce using rule 276 (binary_expression -> cast_expression .)
    MOD             reduce using rule 276 (binary_expression -> cast_expression .)
    PLUS            reduce using rule 276 (binary_expression -> cast_expression .)
    MINUS           reduce using rule 276 (binary_expression -> cast_expression .)
    RSHIFT          reduce using rule 276 (binary_expression -> cast_expression .)
    LSHIFT          reduce using rule 276 (binary_expression -> cast_expression .)
    LT              reduce using rule 276 (binary_expression -> cast_expression .)
    LE              reduce using rule 276 (binary_expression -> cast_expression .)
    GE              reduce using rule 276 (binary_expression -> cast_expression .)
    GT              reduce using rule 276 (binary_expression -> cast_expression .)
    EQ              reduce using rule 276 (binary_expression -> cast_expression .)
    NE              reduce using rule 276 (binary_expression -> cast_expression .)
    AND             reduce using rule 276 (binary_expression -> cast_expression .)
    OR              reduce using rule 276 (binary_expression -> cast_expression .)
    XOR             reduce using rule 276 (binary_expression -> cast_expression .)
    LAND            reduce using rule 276 (binary_expression -> cast_expression .)
    LOR             reduce using rule 276 (binary_expression -> cast_expression .)
    CONDOP          reduce using rule 276 (binary_expression -> cast_expression .)
    RBRACKET        reduce using rule 276 (binary_expression -> cast_expression .)
    RPAREN          reduce using rule 276 (binary_expression -> cast_expression .)
    COMMA           reduce using rule 276 (binary_expression -> cast_expression .)
    SEMI            reduce using rule 276 (binary_expression -> cast_expression .)
    COLON           reduce using rule 276 (binary_expression -> cast_expression .)
    RBRACE          reduce using rule 276 (binary_expression -> cast_expression .)


state 112

    (129) unary_expression -> pointcut_sub_keyword .

    EQUALS          reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    XOREQUAL        reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    TIMESEQUAL      reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    DIVEQUAL        reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    MODEQUAL        reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    PLUSEQUAL       reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    MINUSEQUAL      reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    LSHIFTEQUAL     reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    RSHIFTEQUAL     reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    ANDEQUAL        reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    OREQUAL         reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    CONDOP          reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    TIMES           reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    DIVIDE          reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    MOD             reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    PLUS            reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    MINUS           reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    RSHIFT          reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    LSHIFT          reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    LT              reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    LE              reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    GE              reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    GT              reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    EQ              reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    NE              reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    AND             reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    OR              reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    XOR             reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    LAND            reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    LOR             reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    RPAREN          reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    COMMA           reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    SEMI            reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    RBRACKET        reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    COLON           reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)
    RBRACE          reduce using rule 129 (unary_expression -> pointcut_sub_keyword .)


state 113

    (3) assignment_expression_opt -> empty .

    RBRACKET        reduce using rule 3 (assignment_expression_opt -> empty .)


state 114

    (305) unary_operator -> PLUS .

    LPAREN          reduce using rule 305 (unary_operator -> PLUS .)
    PLUSPLUS        reduce using rule 305 (unary_operator -> PLUS .)
    MINUSMINUS      reduce using rule 305 (unary_operator -> PLUS .)
    SIZEOF          reduce using rule 305 (unary_operator -> PLUS .)
    POINTCUT        reduce using rule 305 (unary_operator -> PLUS .)
    POINTCUT_ADD    reduce using rule 305 (unary_operator -> PLUS .)
    POINTCUT_SUB    reduce using rule 305 (unary_operator -> PLUS .)
    POINTCUT_FIRST  reduce using rule 305 (unary_operator -> PLUS .)
    POINTCUT_LAST   reduce using rule 305 (unary_operator -> PLUS .)
    POINTCUT_MIN    reduce using rule 305 (unary_operator -> PLUS .)
    POINTCUT_MAX    reduce using rule 305 (unary_operator -> PLUS .)
    AND             reduce using rule 305 (unary_operator -> PLUS .)
    TIMES           reduce using rule 305 (unary_operator -> PLUS .)
    PLUS            reduce using rule 305 (unary_operator -> PLUS .)
    MINUS           reduce using rule 305 (unary_operator -> PLUS .)
    NOT             reduce using rule 305 (unary_operator -> PLUS .)
    LNOT            reduce using rule 305 (unary_operator -> PLUS .)
    ID              reduce using rule 305 (unary_operator -> PLUS .)
    INT_CONST_DEC   reduce using rule 305 (unary_operator -> PLUS .)
    INT_CONST_OCT   reduce using rule 305 (unary_operator -> PLUS .)
    INT_CONST_HEX   reduce using rule 305 (unary_operator -> PLUS .)
    FLOAT_CONST     reduce using rule 305 (unary_operator -> PLUS .)
    HEX_FLOAT_CONST reduce using rule 305 (unary_operator -> PLUS .)
    CHAR_CONST      reduce using rule 305 (unary_operator -> PLUS .)
    WCHAR_CONST     reduce using rule 305 (unary_operator -> PLUS .)
    STRING_LITERAL  reduce using rule 305 (unary_operator -> PLUS .)
    WSTRING_LITERAL reduce using rule 305 (unary_operator -> PLUS .)


state 115

    (4) assignment_expression_opt -> assignment_expression .

    RBRACKET        reduce using rule 4 (assignment_expression_opt -> assignment_expression .)


state 116

    (319) primary_expression -> identifier .

    LBRACKET        reduce using rule 319 (primary_expression -> identifier .)
    LPAREN          reduce using rule 319 (primary_expression -> identifier .)
    PERIOD          reduce using rule 319 (primary_expression -> identifier .)
    ARROW           reduce using rule 319 (primary_expression -> identifier .)
    PLUSPLUS        reduce using rule 319 (primary_expression -> identifier .)
    MINUSMINUS      reduce using rule 319 (primary_expression -> identifier .)
    EQUALS          reduce using rule 319 (primary_expression -> identifier .)
    XOREQUAL        reduce using rule 319 (primary_expression -> identifier .)
    TIMESEQUAL      reduce using rule 319 (primary_expression -> identifier .)
    DIVEQUAL        reduce using rule 319 (primary_expression -> identifier .)
    MODEQUAL        reduce using rule 319 (primary_expression -> identifier .)
    PLUSEQUAL       reduce using rule 319 (primary_expression -> identifier .)
    MINUSEQUAL      reduce using rule 319 (primary_expression -> identifier .)
    LSHIFTEQUAL     reduce using rule 319 (primary_expression -> identifier .)
    RSHIFTEQUAL     reduce using rule 319 (primary_expression -> identifier .)
    ANDEQUAL        reduce using rule 319 (primary_expression -> identifier .)
    OREQUAL         reduce using rule 319 (primary_expression -> identifier .)
    CONDOP          reduce using rule 319 (primary_expression -> identifier .)
    TIMES           reduce using rule 319 (primary_expression -> identifier .)
    DIVIDE          reduce using rule 319 (primary_expression -> identifier .)
    MOD             reduce using rule 319 (primary_expression -> identifier .)
    PLUS            reduce using rule 319 (primary_expression -> identifier .)
    MINUS           reduce using rule 319 (primary_expression -> identifier .)
    RSHIFT          reduce using rule 319 (primary_expression -> identifier .)
    LSHIFT          reduce using rule 319 (primary_expression -> identifier .)
    LT              reduce using rule 319 (primary_expression -> identifier .)
    LE              reduce using rule 319 (primary_expression -> identifier .)
    GE              reduce using rule 319 (primary_expression -> identifier .)
    GT              reduce using rule 319 (primary_expression -> identifier .)
    EQ              reduce using rule 319 (primary_expression -> identifier .)
    NE              reduce using rule 319 (primary_expression -> identifier .)
    AND             reduce using rule 319 (primary_expression -> identifier .)
    OR              reduce using rule 319 (primary_expression -> identifier .)
    XOR             reduce using rule 319 (primary_expression -> identifier .)
    LAND            reduce using rule 319 (primary_expression -> identifier .)
    LOR             reduce using rule 319 (primary_expression -> identifier .)
    RPAREN          reduce using rule 319 (primary_expression -> identifier .)
    COMMA           reduce using rule 319 (primary_expression -> identifier .)
    SEMI            reduce using rule 319 (primary_expression -> identifier .)
    COLON           reduce using rule 319 (primary_expression -> identifier .)
    RBRACE          reduce using rule 319 (primary_expression -> identifier .)
    RBRACKET        reduce using rule 319 (primary_expression -> identifier .)


state 117

    (298) unary_expression -> PLUSPLUS . unary_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 206
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 205
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 118

    (133) unary_expression -> pointcut_max_keyword .

    EQUALS          reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    XOREQUAL        reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    TIMESEQUAL      reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    DIVEQUAL        reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    MODEQUAL        reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    PLUSEQUAL       reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    MINUSEQUAL      reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    LSHIFTEQUAL     reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    RSHIFTEQUAL     reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    ANDEQUAL        reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    OREQUAL         reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    CONDOP          reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    TIMES           reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    DIVIDE          reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    MOD             reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    PLUS            reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    MINUS           reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    RSHIFT          reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    LSHIFT          reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    LT              reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    LE              reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    GE              reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    GT              reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    EQ              reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    NE              reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    AND             reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    OR              reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    XOR             reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    LAND            reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    LOR             reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    RPAREN          reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    COMMA           reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    SEMI            reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    RBRACKET        reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    COLON           reduce using rule 133 (unary_expression -> pointcut_max_keyword .)
    RBRACE          reduce using rule 133 (unary_expression -> pointcut_max_keyword .)


state 119

    (329) constant -> INT_CONST_HEX .

    LBRACKET        reduce using rule 329 (constant -> INT_CONST_HEX .)
    LPAREN          reduce using rule 329 (constant -> INT_CONST_HEX .)
    PERIOD          reduce using rule 329 (constant -> INT_CONST_HEX .)
    ARROW           reduce using rule 329 (constant -> INT_CONST_HEX .)
    PLUSPLUS        reduce using rule 329 (constant -> INT_CONST_HEX .)
    MINUSMINUS      reduce using rule 329 (constant -> INT_CONST_HEX .)
    EQUALS          reduce using rule 329 (constant -> INT_CONST_HEX .)
    XOREQUAL        reduce using rule 329 (constant -> INT_CONST_HEX .)
    TIMESEQUAL      reduce using rule 329 (constant -> INT_CONST_HEX .)
    DIVEQUAL        reduce using rule 329 (constant -> INT_CONST_HEX .)
    MODEQUAL        reduce using rule 329 (constant -> INT_CONST_HEX .)
    PLUSEQUAL       reduce using rule 329 (constant -> INT_CONST_HEX .)
    MINUSEQUAL      reduce using rule 329 (constant -> INT_CONST_HEX .)
    LSHIFTEQUAL     reduce using rule 329 (constant -> INT_CONST_HEX .)
    RSHIFTEQUAL     reduce using rule 329 (constant -> INT_CONST_HEX .)
    ANDEQUAL        reduce using rule 329 (constant -> INT_CONST_HEX .)
    OREQUAL         reduce using rule 329 (constant -> INT_CONST_HEX .)
    CONDOP          reduce using rule 329 (constant -> INT_CONST_HEX .)
    TIMES           reduce using rule 329 (constant -> INT_CONST_HEX .)
    DIVIDE          reduce using rule 329 (constant -> INT_CONST_HEX .)
    MOD             reduce using rule 329 (constant -> INT_CONST_HEX .)
    PLUS            reduce using rule 329 (constant -> INT_CONST_HEX .)
    MINUS           reduce using rule 329 (constant -> INT_CONST_HEX .)
    RSHIFT          reduce using rule 329 (constant -> INT_CONST_HEX .)
    LSHIFT          reduce using rule 329 (constant -> INT_CONST_HEX .)
    LT              reduce using rule 329 (constant -> INT_CONST_HEX .)
    LE              reduce using rule 329 (constant -> INT_CONST_HEX .)
    GE              reduce using rule 329 (constant -> INT_CONST_HEX .)
    GT              reduce using rule 329 (constant -> INT_CONST_HEX .)
    EQ              reduce using rule 329 (constant -> INT_CONST_HEX .)
    NE              reduce using rule 329 (constant -> INT_CONST_HEX .)
    AND             reduce using rule 329 (constant -> INT_CONST_HEX .)
    OR              reduce using rule 329 (constant -> INT_CONST_HEX .)
    XOR             reduce using rule 329 (constant -> INT_CONST_HEX .)
    LAND            reduce using rule 329 (constant -> INT_CONST_HEX .)
    LOR             reduce using rule 329 (constant -> INT_CONST_HEX .)
    RBRACKET        reduce using rule 329 (constant -> INT_CONST_HEX .)
    COMMA           reduce using rule 329 (constant -> INT_CONST_HEX .)
    RBRACE          reduce using rule 329 (constant -> INT_CONST_HEX .)
    RPAREN          reduce using rule 329 (constant -> INT_CONST_HEX .)
    SEMI            reduce using rule 329 (constant -> INT_CONST_HEX .)
    COLON           reduce using rule 329 (constant -> INT_CONST_HEX .)


state 120

    (200) direct_declarator -> direct_declarator LBRACKET TIMES . RBRACKET
    (304) unary_operator -> TIMES .

    RBRACKET        shift and go to state 207
    LPAREN          reduce using rule 304 (unary_operator -> TIMES .)
    PLUSPLUS        reduce using rule 304 (unary_operator -> TIMES .)
    MINUSMINUS      reduce using rule 304 (unary_operator -> TIMES .)
    SIZEOF          reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT        reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_ADD    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_SUB    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_FIRST  reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_LAST   reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MIN    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MAX    reduce using rule 304 (unary_operator -> TIMES .)
    AND             reduce using rule 304 (unary_operator -> TIMES .)
    TIMES           reduce using rule 304 (unary_operator -> TIMES .)
    PLUS            reduce using rule 304 (unary_operator -> TIMES .)
    MINUS           reduce using rule 304 (unary_operator -> TIMES .)
    NOT             reduce using rule 304 (unary_operator -> TIMES .)
    LNOT            reduce using rule 304 (unary_operator -> TIMES .)
    ID              reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_DEC   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_OCT   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_HEX   reduce using rule 304 (unary_operator -> TIMES .)
    FLOAT_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    HEX_FLOAT_CONST reduce using rule 304 (unary_operator -> TIMES .)
    CHAR_CONST      reduce using rule 304 (unary_operator -> TIMES .)
    WCHAR_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    STRING_LITERAL  reduce using rule 304 (unary_operator -> TIMES .)
    WSTRING_LITERAL reduce using rule 304 (unary_operator -> TIMES .)


state 121

    (309) postfix_expression -> primary_expression .

    LBRACKET        reduce using rule 309 (postfix_expression -> primary_expression .)
    LPAREN          reduce using rule 309 (postfix_expression -> primary_expression .)
    PERIOD          reduce using rule 309 (postfix_expression -> primary_expression .)
    ARROW           reduce using rule 309 (postfix_expression -> primary_expression .)
    PLUSPLUS        reduce using rule 309 (postfix_expression -> primary_expression .)
    MINUSMINUS      reduce using rule 309 (postfix_expression -> primary_expression .)
    EQUALS          reduce using rule 309 (postfix_expression -> primary_expression .)
    XOREQUAL        reduce using rule 309 (postfix_expression -> primary_expression .)
    TIMESEQUAL      reduce using rule 309 (postfix_expression -> primary_expression .)
    DIVEQUAL        reduce using rule 309 (postfix_expression -> primary_expression .)
    MODEQUAL        reduce using rule 309 (postfix_expression -> primary_expression .)
    PLUSEQUAL       reduce using rule 309 (postfix_expression -> primary_expression .)
    MINUSEQUAL      reduce using rule 309 (postfix_expression -> primary_expression .)
    LSHIFTEQUAL     reduce using rule 309 (postfix_expression -> primary_expression .)
    RSHIFTEQUAL     reduce using rule 309 (postfix_expression -> primary_expression .)
    ANDEQUAL        reduce using rule 309 (postfix_expression -> primary_expression .)
    OREQUAL         reduce using rule 309 (postfix_expression -> primary_expression .)
    CONDOP          reduce using rule 309 (postfix_expression -> primary_expression .)
    TIMES           reduce using rule 309 (postfix_expression -> primary_expression .)
    DIVIDE          reduce using rule 309 (postfix_expression -> primary_expression .)
    MOD             reduce using rule 309 (postfix_expression -> primary_expression .)
    PLUS            reduce using rule 309 (postfix_expression -> primary_expression .)
    MINUS           reduce using rule 309 (postfix_expression -> primary_expression .)
    RSHIFT          reduce using rule 309 (postfix_expression -> primary_expression .)
    LSHIFT          reduce using rule 309 (postfix_expression -> primary_expression .)
    LT              reduce using rule 309 (postfix_expression -> primary_expression .)
    LE              reduce using rule 309 (postfix_expression -> primary_expression .)
    GE              reduce using rule 309 (postfix_expression -> primary_expression .)
    GT              reduce using rule 309 (postfix_expression -> primary_expression .)
    EQ              reduce using rule 309 (postfix_expression -> primary_expression .)
    NE              reduce using rule 309 (postfix_expression -> primary_expression .)
    AND             reduce using rule 309 (postfix_expression -> primary_expression .)
    OR              reduce using rule 309 (postfix_expression -> primary_expression .)
    XOR             reduce using rule 309 (postfix_expression -> primary_expression .)
    LAND            reduce using rule 309 (postfix_expression -> primary_expression .)
    LOR             reduce using rule 309 (postfix_expression -> primary_expression .)
    RBRACKET        reduce using rule 309 (postfix_expression -> primary_expression .)
    COMMA           reduce using rule 309 (postfix_expression -> primary_expression .)
    RBRACE          reduce using rule 309 (postfix_expression -> primary_expression .)
    RPAREN          reduce using rule 309 (postfix_expression -> primary_expression .)
    SEMI            reduce using rule 309 (postfix_expression -> primary_expression .)
    COLON           reduce using rule 309 (postfix_expression -> primary_expression .)


state 122

    (317) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list COMMA brace_close
    (296) cast_expression -> LPAREN . type_name RPAREN cast_expression
    (323) primary_expression -> LPAREN . expression RPAREN
    (225) type_name -> . specifier_qualifier_list abstract_declarator_opt
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    struct_or_union_specifier      shift and go to state 5
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    type_specifier                 shift and go to state 87
    unary_expression               shift and go to state 93
    type_name                      shift and go to state 209
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    struct_or_union                shift and go to state 7
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    typedef_name                   shift and go to state 28
    binary_expression              shift and go to state 130
    enum_specifier                 shift and go to state 45
    pointcut_keyword               shift and go to state 132
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 211
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 208

state 123

    (299) unary_expression -> MINUSMINUS . unary_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 206
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 212
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 124

    (326) identifier -> ID .

    LBRACKET        reduce using rule 326 (identifier -> ID .)
    LPAREN          reduce using rule 326 (identifier -> ID .)
    PERIOD          reduce using rule 326 (identifier -> ID .)
    ARROW           reduce using rule 326 (identifier -> ID .)
    PLUSPLUS        reduce using rule 326 (identifier -> ID .)
    MINUSMINUS      reduce using rule 326 (identifier -> ID .)
    EQUALS          reduce using rule 326 (identifier -> ID .)
    XOREQUAL        reduce using rule 326 (identifier -> ID .)
    TIMESEQUAL      reduce using rule 326 (identifier -> ID .)
    DIVEQUAL        reduce using rule 326 (identifier -> ID .)
    MODEQUAL        reduce using rule 326 (identifier -> ID .)
    PLUSEQUAL       reduce using rule 326 (identifier -> ID .)
    MINUSEQUAL      reduce using rule 326 (identifier -> ID .)
    LSHIFTEQUAL     reduce using rule 326 (identifier -> ID .)
    RSHIFTEQUAL     reduce using rule 326 (identifier -> ID .)
    ANDEQUAL        reduce using rule 326 (identifier -> ID .)
    OREQUAL         reduce using rule 326 (identifier -> ID .)
    CONDOP          reduce using rule 326 (identifier -> ID .)
    TIMES           reduce using rule 326 (identifier -> ID .)
    DIVIDE          reduce using rule 326 (identifier -> ID .)
    MOD             reduce using rule 326 (identifier -> ID .)
    PLUS            reduce using rule 326 (identifier -> ID .)
    MINUS           reduce using rule 326 (identifier -> ID .)
    RSHIFT          reduce using rule 326 (identifier -> ID .)
    LSHIFT          reduce using rule 326 (identifier -> ID .)
    LT              reduce using rule 326 (identifier -> ID .)
    LE              reduce using rule 326 (identifier -> ID .)
    GE              reduce using rule 326 (identifier -> ID .)
    GT              reduce using rule 326 (identifier -> ID .)
    EQ              reduce using rule 326 (identifier -> ID .)
    NE              reduce using rule 326 (identifier -> ID .)
    AND             reduce using rule 326 (identifier -> ID .)
    OR              reduce using rule 326 (identifier -> ID .)
    XOR             reduce using rule 326 (identifier -> ID .)
    LAND            reduce using rule 326 (identifier -> ID .)
    LOR             reduce using rule 326 (identifier -> ID .)
    RPAREN          reduce using rule 326 (identifier -> ID .)
    COMMA           reduce using rule 326 (identifier -> ID .)
    SEMI            reduce using rule 326 (identifier -> ID .)
    RBRACKET        reduce using rule 326 (identifier -> ID .)
    COLON           reduce using rule 326 (identifier -> ID .)
    RBRACE          reduce using rule 326 (identifier -> ID .)


state 125

    (69) pointcut_add_keyword -> POINTCUT_ADD . LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> POINTCUT_ADD . LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> POINTCUT_ADD . LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> POINTCUT_ADD . LPAREN ID RPAREN

    LPAREN          shift and go to state 213


state 126

    (334) unified_string_literal -> STRING_LITERAL .

    STRING_LITERAL  reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LBRACKET        reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LPAREN          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    PERIOD          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    ARROW           reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    PLUSPLUS        reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    MINUSMINUS      reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    EQUALS          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    XOREQUAL        reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    TIMESEQUAL      reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    DIVEQUAL        reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    MODEQUAL        reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    PLUSEQUAL       reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    MINUSEQUAL      reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LSHIFTEQUAL     reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    RSHIFTEQUAL     reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    ANDEQUAL        reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    OREQUAL         reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    CONDOP          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    TIMES           reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    DIVIDE          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    MOD             reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    PLUS            reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    MINUS           reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    RSHIFT          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LSHIFT          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LT              reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LE              reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    GE              reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    GT              reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    EQ              reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    NE              reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    AND             reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    OR              reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    XOR             reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LAND            reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    LOR             reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    RPAREN          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    COMMA           reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    SEMI            reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    RBRACKET        reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    COLON           reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)
    RBRACE          reduce using rule 334 (unified_string_literal -> STRING_LITERAL .)


state 127

    (303) unary_operator -> AND .

    LPAREN          reduce using rule 303 (unary_operator -> AND .)
    PLUSPLUS        reduce using rule 303 (unary_operator -> AND .)
    MINUSMINUS      reduce using rule 303 (unary_operator -> AND .)
    SIZEOF          reduce using rule 303 (unary_operator -> AND .)
    POINTCUT        reduce using rule 303 (unary_operator -> AND .)
    POINTCUT_ADD    reduce using rule 303 (unary_operator -> AND .)
    POINTCUT_SUB    reduce using rule 303 (unary_operator -> AND .)
    POINTCUT_FIRST  reduce using rule 303 (unary_operator -> AND .)
    POINTCUT_LAST   reduce using rule 303 (unary_operator -> AND .)
    POINTCUT_MIN    reduce using rule 303 (unary_operator -> AND .)
    POINTCUT_MAX    reduce using rule 303 (unary_operator -> AND .)
    AND             reduce using rule 303 (unary_operator -> AND .)
    TIMES           reduce using rule 303 (unary_operator -> AND .)
    PLUS            reduce using rule 303 (unary_operator -> AND .)
    MINUS           reduce using rule 303 (unary_operator -> AND .)
    NOT             reduce using rule 303 (unary_operator -> AND .)
    LNOT            reduce using rule 303 (unary_operator -> AND .)
    ID              reduce using rule 303 (unary_operator -> AND .)
    INT_CONST_DEC   reduce using rule 303 (unary_operator -> AND .)
    INT_CONST_OCT   reduce using rule 303 (unary_operator -> AND .)
    INT_CONST_HEX   reduce using rule 303 (unary_operator -> AND .)
    FLOAT_CONST     reduce using rule 303 (unary_operator -> AND .)
    HEX_FLOAT_CONST reduce using rule 303 (unary_operator -> AND .)
    CHAR_CONST      reduce using rule 303 (unary_operator -> AND .)
    WCHAR_CONST     reduce using rule 303 (unary_operator -> AND .)
    STRING_LITERAL  reduce using rule 303 (unary_operator -> AND .)
    WSTRING_LITERAL reduce using rule 303 (unary_operator -> AND .)


state 128

    (327) constant -> INT_CONST_DEC .

    LBRACKET        reduce using rule 327 (constant -> INT_CONST_DEC .)
    LPAREN          reduce using rule 327 (constant -> INT_CONST_DEC .)
    PERIOD          reduce using rule 327 (constant -> INT_CONST_DEC .)
    ARROW           reduce using rule 327 (constant -> INT_CONST_DEC .)
    PLUSPLUS        reduce using rule 327 (constant -> INT_CONST_DEC .)
    MINUSMINUS      reduce using rule 327 (constant -> INT_CONST_DEC .)
    EQUALS          reduce using rule 327 (constant -> INT_CONST_DEC .)
    XOREQUAL        reduce using rule 327 (constant -> INT_CONST_DEC .)
    TIMESEQUAL      reduce using rule 327 (constant -> INT_CONST_DEC .)
    DIVEQUAL        reduce using rule 327 (constant -> INT_CONST_DEC .)
    MODEQUAL        reduce using rule 327 (constant -> INT_CONST_DEC .)
    PLUSEQUAL       reduce using rule 327 (constant -> INT_CONST_DEC .)
    MINUSEQUAL      reduce using rule 327 (constant -> INT_CONST_DEC .)
    LSHIFTEQUAL     reduce using rule 327 (constant -> INT_CONST_DEC .)
    RSHIFTEQUAL     reduce using rule 327 (constant -> INT_CONST_DEC .)
    ANDEQUAL        reduce using rule 327 (constant -> INT_CONST_DEC .)
    OREQUAL         reduce using rule 327 (constant -> INT_CONST_DEC .)
    CONDOP          reduce using rule 327 (constant -> INT_CONST_DEC .)
    TIMES           reduce using rule 327 (constant -> INT_CONST_DEC .)
    DIVIDE          reduce using rule 327 (constant -> INT_CONST_DEC .)
    MOD             reduce using rule 327 (constant -> INT_CONST_DEC .)
    PLUS            reduce using rule 327 (constant -> INT_CONST_DEC .)
    MINUS           reduce using rule 327 (constant -> INT_CONST_DEC .)
    RSHIFT          reduce using rule 327 (constant -> INT_CONST_DEC .)
    LSHIFT          reduce using rule 327 (constant -> INT_CONST_DEC .)
    LT              reduce using rule 327 (constant -> INT_CONST_DEC .)
    LE              reduce using rule 327 (constant -> INT_CONST_DEC .)
    GE              reduce using rule 327 (constant -> INT_CONST_DEC .)
    GT              reduce using rule 327 (constant -> INT_CONST_DEC .)
    EQ              reduce using rule 327 (constant -> INT_CONST_DEC .)
    NE              reduce using rule 327 (constant -> INT_CONST_DEC .)
    AND             reduce using rule 327 (constant -> INT_CONST_DEC .)
    OR              reduce using rule 327 (constant -> INT_CONST_DEC .)
    XOR             reduce using rule 327 (constant -> INT_CONST_DEC .)
    LAND            reduce using rule 327 (constant -> INT_CONST_DEC .)
    LOR             reduce using rule 327 (constant -> INT_CONST_DEC .)
    RBRACKET        reduce using rule 327 (constant -> INT_CONST_DEC .)
    COMMA           reduce using rule 327 (constant -> INT_CONST_DEC .)
    RBRACE          reduce using rule 327 (constant -> INT_CONST_DEC .)
    RPAREN          reduce using rule 327 (constant -> INT_CONST_DEC .)
    SEMI            reduce using rule 327 (constant -> INT_CONST_DEC .)
    COLON           reduce using rule 327 (constant -> INT_CONST_DEC .)


state 129

    (93) pointcut_min_keyword -> POINTCUT_MIN . LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> POINTCUT_MIN . LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> POINTCUT_MIN . LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> POINTCUT_MIN . LPAREN ID RPAREN

    LPAREN          shift and go to state 214


state 130

    (274) conditional_expression -> binary_expression .
    (275) conditional_expression -> binary_expression . CONDOP expression COLON conditional_expression
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    RPAREN          reduce using rule 274 (conditional_expression -> binary_expression .)
    COMMA           reduce using rule 274 (conditional_expression -> binary_expression .)
    RBRACE          reduce using rule 274 (conditional_expression -> binary_expression .)
    SEMI            reduce using rule 274 (conditional_expression -> binary_expression .)
    RBRACKET        reduce using rule 274 (conditional_expression -> binary_expression .)
    COLON           reduce using rule 274 (conditional_expression -> binary_expression .)
    CONDOP          shift and go to state 231
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223
    EQ              shift and go to state 229
    NE              shift and go to state 220
    AND             shift and go to state 230
    OR              shift and go to state 232
    XOR             shift and go to state 224
    LAND            shift and go to state 228
    LOR             shift and go to state 216


state 131

    (331) constant -> HEX_FLOAT_CONST .

    LBRACKET        reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    LPAREN          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    PERIOD          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    ARROW           reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    PLUSPLUS        reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    MINUSMINUS      reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    EQUALS          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    XOREQUAL        reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    TIMESEQUAL      reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    DIVEQUAL        reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    MODEQUAL        reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    PLUSEQUAL       reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    MINUSEQUAL      reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    LSHIFTEQUAL     reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    RSHIFTEQUAL     reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    ANDEQUAL        reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    OREQUAL         reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    CONDOP          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    TIMES           reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    DIVIDE          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    MOD             reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    PLUS            reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    MINUS           reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    RSHIFT          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    LSHIFT          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    LT              reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    LE              reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    GE              reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    GT              reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    EQ              reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    NE              reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    AND             reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    OR              reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    XOR             reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    LAND            reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    LOR             reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    RBRACKET        reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    COMMA           reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    RBRACE          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    RPAREN          reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    SEMI            reduce using rule 331 (constant -> HEX_FLOAT_CONST .)
    COLON           reduce using rule 331 (constant -> HEX_FLOAT_CONST .)


state 132

    (127) unary_expression -> pointcut_keyword .

    EQUALS          reduce using rule 127 (unary_expression -> pointcut_keyword .)
    XOREQUAL        reduce using rule 127 (unary_expression -> pointcut_keyword .)
    TIMESEQUAL      reduce using rule 127 (unary_expression -> pointcut_keyword .)
    DIVEQUAL        reduce using rule 127 (unary_expression -> pointcut_keyword .)
    MODEQUAL        reduce using rule 127 (unary_expression -> pointcut_keyword .)
    PLUSEQUAL       reduce using rule 127 (unary_expression -> pointcut_keyword .)
    MINUSEQUAL      reduce using rule 127 (unary_expression -> pointcut_keyword .)
    LSHIFTEQUAL     reduce using rule 127 (unary_expression -> pointcut_keyword .)
    RSHIFTEQUAL     reduce using rule 127 (unary_expression -> pointcut_keyword .)
    ANDEQUAL        reduce using rule 127 (unary_expression -> pointcut_keyword .)
    OREQUAL         reduce using rule 127 (unary_expression -> pointcut_keyword .)
    CONDOP          reduce using rule 127 (unary_expression -> pointcut_keyword .)
    TIMES           reduce using rule 127 (unary_expression -> pointcut_keyword .)
    DIVIDE          reduce using rule 127 (unary_expression -> pointcut_keyword .)
    MOD             reduce using rule 127 (unary_expression -> pointcut_keyword .)
    PLUS            reduce using rule 127 (unary_expression -> pointcut_keyword .)
    MINUS           reduce using rule 127 (unary_expression -> pointcut_keyword .)
    RSHIFT          reduce using rule 127 (unary_expression -> pointcut_keyword .)
    LSHIFT          reduce using rule 127 (unary_expression -> pointcut_keyword .)
    LT              reduce using rule 127 (unary_expression -> pointcut_keyword .)
    LE              reduce using rule 127 (unary_expression -> pointcut_keyword .)
    GE              reduce using rule 127 (unary_expression -> pointcut_keyword .)
    GT              reduce using rule 127 (unary_expression -> pointcut_keyword .)
    EQ              reduce using rule 127 (unary_expression -> pointcut_keyword .)
    NE              reduce using rule 127 (unary_expression -> pointcut_keyword .)
    AND             reduce using rule 127 (unary_expression -> pointcut_keyword .)
    OR              reduce using rule 127 (unary_expression -> pointcut_keyword .)
    XOR             reduce using rule 127 (unary_expression -> pointcut_keyword .)
    LAND            reduce using rule 127 (unary_expression -> pointcut_keyword .)
    LOR             reduce using rule 127 (unary_expression -> pointcut_keyword .)
    RPAREN          reduce using rule 127 (unary_expression -> pointcut_keyword .)
    COMMA           reduce using rule 127 (unary_expression -> pointcut_keyword .)
    SEMI            reduce using rule 127 (unary_expression -> pointcut_keyword .)
    RBRACKET        reduce using rule 127 (unary_expression -> pointcut_keyword .)
    COLON           reduce using rule 127 (unary_expression -> pointcut_keyword .)
    RBRACE          reduce using rule 127 (unary_expression -> pointcut_keyword .)


state 133

    (328) constant -> INT_CONST_OCT .

    LBRACKET        reduce using rule 328 (constant -> INT_CONST_OCT .)
    LPAREN          reduce using rule 328 (constant -> INT_CONST_OCT .)
    PERIOD          reduce using rule 328 (constant -> INT_CONST_OCT .)
    ARROW           reduce using rule 328 (constant -> INT_CONST_OCT .)
    PLUSPLUS        reduce using rule 328 (constant -> INT_CONST_OCT .)
    MINUSMINUS      reduce using rule 328 (constant -> INT_CONST_OCT .)
    EQUALS          reduce using rule 328 (constant -> INT_CONST_OCT .)
    XOREQUAL        reduce using rule 328 (constant -> INT_CONST_OCT .)
    TIMESEQUAL      reduce using rule 328 (constant -> INT_CONST_OCT .)
    DIVEQUAL        reduce using rule 328 (constant -> INT_CONST_OCT .)
    MODEQUAL        reduce using rule 328 (constant -> INT_CONST_OCT .)
    PLUSEQUAL       reduce using rule 328 (constant -> INT_CONST_OCT .)
    MINUSEQUAL      reduce using rule 328 (constant -> INT_CONST_OCT .)
    LSHIFTEQUAL     reduce using rule 328 (constant -> INT_CONST_OCT .)
    RSHIFTEQUAL     reduce using rule 328 (constant -> INT_CONST_OCT .)
    ANDEQUAL        reduce using rule 328 (constant -> INT_CONST_OCT .)
    OREQUAL         reduce using rule 328 (constant -> INT_CONST_OCT .)
    CONDOP          reduce using rule 328 (constant -> INT_CONST_OCT .)
    TIMES           reduce using rule 328 (constant -> INT_CONST_OCT .)
    DIVIDE          reduce using rule 328 (constant -> INT_CONST_OCT .)
    MOD             reduce using rule 328 (constant -> INT_CONST_OCT .)
    PLUS            reduce using rule 328 (constant -> INT_CONST_OCT .)
    MINUS           reduce using rule 328 (constant -> INT_CONST_OCT .)
    RSHIFT          reduce using rule 328 (constant -> INT_CONST_OCT .)
    LSHIFT          reduce using rule 328 (constant -> INT_CONST_OCT .)
    LT              reduce using rule 328 (constant -> INT_CONST_OCT .)
    LE              reduce using rule 328 (constant -> INT_CONST_OCT .)
    GE              reduce using rule 328 (constant -> INT_CONST_OCT .)
    GT              reduce using rule 328 (constant -> INT_CONST_OCT .)
    EQ              reduce using rule 328 (constant -> INT_CONST_OCT .)
    NE              reduce using rule 328 (constant -> INT_CONST_OCT .)
    AND             reduce using rule 328 (constant -> INT_CONST_OCT .)
    OR              reduce using rule 328 (constant -> INT_CONST_OCT .)
    XOR             reduce using rule 328 (constant -> INT_CONST_OCT .)
    LAND            reduce using rule 328 (constant -> INT_CONST_OCT .)
    LOR             reduce using rule 328 (constant -> INT_CONST_OCT .)
    RBRACKET        reduce using rule 328 (constant -> INT_CONST_OCT .)
    COMMA           reduce using rule 328 (constant -> INT_CONST_OCT .)
    RBRACE          reduce using rule 328 (constant -> INT_CONST_OCT .)
    RPAREN          reduce using rule 328 (constant -> INT_CONST_OCT .)
    SEMI            reduce using rule 328 (constant -> INT_CONST_OCT .)
    COLON           reduce using rule 328 (constant -> INT_CONST_OCT .)


state 134

    (63) pointcut_keyword -> POINTCUT . LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> POINTCUT . LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> POINTCUT . LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> POINTCUT . LPAREN ID RPAREN

    LPAREN          shift and go to state 234


state 135

    (322) primary_expression -> unified_wstring_literal .
    (337) unified_wstring_literal -> unified_wstring_literal . WSTRING_LITERAL

    LBRACKET        reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    LPAREN          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    PERIOD          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    ARROW           reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    PLUSPLUS        reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    MINUSMINUS      reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    EQUALS          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    XOREQUAL        reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    TIMESEQUAL      reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    DIVEQUAL        reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    MODEQUAL        reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    PLUSEQUAL       reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    MINUSEQUAL      reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    LSHIFTEQUAL     reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    RSHIFTEQUAL     reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    ANDEQUAL        reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    OREQUAL         reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    CONDOP          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    TIMES           reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    DIVIDE          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    MOD             reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    PLUS            reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    MINUS           reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    RSHIFT          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    LSHIFT          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    LT              reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    LE              reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    GE              reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    GT              reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    EQ              reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    NE              reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    AND             reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    OR              reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    XOR             reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    LAND            reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    LOR             reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    RPAREN          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    COMMA           reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    SEMI            reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    COLON           reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    RBRACE          reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    RBRACKET        reduce using rule 322 (primary_expression -> unified_wstring_literal .)
    WSTRING_LITERAL shift and go to state 235


state 136

    (81) pointcut_first_keyword -> POINTCUT_FIRST . LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> POINTCUT_FIRST . LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> POINTCUT_FIRST . LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> POINTCUT_FIRST . LPAREN ID RPAREN

    LPAREN          shift and go to state 236


state 137

    (260) assignment_expression -> conditional_expression .

    SEMI            reduce using rule 260 (assignment_expression -> conditional_expression .)
    COMMA           reduce using rule 260 (assignment_expression -> conditional_expression .)
    RBRACE          reduce using rule 260 (assignment_expression -> conditional_expression .)
    RPAREN          reduce using rule 260 (assignment_expression -> conditional_expression .)
    RBRACKET        reduce using rule 260 (assignment_expression -> conditional_expression .)
    COLON           reduce using rule 260 (assignment_expression -> conditional_expression .)


state 138

    (307) unary_operator -> NOT .

    LPAREN          reduce using rule 307 (unary_operator -> NOT .)
    PLUSPLUS        reduce using rule 307 (unary_operator -> NOT .)
    MINUSMINUS      reduce using rule 307 (unary_operator -> NOT .)
    SIZEOF          reduce using rule 307 (unary_operator -> NOT .)
    POINTCUT        reduce using rule 307 (unary_operator -> NOT .)
    POINTCUT_ADD    reduce using rule 307 (unary_operator -> NOT .)
    POINTCUT_SUB    reduce using rule 307 (unary_operator -> NOT .)
    POINTCUT_FIRST  reduce using rule 307 (unary_operator -> NOT .)
    POINTCUT_LAST   reduce using rule 307 (unary_operator -> NOT .)
    POINTCUT_MIN    reduce using rule 307 (unary_operator -> NOT .)
    POINTCUT_MAX    reduce using rule 307 (unary_operator -> NOT .)
    AND             reduce using rule 307 (unary_operator -> NOT .)
    TIMES           reduce using rule 307 (unary_operator -> NOT .)
    PLUS            reduce using rule 307 (unary_operator -> NOT .)
    MINUS           reduce using rule 307 (unary_operator -> NOT .)
    NOT             reduce using rule 307 (unary_operator -> NOT .)
    LNOT            reduce using rule 307 (unary_operator -> NOT .)
    ID              reduce using rule 307 (unary_operator -> NOT .)
    INT_CONST_DEC   reduce using rule 307 (unary_operator -> NOT .)
    INT_CONST_OCT   reduce using rule 307 (unary_operator -> NOT .)
    INT_CONST_HEX   reduce using rule 307 (unary_operator -> NOT .)
    FLOAT_CONST     reduce using rule 307 (unary_operator -> NOT .)
    HEX_FLOAT_CONST reduce using rule 307 (unary_operator -> NOT .)
    CHAR_CONST      reduce using rule 307 (unary_operator -> NOT .)
    WCHAR_CONST     reduce using rule 307 (unary_operator -> NOT .)
    STRING_LITERAL  reduce using rule 307 (unary_operator -> NOT .)
    WSTRING_LITERAL reduce using rule 307 (unary_operator -> NOT .)


state 139

    (202) direct_declarator -> direct_declarator LPAREN identifier_list_opt . RPAREN

    RPAREN          shift and go to state 237


state 140

    (15) identifier_list_opt -> empty .

    RPAREN          reduce using rule 15 (identifier_list_opt -> empty .)


state 141

    (201) direct_declarator -> direct_declarator LPAREN parameter_type_list . RPAREN

    RPAREN          shift and go to state 238


state 142

    (209) parameter_list -> parameter_declaration .

    COMMA           reduce using rule 209 (parameter_list -> parameter_declaration .)
    RPAREN          reduce using rule 209 (parameter_list -> parameter_declaration .)


state 143

    (211) parameter_declaration -> declaration_specifiers . declarator
    (212) parameter_declaration -> declaration_specifiers . abstract_declarator_opt
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (1) abstract_declarator_opt -> . empty
    (2) abstract_declarator_opt -> . abstract_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer
    (340) empty -> .
    (226) abstract_declarator -> . pointer
    (227) abstract_declarator -> . pointer direct_abstract_declarator
    (228) abstract_declarator -> . direct_abstract_declarator
    (229) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (230) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET
    (231) direct_abstract_declarator -> . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET TIMES RBRACKET
    (233) direct_abstract_declarator -> . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (235) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    ID              shift and go to state 32
    LPAREN          shift and go to state 239
    TIMES           shift and go to state 27
    COMMA           reduce using rule 340 (empty -> .)
    RPAREN          reduce using rule 340 (empty -> .)
    LBRACKET        shift and go to state 242

    direct_declarator              shift and go to state 24
    abstract_declarator_opt        shift and go to state 240
    abstract_declarator            shift and go to state 241
    declarator                     shift and go to state 243
    direct_abstract_declarator     shift and go to state 244
    pointer                        shift and go to state 245
    empty                          shift and go to state 246

state 144

    (16) identifier_list_opt -> identifier_list .
    (214) identifier_list -> identifier_list . COMMA identifier

    RPAREN          reduce using rule 16 (identifier_list_opt -> identifier_list .)
    COMMA           shift and go to state 247


state 145

    (207) parameter_type_list -> parameter_list .
    (208) parameter_type_list -> parameter_list . COMMA ELLIPSIS
    (210) parameter_list -> parameter_list . COMMA parameter_declaration

    RPAREN          reduce using rule 207 (parameter_type_list -> parameter_list .)
    COMMA           shift and go to state 248


state 146

    (213) identifier_list -> identifier .

    COMMA           reduce using rule 213 (identifier_list -> identifier .)
    RPAREN          reduce using rule 213 (identifier_list -> identifier .)


state 147

    (189) enum_specifier -> ENUM TYPEID brace_open . enumerator_list brace_close
    (190) enumerator_list -> . enumerator
    (191) enumerator_list -> . enumerator_list COMMA
    (192) enumerator_list -> . enumerator_list COMMA enumerator
    (193) enumerator -> . ID
    (194) enumerator -> . ID EQUALS constant_expression

    ID              shift and go to state 151

    enumerator_list                shift and go to state 249
    enumerator                     shift and go to state 149

state 148

    (188) enum_specifier -> ENUM ID brace_open . enumerator_list brace_close
    (190) enumerator_list -> . enumerator
    (191) enumerator_list -> . enumerator_list COMMA
    (192) enumerator_list -> . enumerator_list COMMA enumerator
    (193) enumerator -> . ID
    (194) enumerator -> . ID EQUALS constant_expression

    ID              shift and go to state 151

    enumerator_list                shift and go to state 250
    enumerator                     shift and go to state 149

state 149

    (190) enumerator_list -> enumerator .

    COMMA           reduce using rule 190 (enumerator_list -> enumerator .)
    RBRACE          reduce using rule 190 (enumerator_list -> enumerator .)


state 150

    (187) enum_specifier -> ENUM brace_open enumerator_list . brace_close
    (191) enumerator_list -> enumerator_list . COMMA
    (192) enumerator_list -> enumerator_list . COMMA enumerator
    (339) brace_close -> . RBRACE

    COMMA           shift and go to state 251
    RBRACE          shift and go to state 165

    brace_close                    shift and go to state 252

state 151

    (193) enumerator -> ID .
    (194) enumerator -> ID . EQUALS constant_expression

    COMMA           reduce using rule 193 (enumerator -> ID .)
    RBRACE          reduce using rule 193 (enumerator -> ID .)
    EQUALS          shift and go to state 253


state 152

    (206) type_qualifier_list -> type_qualifier_list type_qualifier .

    CONST           reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    RESTRICT        reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    VOLATILE        reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    TIMES           reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    ID              reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    LPAREN          reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    LBRACKET        reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    COMMA           reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    RPAREN          reduce using rule 206 (type_qualifier_list -> type_qualifier_list type_qualifier .)


state 153

    (204) pointer -> TIMES type_qualifier_list_opt pointer .

    ID              reduce using rule 204 (pointer -> TIMES type_qualifier_list_opt pointer .)
    LPAREN          reduce using rule 204 (pointer -> TIMES type_qualifier_list_opt pointer .)
    LBRACKET        reduce using rule 204 (pointer -> TIMES type_qualifier_list_opt pointer .)
    COMMA           reduce using rule 204 (pointer -> TIMES type_qualifier_list_opt pointer .)
    RPAREN          reduce using rule 204 (pointer -> TIMES type_qualifier_list_opt pointer .)


state 154

    (165) init_declarator_list -> init_declarator_list COMMA . init_declarator
    (166) init_declarator -> . declarator
    (167) init_declarator -> . declarator EQUALS initializer
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer

    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27

    direct_declarator              shift and go to state 24
    init_declarator                shift and go to state 254
    declarator                     shift and go to state 157
    pointer                        shift and go to state 15

state 155

    (167) init_declarator -> declarator EQUALS . initializer
    (215) initializer -> . assignment_expression
    (216) initializer -> . brace_open initializer_list brace_close
    (217) initializer -> . brace_open initializer_list COMMA brace_close
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (338) brace_open -> . LBRACE
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LBRACE          shift and go to state 55
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    initializer                    shift and go to state 255
    brace_open                     shift and go to state 256
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 257
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116

state 156

    (97) function_definition -> declaration_specifiers declarator declaration_list_opt . compound_statement
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (338) brace_open -> . LBRACE

    LBRACE          shift and go to state 55

    compound_statement             shift and go to state 258
    brace_open                     shift and go to state 159

state 157

    (166) init_declarator -> declarator .
    (167) init_declarator -> declarator . EQUALS initializer

    COMMA           reduce using rule 166 (init_declarator -> declarator .)
    SEMI            reduce using rule 166 (init_declarator -> declarator .)
    EQUALS          shift and go to state 155


state 158

    (92) function_definition -> declarator declaration_list_opt compound_statement .

    SEMI            reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    PPHASH          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    ID              reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    LPAREN          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    TIMES           reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    CONST           reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    RESTRICT        reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    VOLATILE        reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    VOID            reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    _BOOL           reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    CHAR            reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    SHORT           reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    INT             reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    LONG            reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    FLOAT           reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    DOUBLE          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    _COMPLEX        reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    SIGNED          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    UNSIGNED        reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    AUTO            reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    REGISTER        reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    STATIC          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    EXTERN          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    TYPEDEF         reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    INLINE          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    TYPEID          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    ENUM            reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    STRUCT          reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    UNION           reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)
    $end            reduce using rule 92 (function_definition -> declarator declaration_list_opt compound_statement .)


state 159

    (240) compound_statement -> brace_open . block_item_list_opt brace_close
    (5) block_item_list_opt -> . empty
    (6) block_item_list_opt -> . block_item_list
    (340) empty -> .
    (238) block_item_list -> . block_item
    (239) block_item_list -> . block_item_list block_item
    (236) block_item -> . declaration
    (237) block_item -> . statement
    (134) declaration -> . decl_body SEMI
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    RBRACE          reduce using rule 340 (empty -> .)
    SEMI            reduce using rule 340 (empty -> .)
    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    storage_class_specifier        shift and go to state 1
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    struct_or_union_specifier      shift and go to state 5
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_append_around_call_keyword shift and go to state 302
    pointcut_last_keyword          shift and go to state 91
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    type_specifier                 shift and go to state 13
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    typedef_name                   shift and go to state 28
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 301
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    brace_open                     shift and go to state 159
    struct_or_union                shift and go to state 7
    block_item_list_opt            shift and go to state 316
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    declaration_specifiers         shift and go to state 79
    declaration                    shift and go to state 304
    block_item_list                shift and go to state 288
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    enum_specifier                 shift and go to state 45
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    labeled_statement              shift and go to state 273
    function_specifier             shift and go to state 44
    block_item                     shift and go to state 307
    pointcut_sub_keyword           shift and go to state 112
    empty                          shift and go to state 308
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291
    pointcut_keyword               shift and go to state 132
    motion_append_after_call_keyword shift and go to state 274

state 160

    (136) declaration_list -> declaration_list declaration .

    CONST           reduce using rule 136 (declaration_list -> declaration_list declaration .)
    RESTRICT        reduce using rule 136 (declaration_list -> declaration_list declaration .)
    VOLATILE        reduce using rule 136 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 136 (declaration_list -> declaration_list declaration .)
    _BOOL           reduce using rule 136 (declaration_list -> declaration_list declaration .)
    CHAR            reduce using rule 136 (declaration_list -> declaration_list declaration .)
    SHORT           reduce using rule 136 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 136 (declaration_list -> declaration_list declaration .)
    LONG            reduce using rule 136 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 136 (declaration_list -> declaration_list declaration .)
    DOUBLE          reduce using rule 136 (declaration_list -> declaration_list declaration .)
    _COMPLEX        reduce using rule 136 (declaration_list -> declaration_list declaration .)
    SIGNED          reduce using rule 136 (declaration_list -> declaration_list declaration .)
    UNSIGNED        reduce using rule 136 (declaration_list -> declaration_list declaration .)
    AUTO            reduce using rule 136 (declaration_list -> declaration_list declaration .)
    REGISTER        reduce using rule 136 (declaration_list -> declaration_list declaration .)
    STATIC          reduce using rule 136 (declaration_list -> declaration_list declaration .)
    EXTERN          reduce using rule 136 (declaration_list -> declaration_list declaration .)
    TYPEDEF         reduce using rule 136 (declaration_list -> declaration_list declaration .)
    INLINE          reduce using rule 136 (declaration_list -> declaration_list declaration .)
    TYPEID          reduce using rule 136 (declaration_list -> declaration_list declaration .)
    ENUM            reduce using rule 136 (declaration_list -> declaration_list declaration .)
    STRUCT          reduce using rule 136 (declaration_list -> declaration_list declaration .)
    UNION           reduce using rule 136 (declaration_list -> declaration_list declaration .)
    LBRACE          reduce using rule 136 (declaration_list -> declaration_list declaration .)


state 161

    (174) struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list . brace_close
    (178) struct_declaration_list -> struct_declaration_list . struct_declaration
    (339) brace_close -> . RBRACE
    (179) struct_declaration -> . specifier_qualifier_list struct_declarator_list_opt SEMI
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    RBRACE          shift and go to state 165
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    struct_declaration             shift and go to state 164
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 90
    brace_close                    shift and go to state 321
    typedef_name                   shift and go to state 28

state 162

    (173) struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list . brace_close
    (178) struct_declaration_list -> struct_declaration_list . struct_declaration
    (339) brace_close -> . RBRACE
    (179) struct_declaration -> . specifier_qualifier_list struct_declarator_list_opt SEMI
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    RBRACE          shift and go to state 165
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 87
    struct_declaration             shift and go to state 164
    enum_specifier                 shift and go to state 45
    struct_or_union_specifier      shift and go to state 5
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 90
    brace_close                    shift and go to state 322
    typedef_name                   shift and go to state 28

state 163

    (172) struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .

    CONST           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    RESTRICT        reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    VOLATILE        reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    VOID            reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    _BOOL           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    CHAR            reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    SHORT           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    INT             reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    LONG            reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    FLOAT           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    DOUBLE          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    _COMPLEX        reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    SIGNED          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    UNSIGNED        reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    AUTO            reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    REGISTER        reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    STATIC          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    EXTERN          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    TYPEDEF         reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    INLINE          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    TYPEID          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    ENUM            reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    STRUCT          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    UNION           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    ID              reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    LPAREN          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    TIMES           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    SEMI            reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    LBRACKET        reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    COMMA           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    RPAREN          reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)
    COLON           reduce using rule 172 (struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close .)


state 164

    (178) struct_declaration_list -> struct_declaration_list struct_declaration .

    RBRACE          reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CONST           reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    RESTRICT        reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOLATILE        reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOID            reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    _BOOL           reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CHAR            reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SHORT           reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    INT             reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    LONG            reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    FLOAT           reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    DOUBLE          reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    _COMPLEX        reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SIGNED          reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNSIGNED        reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    TYPEID          reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    ENUM            reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    STRUCT          reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNION           reduce using rule 178 (struct_declaration_list -> struct_declaration_list struct_declaration .)


state 165

    (339) brace_close -> RBRACE .

    CONST           reduce using rule 339 (brace_close -> RBRACE .)
    RESTRICT        reduce using rule 339 (brace_close -> RBRACE .)
    VOLATILE        reduce using rule 339 (brace_close -> RBRACE .)
    VOID            reduce using rule 339 (brace_close -> RBRACE .)
    _BOOL           reduce using rule 339 (brace_close -> RBRACE .)
    CHAR            reduce using rule 339 (brace_close -> RBRACE .)
    SHORT           reduce using rule 339 (brace_close -> RBRACE .)
    INT             reduce using rule 339 (brace_close -> RBRACE .)
    LONG            reduce using rule 339 (brace_close -> RBRACE .)
    FLOAT           reduce using rule 339 (brace_close -> RBRACE .)
    DOUBLE          reduce using rule 339 (brace_close -> RBRACE .)
    _COMPLEX        reduce using rule 339 (brace_close -> RBRACE .)
    SIGNED          reduce using rule 339 (brace_close -> RBRACE .)
    UNSIGNED        reduce using rule 339 (brace_close -> RBRACE .)
    AUTO            reduce using rule 339 (brace_close -> RBRACE .)
    REGISTER        reduce using rule 339 (brace_close -> RBRACE .)
    STATIC          reduce using rule 339 (brace_close -> RBRACE .)
    EXTERN          reduce using rule 339 (brace_close -> RBRACE .)
    TYPEDEF         reduce using rule 339 (brace_close -> RBRACE .)
    INLINE          reduce using rule 339 (brace_close -> RBRACE .)
    TYPEID          reduce using rule 339 (brace_close -> RBRACE .)
    ENUM            reduce using rule 339 (brace_close -> RBRACE .)
    STRUCT          reduce using rule 339 (brace_close -> RBRACE .)
    UNION           reduce using rule 339 (brace_close -> RBRACE .)
    ID              reduce using rule 339 (brace_close -> RBRACE .)
    LPAREN          reduce using rule 339 (brace_close -> RBRACE .)
    TIMES           reduce using rule 339 (brace_close -> RBRACE .)
    SEMI            reduce using rule 339 (brace_close -> RBRACE .)
    LBRACKET        reduce using rule 339 (brace_close -> RBRACE .)
    COMMA           reduce using rule 339 (brace_close -> RBRACE .)
    RPAREN          reduce using rule 339 (brace_close -> RBRACE .)
    COLON           reduce using rule 339 (brace_close -> RBRACE .)
    RBRACE          reduce using rule 339 (brace_close -> RBRACE .)
    PPHASH          reduce using rule 339 (brace_close -> RBRACE .)
    $end            reduce using rule 339 (brace_close -> RBRACE .)
    CASE            reduce using rule 339 (brace_close -> RBRACE .)
    DEFAULT         reduce using rule 339 (brace_close -> RBRACE .)
    IF              reduce using rule 339 (brace_close -> RBRACE .)
    SWITCH          reduce using rule 339 (brace_close -> RBRACE .)
    WHILE           reduce using rule 339 (brace_close -> RBRACE .)
    DO              reduce using rule 339 (brace_close -> RBRACE .)
    FOR             reduce using rule 339 (brace_close -> RBRACE .)
    GOTO            reduce using rule 339 (brace_close -> RBRACE .)
    BREAK           reduce using rule 339 (brace_close -> RBRACE .)
    CONTINUE        reduce using rule 339 (brace_close -> RBRACE .)
    RETURN          reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_APPEND_AFTER_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_APPEND_AROUND_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 339 (brace_close -> RBRACE .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 339 (brace_close -> RBRACE .)
    LBRACE          reduce using rule 339 (brace_close -> RBRACE .)
    PLUSPLUS        reduce using rule 339 (brace_close -> RBRACE .)
    MINUSMINUS      reduce using rule 339 (brace_close -> RBRACE .)
    SIZEOF          reduce using rule 339 (brace_close -> RBRACE .)
    POINTCUT        reduce using rule 339 (brace_close -> RBRACE .)
    POINTCUT_ADD    reduce using rule 339 (brace_close -> RBRACE .)
    POINTCUT_SUB    reduce using rule 339 (brace_close -> RBRACE .)
    POINTCUT_FIRST  reduce using rule 339 (brace_close -> RBRACE .)
    POINTCUT_LAST   reduce using rule 339 (brace_close -> RBRACE .)
    POINTCUT_MIN    reduce using rule 339 (brace_close -> RBRACE .)
    POINTCUT_MAX    reduce using rule 339 (brace_close -> RBRACE .)
    AND             reduce using rule 339 (brace_close -> RBRACE .)
    PLUS            reduce using rule 339 (brace_close -> RBRACE .)
    MINUS           reduce using rule 339 (brace_close -> RBRACE .)
    NOT             reduce using rule 339 (brace_close -> RBRACE .)
    LNOT            reduce using rule 339 (brace_close -> RBRACE .)
    INT_CONST_DEC   reduce using rule 339 (brace_close -> RBRACE .)
    INT_CONST_OCT   reduce using rule 339 (brace_close -> RBRACE .)
    INT_CONST_HEX   reduce using rule 339 (brace_close -> RBRACE .)
    FLOAT_CONST     reduce using rule 339 (brace_close -> RBRACE .)
    HEX_FLOAT_CONST reduce using rule 339 (brace_close -> RBRACE .)
    CHAR_CONST      reduce using rule 339 (brace_close -> RBRACE .)
    WCHAR_CONST     reduce using rule 339 (brace_close -> RBRACE .)
    STRING_LITERAL  reduce using rule 339 (brace_close -> RBRACE .)
    WSTRING_LITERAL reduce using rule 339 (brace_close -> RBRACE .)
    ELSE            reduce using rule 339 (brace_close -> RBRACE .)
    PERIOD          reduce using rule 339 (brace_close -> RBRACE .)
    ARROW           reduce using rule 339 (brace_close -> RBRACE .)
    EQUALS          reduce using rule 339 (brace_close -> RBRACE .)
    XOREQUAL        reduce using rule 339 (brace_close -> RBRACE .)
    TIMESEQUAL      reduce using rule 339 (brace_close -> RBRACE .)
    DIVEQUAL        reduce using rule 339 (brace_close -> RBRACE .)
    MODEQUAL        reduce using rule 339 (brace_close -> RBRACE .)
    PLUSEQUAL       reduce using rule 339 (brace_close -> RBRACE .)
    MINUSEQUAL      reduce using rule 339 (brace_close -> RBRACE .)
    LSHIFTEQUAL     reduce using rule 339 (brace_close -> RBRACE .)
    RSHIFTEQUAL     reduce using rule 339 (brace_close -> RBRACE .)
    ANDEQUAL        reduce using rule 339 (brace_close -> RBRACE .)
    OREQUAL         reduce using rule 339 (brace_close -> RBRACE .)
    CONDOP          reduce using rule 339 (brace_close -> RBRACE .)
    DIVIDE          reduce using rule 339 (brace_close -> RBRACE .)
    MOD             reduce using rule 339 (brace_close -> RBRACE .)
    RSHIFT          reduce using rule 339 (brace_close -> RBRACE .)
    LSHIFT          reduce using rule 339 (brace_close -> RBRACE .)
    LT              reduce using rule 339 (brace_close -> RBRACE .)
    LE              reduce using rule 339 (brace_close -> RBRACE .)
    GE              reduce using rule 339 (brace_close -> RBRACE .)
    GT              reduce using rule 339 (brace_close -> RBRACE .)
    EQ              reduce using rule 339 (brace_close -> RBRACE .)
    NE              reduce using rule 339 (brace_close -> RBRACE .)
    OR              reduce using rule 339 (brace_close -> RBRACE .)
    XOR             reduce using rule 339 (brace_close -> RBRACE .)
    LAND            reduce using rule 339 (brace_close -> RBRACE .)
    LOR             reduce using rule 339 (brace_close -> RBRACE .)
    RBRACKET        reduce using rule 339 (brace_close -> RBRACE .)


state 166

    (21) specifier_qualifier_list_opt -> empty .

    COLON           reduce using rule 21 (specifier_qualifier_list_opt -> empty .)
    ID              reduce using rule 21 (specifier_qualifier_list_opt -> empty .)
    LPAREN          reduce using rule 21 (specifier_qualifier_list_opt -> empty .)
    TIMES           reduce using rule 21 (specifier_qualifier_list_opt -> empty .)
    SEMI            reduce using rule 21 (specifier_qualifier_list_opt -> empty .)
    LBRACKET        reduce using rule 21 (specifier_qualifier_list_opt -> empty .)
    RPAREN          reduce using rule 21 (specifier_qualifier_list_opt -> empty .)


state 167

    (169) specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .

    COLON           reduce using rule 169 (specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .)
    ID              reduce using rule 169 (specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .)
    LPAREN          reduce using rule 169 (specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .)
    TIMES           reduce using rule 169 (specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .)
    SEMI            reduce using rule 169 (specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .)
    LBRACKET        reduce using rule 169 (specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .)
    RPAREN          reduce using rule 169 (specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt .)


state 168

    (22) specifier_qualifier_list_opt -> specifier_qualifier_list .

    COLON           reduce using rule 22 (specifier_qualifier_list_opt -> specifier_qualifier_list .)
    ID              reduce using rule 22 (specifier_qualifier_list_opt -> specifier_qualifier_list .)
    LPAREN          reduce using rule 22 (specifier_qualifier_list_opt -> specifier_qualifier_list .)
    TIMES           reduce using rule 22 (specifier_qualifier_list_opt -> specifier_qualifier_list .)
    SEMI            reduce using rule 22 (specifier_qualifier_list_opt -> specifier_qualifier_list .)
    LBRACKET        reduce using rule 22 (specifier_qualifier_list_opt -> specifier_qualifier_list .)
    RPAREN          reduce using rule 22 (specifier_qualifier_list_opt -> specifier_qualifier_list .)


state 169

    (168) specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .

    COLON           reduce using rule 168 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .)
    ID              reduce using rule 168 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .)
    LPAREN          reduce using rule 168 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .)
    TIMES           reduce using rule 168 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .)
    SEMI            reduce using rule 168 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .)
    LBRACKET        reduce using rule 168 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .)
    RPAREN          reduce using rule 168 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list_opt .)


state 170

    (184) struct_declarator -> COLON . constant_expression
    (273) constant_expression -> . conditional_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 202
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 324
    constant_expression            shift and go to state 323
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 171

    (24) struct_declarator_list_opt -> struct_declarator_list .
    (181) struct_declarator_list -> struct_declarator_list . COMMA struct_declarator

    SEMI            reduce using rule 24 (struct_declarator_list_opt -> struct_declarator_list .)
    COMMA           shift and go to state 325


state 172

    (179) struct_declaration -> specifier_qualifier_list struct_declarator_list_opt . SEMI

    SEMI            shift and go to state 326


state 173

    (180) struct_declarator_list -> struct_declarator .

    COMMA           reduce using rule 180 (struct_declarator_list -> struct_declarator .)
    SEMI            reduce using rule 180 (struct_declarator_list -> struct_declarator .)


state 174

    (23) struct_declarator_list_opt -> empty .

    SEMI            reduce using rule 23 (struct_declarator_list_opt -> empty .)


state 175

    (182) struct_declarator -> declarator .
    (183) struct_declarator -> declarator . COLON constant_expression

    COMMA           reduce using rule 182 (struct_declarator -> declarator .)
    SEMI            reduce using rule 182 (struct_declarator -> declarator .)
    COLON           shift and go to state 327


state 176

    (104) pointcut_max_keyword -> POINTCUT_MAX LPAREN . ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> POINTCUT_MAX LPAREN . ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> POINTCUT_MAX LPAREN . ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> POINTCUT_MAX LPAREN . ID RPAREN

    ID              shift and go to state 328


state 177

    (265) assignment_operator -> DIVEQUAL .

    PLUSPLUS        reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    MINUSMINUS      reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    SIZEOF          reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    POINTCUT        reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    POINTCUT_ADD    reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    POINTCUT_SUB    reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    POINTCUT_FIRST  reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    POINTCUT_LAST   reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    POINTCUT_MIN    reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    POINTCUT_MAX    reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    LPAREN          reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    AND             reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    TIMES           reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    PLUS            reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    MINUS           reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    NOT             reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    LNOT            reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    ID              reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    INT_CONST_DEC   reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    INT_CONST_OCT   reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    INT_CONST_HEX   reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    FLOAT_CONST     reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    HEX_FLOAT_CONST reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    CHAR_CONST      reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    WCHAR_CONST     reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    STRING_LITERAL  reduce using rule 265 (assignment_operator -> DIVEQUAL .)
    WSTRING_LITERAL reduce using rule 265 (assignment_operator -> DIVEQUAL .)


state 178

    (268) assignment_operator -> MINUSEQUAL .

    PLUSPLUS        reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    MINUSMINUS      reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    SIZEOF          reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    POINTCUT        reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    POINTCUT_ADD    reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    POINTCUT_SUB    reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    POINTCUT_FIRST  reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    POINTCUT_LAST   reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    POINTCUT_MIN    reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    POINTCUT_MAX    reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    LPAREN          reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    AND             reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    TIMES           reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    PLUS            reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    MINUS           reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    NOT             reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    LNOT            reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    ID              reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    INT_CONST_DEC   reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    INT_CONST_OCT   reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    INT_CONST_HEX   reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    FLOAT_CONST     reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    HEX_FLOAT_CONST reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    CHAR_CONST      reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    WCHAR_CONST     reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    STRING_LITERAL  reduce using rule 268 (assignment_operator -> MINUSEQUAL .)
    WSTRING_LITERAL reduce using rule 268 (assignment_operator -> MINUSEQUAL .)


state 179

    (266) assignment_operator -> MODEQUAL .

    PLUSPLUS        reduce using rule 266 (assignment_operator -> MODEQUAL .)
    MINUSMINUS      reduce using rule 266 (assignment_operator -> MODEQUAL .)
    SIZEOF          reduce using rule 266 (assignment_operator -> MODEQUAL .)
    POINTCUT        reduce using rule 266 (assignment_operator -> MODEQUAL .)
    POINTCUT_ADD    reduce using rule 266 (assignment_operator -> MODEQUAL .)
    POINTCUT_SUB    reduce using rule 266 (assignment_operator -> MODEQUAL .)
    POINTCUT_FIRST  reduce using rule 266 (assignment_operator -> MODEQUAL .)
    POINTCUT_LAST   reduce using rule 266 (assignment_operator -> MODEQUAL .)
    POINTCUT_MIN    reduce using rule 266 (assignment_operator -> MODEQUAL .)
    POINTCUT_MAX    reduce using rule 266 (assignment_operator -> MODEQUAL .)
    LPAREN          reduce using rule 266 (assignment_operator -> MODEQUAL .)
    AND             reduce using rule 266 (assignment_operator -> MODEQUAL .)
    TIMES           reduce using rule 266 (assignment_operator -> MODEQUAL .)
    PLUS            reduce using rule 266 (assignment_operator -> MODEQUAL .)
    MINUS           reduce using rule 266 (assignment_operator -> MODEQUAL .)
    NOT             reduce using rule 266 (assignment_operator -> MODEQUAL .)
    LNOT            reduce using rule 266 (assignment_operator -> MODEQUAL .)
    ID              reduce using rule 266 (assignment_operator -> MODEQUAL .)
    INT_CONST_DEC   reduce using rule 266 (assignment_operator -> MODEQUAL .)
    INT_CONST_OCT   reduce using rule 266 (assignment_operator -> MODEQUAL .)
    INT_CONST_HEX   reduce using rule 266 (assignment_operator -> MODEQUAL .)
    FLOAT_CONST     reduce using rule 266 (assignment_operator -> MODEQUAL .)
    HEX_FLOAT_CONST reduce using rule 266 (assignment_operator -> MODEQUAL .)
    CHAR_CONST      reduce using rule 266 (assignment_operator -> MODEQUAL .)
    WCHAR_CONST     reduce using rule 266 (assignment_operator -> MODEQUAL .)
    STRING_LITERAL  reduce using rule 266 (assignment_operator -> MODEQUAL .)
    WSTRING_LITERAL reduce using rule 266 (assignment_operator -> MODEQUAL .)


state 180

    (262) assignment_operator -> EQUALS .

    PLUSPLUS        reduce using rule 262 (assignment_operator -> EQUALS .)
    MINUSMINUS      reduce using rule 262 (assignment_operator -> EQUALS .)
    SIZEOF          reduce using rule 262 (assignment_operator -> EQUALS .)
    POINTCUT        reduce using rule 262 (assignment_operator -> EQUALS .)
    POINTCUT_ADD    reduce using rule 262 (assignment_operator -> EQUALS .)
    POINTCUT_SUB    reduce using rule 262 (assignment_operator -> EQUALS .)
    POINTCUT_FIRST  reduce using rule 262 (assignment_operator -> EQUALS .)
    POINTCUT_LAST   reduce using rule 262 (assignment_operator -> EQUALS .)
    POINTCUT_MIN    reduce using rule 262 (assignment_operator -> EQUALS .)
    POINTCUT_MAX    reduce using rule 262 (assignment_operator -> EQUALS .)
    LPAREN          reduce using rule 262 (assignment_operator -> EQUALS .)
    AND             reduce using rule 262 (assignment_operator -> EQUALS .)
    TIMES           reduce using rule 262 (assignment_operator -> EQUALS .)
    PLUS            reduce using rule 262 (assignment_operator -> EQUALS .)
    MINUS           reduce using rule 262 (assignment_operator -> EQUALS .)
    NOT             reduce using rule 262 (assignment_operator -> EQUALS .)
    LNOT            reduce using rule 262 (assignment_operator -> EQUALS .)
    ID              reduce using rule 262 (assignment_operator -> EQUALS .)
    INT_CONST_DEC   reduce using rule 262 (assignment_operator -> EQUALS .)
    INT_CONST_OCT   reduce using rule 262 (assignment_operator -> EQUALS .)
    INT_CONST_HEX   reduce using rule 262 (assignment_operator -> EQUALS .)
    FLOAT_CONST     reduce using rule 262 (assignment_operator -> EQUALS .)
    HEX_FLOAT_CONST reduce using rule 262 (assignment_operator -> EQUALS .)
    CHAR_CONST      reduce using rule 262 (assignment_operator -> EQUALS .)
    WCHAR_CONST     reduce using rule 262 (assignment_operator -> EQUALS .)
    STRING_LITERAL  reduce using rule 262 (assignment_operator -> EQUALS .)
    WSTRING_LITERAL reduce using rule 262 (assignment_operator -> EQUALS .)


state 181

    (263) assignment_operator -> XOREQUAL .

    PLUSPLUS        reduce using rule 263 (assignment_operator -> XOREQUAL .)
    MINUSMINUS      reduce using rule 263 (assignment_operator -> XOREQUAL .)
    SIZEOF          reduce using rule 263 (assignment_operator -> XOREQUAL .)
    POINTCUT        reduce using rule 263 (assignment_operator -> XOREQUAL .)
    POINTCUT_ADD    reduce using rule 263 (assignment_operator -> XOREQUAL .)
    POINTCUT_SUB    reduce using rule 263 (assignment_operator -> XOREQUAL .)
    POINTCUT_FIRST  reduce using rule 263 (assignment_operator -> XOREQUAL .)
    POINTCUT_LAST   reduce using rule 263 (assignment_operator -> XOREQUAL .)
    POINTCUT_MIN    reduce using rule 263 (assignment_operator -> XOREQUAL .)
    POINTCUT_MAX    reduce using rule 263 (assignment_operator -> XOREQUAL .)
    LPAREN          reduce using rule 263 (assignment_operator -> XOREQUAL .)
    AND             reduce using rule 263 (assignment_operator -> XOREQUAL .)
    TIMES           reduce using rule 263 (assignment_operator -> XOREQUAL .)
    PLUS            reduce using rule 263 (assignment_operator -> XOREQUAL .)
    MINUS           reduce using rule 263 (assignment_operator -> XOREQUAL .)
    NOT             reduce using rule 263 (assignment_operator -> XOREQUAL .)
    LNOT            reduce using rule 263 (assignment_operator -> XOREQUAL .)
    ID              reduce using rule 263 (assignment_operator -> XOREQUAL .)
    INT_CONST_DEC   reduce using rule 263 (assignment_operator -> XOREQUAL .)
    INT_CONST_OCT   reduce using rule 263 (assignment_operator -> XOREQUAL .)
    INT_CONST_HEX   reduce using rule 263 (assignment_operator -> XOREQUAL .)
    FLOAT_CONST     reduce using rule 263 (assignment_operator -> XOREQUAL .)
    HEX_FLOAT_CONST reduce using rule 263 (assignment_operator -> XOREQUAL .)
    CHAR_CONST      reduce using rule 263 (assignment_operator -> XOREQUAL .)
    WCHAR_CONST     reduce using rule 263 (assignment_operator -> XOREQUAL .)
    STRING_LITERAL  reduce using rule 263 (assignment_operator -> XOREQUAL .)
    WSTRING_LITERAL reduce using rule 263 (assignment_operator -> XOREQUAL .)


state 182

    (267) assignment_operator -> PLUSEQUAL .

    PLUSPLUS        reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    MINUSMINUS      reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    SIZEOF          reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    POINTCUT        reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    POINTCUT_ADD    reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    POINTCUT_SUB    reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    POINTCUT_FIRST  reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    POINTCUT_LAST   reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    POINTCUT_MIN    reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    POINTCUT_MAX    reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    LPAREN          reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    AND             reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    TIMES           reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    PLUS            reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    MINUS           reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    NOT             reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    LNOT            reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    ID              reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    INT_CONST_DEC   reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    INT_CONST_OCT   reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    INT_CONST_HEX   reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    FLOAT_CONST     reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    HEX_FLOAT_CONST reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    CHAR_CONST      reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    WCHAR_CONST     reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    STRING_LITERAL  reduce using rule 267 (assignment_operator -> PLUSEQUAL .)
    WSTRING_LITERAL reduce using rule 267 (assignment_operator -> PLUSEQUAL .)


state 183

    (269) assignment_operator -> LSHIFTEQUAL .

    PLUSPLUS        reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    MINUSMINUS      reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    SIZEOF          reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    POINTCUT        reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    POINTCUT_ADD    reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    POINTCUT_SUB    reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    POINTCUT_FIRST  reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    POINTCUT_LAST   reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    POINTCUT_MIN    reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    POINTCUT_MAX    reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    LPAREN          reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    AND             reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    TIMES           reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    PLUS            reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    MINUS           reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    NOT             reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    LNOT            reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    ID              reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    INT_CONST_DEC   reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    INT_CONST_OCT   reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    INT_CONST_HEX   reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    FLOAT_CONST     reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    HEX_FLOAT_CONST reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    CHAR_CONST      reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    WCHAR_CONST     reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    STRING_LITERAL  reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)
    WSTRING_LITERAL reduce using rule 269 (assignment_operator -> LSHIFTEQUAL .)


state 184

    (261) assignment_expression -> unary_expression assignment_operator . assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 329
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 185

    (271) assignment_operator -> ANDEQUAL .

    PLUSPLUS        reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    MINUSMINUS      reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    SIZEOF          reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    POINTCUT        reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    POINTCUT_ADD    reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    POINTCUT_SUB    reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    POINTCUT_FIRST  reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    POINTCUT_LAST   reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    POINTCUT_MIN    reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    POINTCUT_MAX    reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    LPAREN          reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    AND             reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    TIMES           reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    PLUS            reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    MINUS           reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    NOT             reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    LNOT            reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    ID              reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    INT_CONST_DEC   reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    INT_CONST_OCT   reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    INT_CONST_HEX   reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    FLOAT_CONST     reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    HEX_FLOAT_CONST reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    CHAR_CONST      reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    WCHAR_CONST     reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    STRING_LITERAL  reduce using rule 271 (assignment_operator -> ANDEQUAL .)
    WSTRING_LITERAL reduce using rule 271 (assignment_operator -> ANDEQUAL .)


state 186

    (272) assignment_operator -> OREQUAL .

    PLUSPLUS        reduce using rule 272 (assignment_operator -> OREQUAL .)
    MINUSMINUS      reduce using rule 272 (assignment_operator -> OREQUAL .)
    SIZEOF          reduce using rule 272 (assignment_operator -> OREQUAL .)
    POINTCUT        reduce using rule 272 (assignment_operator -> OREQUAL .)
    POINTCUT_ADD    reduce using rule 272 (assignment_operator -> OREQUAL .)
    POINTCUT_SUB    reduce using rule 272 (assignment_operator -> OREQUAL .)
    POINTCUT_FIRST  reduce using rule 272 (assignment_operator -> OREQUAL .)
    POINTCUT_LAST   reduce using rule 272 (assignment_operator -> OREQUAL .)
    POINTCUT_MIN    reduce using rule 272 (assignment_operator -> OREQUAL .)
    POINTCUT_MAX    reduce using rule 272 (assignment_operator -> OREQUAL .)
    LPAREN          reduce using rule 272 (assignment_operator -> OREQUAL .)
    AND             reduce using rule 272 (assignment_operator -> OREQUAL .)
    TIMES           reduce using rule 272 (assignment_operator -> OREQUAL .)
    PLUS            reduce using rule 272 (assignment_operator -> OREQUAL .)
    MINUS           reduce using rule 272 (assignment_operator -> OREQUAL .)
    NOT             reduce using rule 272 (assignment_operator -> OREQUAL .)
    LNOT            reduce using rule 272 (assignment_operator -> OREQUAL .)
    ID              reduce using rule 272 (assignment_operator -> OREQUAL .)
    INT_CONST_DEC   reduce using rule 272 (assignment_operator -> OREQUAL .)
    INT_CONST_OCT   reduce using rule 272 (assignment_operator -> OREQUAL .)
    INT_CONST_HEX   reduce using rule 272 (assignment_operator -> OREQUAL .)
    FLOAT_CONST     reduce using rule 272 (assignment_operator -> OREQUAL .)
    HEX_FLOAT_CONST reduce using rule 272 (assignment_operator -> OREQUAL .)
    CHAR_CONST      reduce using rule 272 (assignment_operator -> OREQUAL .)
    WCHAR_CONST     reduce using rule 272 (assignment_operator -> OREQUAL .)
    STRING_LITERAL  reduce using rule 272 (assignment_operator -> OREQUAL .)
    WSTRING_LITERAL reduce using rule 272 (assignment_operator -> OREQUAL .)


state 187

    (264) assignment_operator -> TIMESEQUAL .

    PLUSPLUS        reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    MINUSMINUS      reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    SIZEOF          reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    POINTCUT        reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    POINTCUT_ADD    reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    POINTCUT_SUB    reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    POINTCUT_FIRST  reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    POINTCUT_LAST   reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    POINTCUT_MIN    reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    POINTCUT_MAX    reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    LPAREN          reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    AND             reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    TIMES           reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    PLUS            reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    MINUS           reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    NOT             reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    LNOT            reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    ID              reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    INT_CONST_DEC   reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    INT_CONST_OCT   reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    INT_CONST_HEX   reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    FLOAT_CONST     reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    HEX_FLOAT_CONST reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    CHAR_CONST      reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    WCHAR_CONST     reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    STRING_LITERAL  reduce using rule 264 (assignment_operator -> TIMESEQUAL .)
    WSTRING_LITERAL reduce using rule 264 (assignment_operator -> TIMESEQUAL .)


state 188

    (270) assignment_operator -> RSHIFTEQUAL .

    PLUSPLUS        reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    MINUSMINUS      reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    SIZEOF          reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    POINTCUT        reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    POINTCUT_ADD    reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    POINTCUT_SUB    reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    POINTCUT_FIRST  reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    POINTCUT_LAST   reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    POINTCUT_MIN    reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    POINTCUT_MAX    reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    LPAREN          reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    AND             reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    TIMES           reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    PLUS            reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    MINUS           reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    NOT             reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    LNOT            reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    ID              reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    INT_CONST_DEC   reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    INT_CONST_OCT   reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    INT_CONST_HEX   reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    FLOAT_CONST     reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    HEX_FLOAT_CONST reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    CHAR_CONST      reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    WCHAR_CONST     reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    STRING_LITERAL  reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)
    WSTRING_LITERAL reduce using rule 270 (assignment_operator -> RSHIFTEQUAL .)


state 189

    (88) pointcut_last_keyword -> POINTCUT_LAST LPAREN . ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> POINTCUT_LAST LPAREN . ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> POINTCUT_LAST LPAREN . ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> POINTCUT_LAST LPAREN . ID RPAREN

    ID              shift and go to state 330


state 190

    (301) unary_expression -> SIZEOF unary_expression .

    EQUALS          reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    XOREQUAL        reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    TIMESEQUAL      reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    DIVEQUAL        reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    MODEQUAL        reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    PLUSEQUAL       reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    MINUSEQUAL      reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    LSHIFTEQUAL     reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    RSHIFTEQUAL     reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    ANDEQUAL        reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    OREQUAL         reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    CONDOP          reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    TIMES           reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    DIVIDE          reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    MOD             reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    PLUS            reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    MINUS           reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    RSHIFT          reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    LSHIFT          reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    LT              reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    LE              reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    GE              reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    GT              reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    EQ              reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    NE              reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    AND             reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    OR              reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    XOR             reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    LAND            reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    LOR             reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    RPAREN          reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    COMMA           reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    SEMI            reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    RBRACKET        reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    COLON           reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)
    RBRACE          reduce using rule 301 (unary_expression -> SIZEOF unary_expression .)


state 191

    (302) unary_expression -> SIZEOF LPAREN . type_name RPAREN
    (317) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list COMMA brace_close
    (323) primary_expression -> LPAREN . expression RPAREN
    (225) type_name -> . specifier_qualifier_list abstract_declarator_opt
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    struct_or_union_specifier      shift and go to state 5
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    type_specifier                 shift and go to state 87
    pointcut_add_keyword           shift and go to state 104
    type_name                      shift and go to state 331
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    struct_or_union                shift and go to state 7
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    typedef_name                   shift and go to state 28
    binary_expression              shift and go to state 130
    enum_specifier                 shift and go to state 45
    pointcut_keyword               shift and go to state 132
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 211
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 208

state 192

    (304) unary_operator -> TIMES .

    LPAREN          reduce using rule 304 (unary_operator -> TIMES .)
    PLUSPLUS        reduce using rule 304 (unary_operator -> TIMES .)
    MINUSMINUS      reduce using rule 304 (unary_operator -> TIMES .)
    SIZEOF          reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT        reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_ADD    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_SUB    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_FIRST  reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_LAST   reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MIN    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MAX    reduce using rule 304 (unary_operator -> TIMES .)
    AND             reduce using rule 304 (unary_operator -> TIMES .)
    TIMES           reduce using rule 304 (unary_operator -> TIMES .)
    PLUS            reduce using rule 304 (unary_operator -> TIMES .)
    MINUS           reduce using rule 304 (unary_operator -> TIMES .)
    NOT             reduce using rule 304 (unary_operator -> TIMES .)
    LNOT            reduce using rule 304 (unary_operator -> TIMES .)
    ID              reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_DEC   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_OCT   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_HEX   reduce using rule 304 (unary_operator -> TIMES .)
    FLOAT_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    HEX_FLOAT_CONST reduce using rule 304 (unary_operator -> TIMES .)
    CHAR_CONST      reduce using rule 304 (unary_operator -> TIMES .)
    WCHAR_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    STRING_LITERAL  reduce using rule 304 (unary_operator -> TIMES .)
    WSTRING_LITERAL reduce using rule 304 (unary_operator -> TIMES .)


state 193

    (335) unified_string_literal -> unified_string_literal STRING_LITERAL .

    STRING_LITERAL  reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LBRACKET        reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LPAREN          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    PERIOD          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    ARROW           reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    PLUSPLUS        reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    MINUSMINUS      reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    EQUALS          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    XOREQUAL        reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    TIMESEQUAL      reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    DIVEQUAL        reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    MODEQUAL        reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    PLUSEQUAL       reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    MINUSEQUAL      reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LSHIFTEQUAL     reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    RSHIFTEQUAL     reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    ANDEQUAL        reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    OREQUAL         reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    CONDOP          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    TIMES           reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    DIVIDE          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    MOD             reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    PLUS            reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    MINUS           reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    RSHIFT          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LSHIFT          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LT              reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LE              reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    GE              reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    GT              reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    EQ              reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    NE              reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    AND             reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    OR              reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    XOR             reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LAND            reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    LOR             reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    RPAREN          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    COMMA           reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    SEMI            reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    RBRACKET        reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    COLON           reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)
    RBRACE          reduce using rule 335 (unified_string_literal -> unified_string_literal STRING_LITERAL .)


state 194

    (314) postfix_expression -> postfix_expression ARROW . identifier
    (326) identifier -> . ID

    ID              shift and go to state 124

    identifier                     shift and go to state 332

state 195

    (315) postfix_expression -> postfix_expression PLUSPLUS .

    LBRACKET        reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    LPAREN          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    PERIOD          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    ARROW           reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    EQUALS          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    XOREQUAL        reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    TIMESEQUAL      reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    DIVEQUAL        reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    MODEQUAL        reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUSEQUAL       reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUSEQUAL      reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    LSHIFTEQUAL     reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    RSHIFTEQUAL     reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    ANDEQUAL        reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    OREQUAL         reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    CONDOP          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    TIMES           reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    DIVIDE          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    MOD             reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUS            reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUS           reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    RSHIFT          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    LSHIFT          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    LT              reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    LE              reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    GE              reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    GT              reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    EQ              reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    NE              reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    AND             reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    OR              reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    XOR             reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    LAND            reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    LOR             reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    RBRACKET        reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    COMMA           reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    RBRACE          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    RPAREN          reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    SEMI            reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)
    COLON           reduce using rule 315 (postfix_expression -> postfix_expression PLUSPLUS .)


state 196

    (313) postfix_expression -> postfix_expression PERIOD . identifier
    (326) identifier -> . ID

    ID              shift and go to state 124

    identifier                     shift and go to state 333

state 197

    (310) postfix_expression -> postfix_expression LBRACKET . expression RBRACKET
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116
    expression                     shift and go to state 334

state 198

    (311) postfix_expression -> postfix_expression LPAREN . argument_expression_list RPAREN
    (312) postfix_expression -> postfix_expression LPAREN . RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    RPAREN          shift and go to state 335
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 337
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 199

    (316) postfix_expression -> postfix_expression MINUSMINUS .

    LBRACKET        reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    LPAREN          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    PERIOD          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    ARROW           reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    EQUALS          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    XOREQUAL        reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    TIMESEQUAL      reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    DIVEQUAL        reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    MODEQUAL        reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUSEQUAL       reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUSEQUAL      reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    LSHIFTEQUAL     reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    RSHIFTEQUAL     reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    ANDEQUAL        reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    OREQUAL         reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    CONDOP          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    TIMES           reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    DIVIDE          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    MOD             reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUS            reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUS           reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    RSHIFT          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    LSHIFT          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    LT              reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    LE              reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    GE              reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    GT              reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    EQ              reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    NE              reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    AND             reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    OR              reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    XOR             reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    LAND            reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    LOR             reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    RBRACKET        reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    COMMA           reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    RBRACE          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    RPAREN          reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    SEMI            reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)
    COLON           reduce using rule 316 (postfix_expression -> postfix_expression MINUSMINUS .)


state 200

    (199) direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .

    LBRACKET        reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    LPAREN          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    EQUALS          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    CONST           reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    RESTRICT        reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    VOLATILE        reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    VOID            reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    _BOOL           reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    CHAR            reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    SHORT           reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    INT             reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    LONG            reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    FLOAT           reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    DOUBLE          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    _COMPLEX        reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    SIGNED          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    UNSIGNED        reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    AUTO            reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    REGISTER        reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    STATIC          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    EXTERN          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    TYPEDEF         reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    INLINE          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    TYPEID          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    ENUM            reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    STRUCT          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    UNION           reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    LBRACE          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    COMMA           reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    SEMI            reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    RPAREN          reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)
    COLON           reduce using rule 199 (direct_declarator -> direct_declarator LBRACKET assignment_expression_opt RBRACKET .)


state 201

    (75) pointcut_sub_keyword -> POINTCUT_SUB LPAREN . ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> POINTCUT_SUB LPAREN . ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> POINTCUT_SUB LPAREN . ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> POINTCUT_SUB LPAREN . ID RPAREN

    ID              shift and go to state 338


state 202

    (295) cast_expression -> unary_expression .

    TIMES           reduce using rule 295 (cast_expression -> unary_expression .)
    DIVIDE          reduce using rule 295 (cast_expression -> unary_expression .)
    MOD             reduce using rule 295 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 295 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 295 (cast_expression -> unary_expression .)
    RSHIFT          reduce using rule 295 (cast_expression -> unary_expression .)
    LSHIFT          reduce using rule 295 (cast_expression -> unary_expression .)
    LT              reduce using rule 295 (cast_expression -> unary_expression .)
    LE              reduce using rule 295 (cast_expression -> unary_expression .)
    GE              reduce using rule 295 (cast_expression -> unary_expression .)
    GT              reduce using rule 295 (cast_expression -> unary_expression .)
    EQ              reduce using rule 295 (cast_expression -> unary_expression .)
    NE              reduce using rule 295 (cast_expression -> unary_expression .)
    AND             reduce using rule 295 (cast_expression -> unary_expression .)
    OR              reduce using rule 295 (cast_expression -> unary_expression .)
    XOR             reduce using rule 295 (cast_expression -> unary_expression .)
    LAND            reduce using rule 295 (cast_expression -> unary_expression .)
    LOR             reduce using rule 295 (cast_expression -> unary_expression .)
    CONDOP          reduce using rule 295 (cast_expression -> unary_expression .)
    RBRACKET        reduce using rule 295 (cast_expression -> unary_expression .)
    RPAREN          reduce using rule 295 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 295 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 295 (cast_expression -> unary_expression .)
    COLON           reduce using rule 295 (cast_expression -> unary_expression .)
    RBRACE          reduce using rule 295 (cast_expression -> unary_expression .)
    EQUALS          reduce using rule 295 (cast_expression -> unary_expression .)
    XOREQUAL        reduce using rule 295 (cast_expression -> unary_expression .)
    TIMESEQUAL      reduce using rule 295 (cast_expression -> unary_expression .)
    DIVEQUAL        reduce using rule 295 (cast_expression -> unary_expression .)
    MODEQUAL        reduce using rule 295 (cast_expression -> unary_expression .)
    PLUSEQUAL       reduce using rule 295 (cast_expression -> unary_expression .)
    MINUSEQUAL      reduce using rule 295 (cast_expression -> unary_expression .)
    LSHIFTEQUAL     reduce using rule 295 (cast_expression -> unary_expression .)
    RSHIFTEQUAL     reduce using rule 295 (cast_expression -> unary_expression .)
    ANDEQUAL        reduce using rule 295 (cast_expression -> unary_expression .)
    OREQUAL         reduce using rule 295 (cast_expression -> unary_expression .)


state 203

    (300) unary_expression -> unary_operator cast_expression .

    EQUALS          reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    XOREQUAL        reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    TIMESEQUAL      reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    DIVEQUAL        reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    MODEQUAL        reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    PLUSEQUAL       reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    MINUSEQUAL      reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    LSHIFTEQUAL     reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    RSHIFTEQUAL     reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    ANDEQUAL        reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    OREQUAL         reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    CONDOP          reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    TIMES           reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    DIVIDE          reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    MOD             reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    PLUS            reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    MINUS           reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    RSHIFT          reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    LSHIFT          reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    LT              reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    LE              reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    GE              reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    GT              reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    EQ              reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    NE              reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    AND             reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    OR              reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    XOR             reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    LAND            reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    LOR             reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    RPAREN          reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    COMMA           reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    SEMI            reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    RBRACKET        reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    COLON           reduce using rule 300 (unary_expression -> unary_operator cast_expression .)
    RBRACE          reduce using rule 300 (unary_expression -> unary_operator cast_expression .)


state 204

    (296) cast_expression -> LPAREN . type_name RPAREN cast_expression
    (317) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list COMMA brace_close
    (323) primary_expression -> LPAREN . expression RPAREN
    (225) type_name -> . specifier_qualifier_list abstract_declarator_opt
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    struct_or_union_specifier      shift and go to state 5
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    type_specifier                 shift and go to state 87
    unary_expression               shift and go to state 93
    type_name                      shift and go to state 339
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    struct_or_union                shift and go to state 7
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    typedef_name                   shift and go to state 28
    binary_expression              shift and go to state 130
    enum_specifier                 shift and go to state 45
    pointcut_keyword               shift and go to state 132
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 211
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 208

state 205

    (298) unary_expression -> PLUSPLUS unary_expression .

    EQUALS          reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    XOREQUAL        reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    TIMESEQUAL      reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    DIVEQUAL        reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    MODEQUAL        reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    PLUSEQUAL       reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    MINUSEQUAL      reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    LSHIFTEQUAL     reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    RSHIFTEQUAL     reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    ANDEQUAL        reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    OREQUAL         reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    CONDOP          reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    TIMES           reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    DIVIDE          reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    MOD             reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    PLUS            reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    MINUS           reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    RSHIFT          reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    LSHIFT          reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    LT              reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    LE              reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    GE              reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    GT              reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    EQ              reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    NE              reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    AND             reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    OR              reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    XOR             reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    LAND            reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    LOR             reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    RPAREN          reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    COMMA           reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    SEMI            reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    RBRACKET        reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    COLON           reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)
    RBRACE          reduce using rule 298 (unary_expression -> PLUSPLUS unary_expression .)


state 206

    (317) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN . type_name RPAREN brace_open initializer_list COMMA brace_close
    (323) primary_expression -> LPAREN . expression RPAREN
    (225) type_name -> . specifier_qualifier_list abstract_declarator_opt
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (168) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list_opt
    (169) specifier_qualifier_list -> . type_specifier specifier_qualifier_list_opt
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    struct_or_union_specifier      shift and go to state 5
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    type_specifier                 shift and go to state 87
    pointcut_add_keyword           shift and go to state 104
    type_name                      shift and go to state 340
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    struct_or_union                shift and go to state 7
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    typedef_name                   shift and go to state 28
    binary_expression              shift and go to state 130
    enum_specifier                 shift and go to state 45
    pointcut_keyword               shift and go to state 132
    type_qualifier                 shift and go to state 89
    specifier_qualifier_list       shift and go to state 211
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 208

state 207

    (200) direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .

    LBRACKET        reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    LPAREN          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    EQUALS          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    CONST           reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    RESTRICT        reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    VOLATILE        reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    VOID            reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    _BOOL           reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    CHAR            reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    SHORT           reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    INT             reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    LONG            reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    FLOAT           reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    DOUBLE          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    _COMPLEX        reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    SIGNED          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    UNSIGNED        reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    AUTO            reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    REGISTER        reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    STATIC          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    EXTERN          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    TYPEDEF         reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    INLINE          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    TYPEID          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    ENUM            reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    STRUCT          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    UNION           reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    LBRACE          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    COMMA           reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    SEMI            reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    RPAREN          reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)
    COLON           reduce using rule 200 (direct_declarator -> direct_declarator LBRACKET TIMES RBRACKET .)


state 208

    (323) primary_expression -> LPAREN expression . RPAREN
    (258) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 341
    COMMA           shift and go to state 342


state 209

    (317) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list COMMA brace_close
    (296) cast_expression -> LPAREN type_name . RPAREN cast_expression

    RPAREN          shift and go to state 343


state 210

    (257) expression -> assignment_expression .

    COMMA           reduce using rule 257 (expression -> assignment_expression .)
    SEMI            reduce using rule 257 (expression -> assignment_expression .)
    RPAREN          reduce using rule 257 (expression -> assignment_expression .)
    RBRACKET        reduce using rule 257 (expression -> assignment_expression .)
    COLON           reduce using rule 257 (expression -> assignment_expression .)


state 211

    (225) type_name -> specifier_qualifier_list . abstract_declarator_opt
    (1) abstract_declarator_opt -> . empty
    (2) abstract_declarator_opt -> . abstract_declarator
    (340) empty -> .
    (226) abstract_declarator -> . pointer
    (227) abstract_declarator -> . pointer direct_abstract_declarator
    (228) abstract_declarator -> . direct_abstract_declarator
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer
    (229) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (230) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET
    (231) direct_abstract_declarator -> . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET TIMES RBRACKET
    (233) direct_abstract_declarator -> . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (235) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    RPAREN          reduce using rule 340 (empty -> .)
    TIMES           shift and go to state 27
    LPAREN          shift and go to state 345
    LBRACKET        shift and go to state 242

    abstract_declarator_opt        shift and go to state 344
    abstract_declarator            shift and go to state 241
    direct_abstract_declarator     shift and go to state 244
    pointer                        shift and go to state 346
    empty                          shift and go to state 246

state 212

    (299) unary_expression -> MINUSMINUS unary_expression .

    EQUALS          reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    XOREQUAL        reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    TIMESEQUAL      reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    DIVEQUAL        reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    MODEQUAL        reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    PLUSEQUAL       reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    MINUSEQUAL      reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    LSHIFTEQUAL     reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    RSHIFTEQUAL     reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    ANDEQUAL        reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    OREQUAL         reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    CONDOP          reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    TIMES           reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    DIVIDE          reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    MOD             reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    PLUS            reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    MINUS           reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    RSHIFT          reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    LSHIFT          reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    LT              reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    LE              reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    GE              reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    GT              reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    EQ              reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    NE              reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    AND             reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    OR              reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    XOR             reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    LAND            reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    LOR             reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    RPAREN          reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    COMMA           reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    SEMI            reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    RBRACKET        reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    COLON           reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)
    RBRACE          reduce using rule 299 (unary_expression -> MINUSMINUS unary_expression .)


state 213

    (69) pointcut_add_keyword -> POINTCUT_ADD LPAREN . ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> POINTCUT_ADD LPAREN . ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> POINTCUT_ADD LPAREN . ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> POINTCUT_ADD LPAREN . ID RPAREN

    ID              shift and go to state 347


state 214

    (93) pointcut_min_keyword -> POINTCUT_MIN LPAREN . ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> POINTCUT_MIN LPAREN . ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> POINTCUT_MIN LPAREN . ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> POINTCUT_MIN LPAREN . ID RPAREN

    ID              shift and go to state 348


state 215

    (282) binary_expression -> binary_expression RSHIFT . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 349
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 216

    (294) binary_expression -> binary_expression LOR . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 350
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 217

    (283) binary_expression -> binary_expression LSHIFT . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 351
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 218

    (281) binary_expression -> binary_expression MINUS . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 352
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 219

    (285) binary_expression -> binary_expression LE . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 353
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 220

    (289) binary_expression -> binary_expression NE . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 354
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 221

    (284) binary_expression -> binary_expression LT . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 355
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 222

    (280) binary_expression -> binary_expression PLUS . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 356
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 223

    (287) binary_expression -> binary_expression GT . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 357
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 224

    (292) binary_expression -> binary_expression XOR . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 358
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 225

    (278) binary_expression -> binary_expression DIVIDE . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 359
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 226

    (277) binary_expression -> binary_expression TIMES . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 360
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 227

    (286) binary_expression -> binary_expression GE . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 361
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 228

    (293) binary_expression -> binary_expression LAND . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 362
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 229

    (288) binary_expression -> binary_expression EQ . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 363
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 230

    (290) binary_expression -> binary_expression AND . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 364
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 231

    (275) conditional_expression -> binary_expression CONDOP . expression COLON conditional_expression
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116
    expression                     shift and go to state 365

state 232

    (291) binary_expression -> binary_expression OR . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 366
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 233

    (279) binary_expression -> binary_expression MOD . binary_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 367
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 234

    (63) pointcut_keyword -> POINTCUT LPAREN . ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> POINTCUT LPAREN . ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> POINTCUT LPAREN . ID COMMA ID RPAREN
    (66) pointcut_keyword -> POINTCUT LPAREN . ID RPAREN

    ID              shift and go to state 368


state 235

    (337) unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .

    WSTRING_LITERAL reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LBRACKET        reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LPAREN          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    PERIOD          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    ARROW           reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    PLUSPLUS        reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    MINUSMINUS      reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    EQUALS          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    XOREQUAL        reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    TIMESEQUAL      reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    DIVEQUAL        reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    MODEQUAL        reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    PLUSEQUAL       reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    MINUSEQUAL      reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LSHIFTEQUAL     reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    RSHIFTEQUAL     reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    ANDEQUAL        reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    OREQUAL         reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    CONDOP          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    TIMES           reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    DIVIDE          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    MOD             reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    PLUS            reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    MINUS           reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    RSHIFT          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LSHIFT          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LT              reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LE              reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    GE              reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    GT              reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    EQ              reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    NE              reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    AND             reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    OR              reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    XOR             reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LAND            reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    LOR             reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    RPAREN          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    COMMA           reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    SEMI            reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    RBRACKET        reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    COLON           reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)
    RBRACE          reduce using rule 337 (unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL .)


state 236

    (81) pointcut_first_keyword -> POINTCUT_FIRST LPAREN . ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> POINTCUT_FIRST LPAREN . ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> POINTCUT_FIRST LPAREN . ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> POINTCUT_FIRST LPAREN . ID RPAREN

    ID              shift and go to state 369


state 237

    (202) direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .

    LBRACKET        reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    LPAREN          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    EQUALS          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    CONST           reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    RESTRICT        reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    VOLATILE        reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    VOID            reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    _BOOL           reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    CHAR            reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    SHORT           reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    INT             reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    LONG            reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    FLOAT           reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    DOUBLE          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    _COMPLEX        reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    SIGNED          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    UNSIGNED        reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    AUTO            reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    REGISTER        reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    STATIC          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    EXTERN          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    TYPEDEF         reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    INLINE          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    TYPEID          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    ENUM            reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    STRUCT          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    UNION           reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    LBRACE          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    COMMA           reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    SEMI            reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    RPAREN          reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)
    COLON           reduce using rule 202 (direct_declarator -> direct_declarator LPAREN identifier_list_opt RPAREN .)


state 238

    (201) direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .

    LBRACKET        reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    LPAREN          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    EQUALS          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    CONST           reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    RESTRICT        reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    VOLATILE        reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    VOID            reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    _BOOL           reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    CHAR            reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    SHORT           reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    INT             reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    LONG            reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    FLOAT           reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    DOUBLE          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    _COMPLEX        reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    SIGNED          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    UNSIGNED        reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    AUTO            reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    REGISTER        reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    STATIC          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    EXTERN          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    TYPEDEF         reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    INLINE          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    TYPEID          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    ENUM            reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    STRUCT          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    UNION           reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    LBRACE          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    COMMA           reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    SEMI            reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    RPAREN          reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)
    COLON           reduce using rule 201 (direct_declarator -> direct_declarator LPAREN parameter_type_list RPAREN .)


state 239

    (198) direct_declarator -> LPAREN . declarator RPAREN
    (229) direct_abstract_declarator -> LPAREN . abstract_declarator RPAREN
    (235) direct_abstract_declarator -> LPAREN . parameter_type_list_opt RPAREN
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (226) abstract_declarator -> . pointer
    (227) abstract_declarator -> . pointer direct_abstract_declarator
    (228) abstract_declarator -> . direct_abstract_declarator
    (19) parameter_type_list_opt -> . empty
    (20) parameter_type_list_opt -> . parameter_type_list
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer
    (229) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (230) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET
    (231) direct_abstract_declarator -> . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET TIMES RBRACKET
    (233) direct_abstract_declarator -> . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (235) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN
    (340) empty -> .
    (207) parameter_type_list -> . parameter_list
    (208) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (209) parameter_list -> . parameter_declaration
    (210) parameter_list -> . parameter_list COMMA parameter_declaration
    (211) parameter_declaration -> . declaration_specifiers declarator
    (212) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    ID              shift and go to state 32
    LPAREN          shift and go to state 239
    TIMES           shift and go to state 27
    LBRACKET        shift and go to state 242
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 5
    abstract_declarator            shift and go to state 373
    type_specifier                 shift and go to state 13
    pointer                        shift and go to state 245
    parameter_declaration          shift and go to state 142
    empty                          shift and go to state 370
    struct_or_union                shift and go to state 7
    parameter_type_list            shift and go to state 371
    direct_declarator              shift and go to state 24
    declaration_specifiers         shift and go to state 143
    typedef_name                   shift and go to state 28
    parameter_type_list_opt        shift and go to state 372
    parameter_list                 shift and go to state 145
    enum_specifier                 shift and go to state 45
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    declarator                     shift and go to state 53
    direct_abstract_declarator     shift and go to state 244

state 240

    (212) parameter_declaration -> declaration_specifiers abstract_declarator_opt .

    COMMA           reduce using rule 212 (parameter_declaration -> declaration_specifiers abstract_declarator_opt .)
    RPAREN          reduce using rule 212 (parameter_declaration -> declaration_specifiers abstract_declarator_opt .)


state 241

    (2) abstract_declarator_opt -> abstract_declarator .

    COMMA           reduce using rule 2 (abstract_declarator_opt -> abstract_declarator .)
    RPAREN          reduce using rule 2 (abstract_declarator_opt -> abstract_declarator .)


state 242

    (231) direct_abstract_declarator -> LBRACKET . assignment_expression_opt RBRACKET
    (233) direct_abstract_declarator -> LBRACKET . TIMES RBRACKET
    (3) assignment_expression_opt -> . empty
    (4) assignment_expression_opt -> . assignment_expression
    (340) empty -> .
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    TIMES           shift and go to state 375
    RBRACKET        reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    assignment_expression_opt      shift and go to state 374
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 115
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    empty                          shift and go to state 113
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116

state 243

    (211) parameter_declaration -> declaration_specifiers declarator .

    COMMA           reduce using rule 211 (parameter_declaration -> declaration_specifiers declarator .)
    RPAREN          reduce using rule 211 (parameter_declaration -> declaration_specifiers declarator .)


state 244

    (228) abstract_declarator -> direct_abstract_declarator .
    (230) direct_abstract_declarator -> direct_abstract_declarator . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> direct_abstract_declarator . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> direct_abstract_declarator . LPAREN parameter_type_list_opt RPAREN

    RPAREN          reduce using rule 228 (abstract_declarator -> direct_abstract_declarator .)
    COMMA           reduce using rule 228 (abstract_declarator -> direct_abstract_declarator .)
    LBRACKET        shift and go to state 376
    LPAREN          shift and go to state 377


state 245

    (196) declarator -> pointer . direct_declarator
    (226) abstract_declarator -> pointer .
    (227) abstract_declarator -> pointer . direct_abstract_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (229) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (230) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET
    (231) direct_abstract_declarator -> . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET TIMES RBRACKET
    (233) direct_abstract_declarator -> . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (235) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    COMMA           reduce using rule 226 (abstract_declarator -> pointer .)
    RPAREN          reduce using rule 226 (abstract_declarator -> pointer .)
    ID              shift and go to state 32
    LPAREN          shift and go to state 239
    LBRACKET        shift and go to state 242

    direct_declarator              shift and go to state 59
    direct_abstract_declarator     shift and go to state 378

state 246

    (1) abstract_declarator_opt -> empty .

    COMMA           reduce using rule 1 (abstract_declarator_opt -> empty .)
    RPAREN          reduce using rule 1 (abstract_declarator_opt -> empty .)


state 247

    (214) identifier_list -> identifier_list COMMA . identifier
    (326) identifier -> . ID

    ID              shift and go to state 124

    identifier                     shift and go to state 379

state 248

    (208) parameter_type_list -> parameter_list COMMA . ELLIPSIS
    (210) parameter_list -> parameter_list COMMA . parameter_declaration
    (211) parameter_declaration -> . declaration_specifiers declarator
    (212) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    ELLIPSIS        shift and go to state 380
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 7
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 45
    parameter_declaration          shift and go to state 381
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    struct_or_union_specifier      shift and go to state 5
    declaration_specifiers         shift and go to state 143
    typedef_name                   shift and go to state 28

state 249

    (189) enum_specifier -> ENUM TYPEID brace_open enumerator_list . brace_close
    (191) enumerator_list -> enumerator_list . COMMA
    (192) enumerator_list -> enumerator_list . COMMA enumerator
    (339) brace_close -> . RBRACE

    COMMA           shift and go to state 251
    RBRACE          shift and go to state 165

    brace_close                    shift and go to state 382

state 250

    (188) enum_specifier -> ENUM ID brace_open enumerator_list . brace_close
    (191) enumerator_list -> enumerator_list . COMMA
    (192) enumerator_list -> enumerator_list . COMMA enumerator
    (339) brace_close -> . RBRACE

    COMMA           shift and go to state 251
    RBRACE          shift and go to state 165

    brace_close                    shift and go to state 383

state 251

    (191) enumerator_list -> enumerator_list COMMA .
    (192) enumerator_list -> enumerator_list COMMA . enumerator
    (193) enumerator -> . ID
    (194) enumerator -> . ID EQUALS constant_expression

    COMMA           reduce using rule 191 (enumerator_list -> enumerator_list COMMA .)
    RBRACE          reduce using rule 191 (enumerator_list -> enumerator_list COMMA .)
    ID              shift and go to state 151

    enumerator                     shift and go to state 384

state 252

    (187) enum_specifier -> ENUM brace_open enumerator_list brace_close .

    CONST           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    RESTRICT        reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    VOLATILE        reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    VOID            reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    _BOOL           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    CHAR            reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    SHORT           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    INT             reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    LONG            reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    FLOAT           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    DOUBLE          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    _COMPLEX        reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    SIGNED          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    UNSIGNED        reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    TYPEID          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    ENUM            reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    STRUCT          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    UNION           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    COLON           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    ID              reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    LPAREN          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    TIMES           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    SEMI            reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    LBRACKET        reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    RPAREN          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    AUTO            reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    REGISTER        reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    STATIC          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    EXTERN          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    TYPEDEF         reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    INLINE          reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)
    COMMA           reduce using rule 187 (enum_specifier -> ENUM brace_open enumerator_list brace_close .)


state 253

    (194) enumerator -> ID EQUALS . constant_expression
    (273) constant_expression -> . conditional_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 202
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 324
    constant_expression            shift and go to state 385
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 254

    (165) init_declarator_list -> init_declarator_list COMMA init_declarator .

    COMMA           reduce using rule 165 (init_declarator_list -> init_declarator_list COMMA init_declarator .)
    SEMI            reduce using rule 165 (init_declarator_list -> init_declarator_list COMMA init_declarator .)


state 255

    (167) init_declarator -> declarator EQUALS initializer .

    COMMA           reduce using rule 167 (init_declarator -> declarator EQUALS initializer .)
    SEMI            reduce using rule 167 (init_declarator -> declarator EQUALS initializer .)


state 256

    (216) initializer -> brace_open . initializer_list brace_close
    (217) initializer -> brace_open . initializer_list COMMA brace_close
    (218) initializer_list -> . designation_opt initializer
    (219) initializer_list -> . initializer_list COMMA designation_opt initializer
    (11) designation_opt -> . empty
    (12) designation_opt -> . designation
    (340) empty -> .
    (220) designation -> . designator_list EQUALS
    (221) designator_list -> . designator
    (222) designator_list -> . designator_list designator
    (223) designator -> . LBRACKET constant_expression RBRACKET
    (224) designator -> . PERIOD identifier

    LBRACE          reduce using rule 340 (empty -> .)
    PLUSPLUS        reduce using rule 340 (empty -> .)
    MINUSMINUS      reduce using rule 340 (empty -> .)
    SIZEOF          reduce using rule 340 (empty -> .)
    POINTCUT        reduce using rule 340 (empty -> .)
    POINTCUT_ADD    reduce using rule 340 (empty -> .)
    POINTCUT_SUB    reduce using rule 340 (empty -> .)
    POINTCUT_FIRST  reduce using rule 340 (empty -> .)
    POINTCUT_LAST   reduce using rule 340 (empty -> .)
    POINTCUT_MIN    reduce using rule 340 (empty -> .)
    POINTCUT_MAX    reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    AND             reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    PLUS            reduce using rule 340 (empty -> .)
    MINUS           reduce using rule 340 (empty -> .)
    NOT             reduce using rule 340 (empty -> .)
    LNOT            reduce using rule 340 (empty -> .)
    ID              reduce using rule 340 (empty -> .)
    INT_CONST_DEC   reduce using rule 340 (empty -> .)
    INT_CONST_OCT   reduce using rule 340 (empty -> .)
    INT_CONST_HEX   reduce using rule 340 (empty -> .)
    FLOAT_CONST     reduce using rule 340 (empty -> .)
    HEX_FLOAT_CONST reduce using rule 340 (empty -> .)
    CHAR_CONST      reduce using rule 340 (empty -> .)
    WCHAR_CONST     reduce using rule 340 (empty -> .)
    STRING_LITERAL  reduce using rule 340 (empty -> .)
    WSTRING_LITERAL reduce using rule 340 (empty -> .)
    LBRACKET        shift and go to state 389
    PERIOD          shift and go to state 388

    designation                    shift and go to state 386
    designator                     shift and go to state 387
    designation_opt                shift and go to state 390
    initializer_list               shift and go to state 392
    designator_list                shift and go to state 393
    empty                          shift and go to state 391

state 257

    (215) initializer -> assignment_expression .

    COMMA           reduce using rule 215 (initializer -> assignment_expression .)
    SEMI            reduce using rule 215 (initializer -> assignment_expression .)
    RBRACE          reduce using rule 215 (initializer -> assignment_expression .)


state 258

    (97) function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .

    SEMI            reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    PPHASH          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    ID              reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    LPAREN          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    TIMES           reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    CONST           reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    RESTRICT        reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    VOLATILE        reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    VOID            reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    _BOOL           reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    CHAR            reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    SHORT           reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    INT             reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    LONG            reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    FLOAT           reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    DOUBLE          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    _COMPLEX        reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    SIGNED          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    UNSIGNED        reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    AUTO            reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    REGISTER        reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    STATIC          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    EXTERN          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    TYPEDEF         reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    INLINE          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    TYPEID          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    ENUM            reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    STRUCT          reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    UNION           reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)
    $end            reduce using rule 97 (function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement .)


state 259

    (99) statement -> expression_statement .

    ID              reduce using rule 99 (statement -> expression_statement .)
    CASE            reduce using rule 99 (statement -> expression_statement .)
    DEFAULT         reduce using rule 99 (statement -> expression_statement .)
    IF              reduce using rule 99 (statement -> expression_statement .)
    SWITCH          reduce using rule 99 (statement -> expression_statement .)
    WHILE           reduce using rule 99 (statement -> expression_statement .)
    DO              reduce using rule 99 (statement -> expression_statement .)
    FOR             reduce using rule 99 (statement -> expression_statement .)
    GOTO            reduce using rule 99 (statement -> expression_statement .)
    BREAK           reduce using rule 99 (statement -> expression_statement .)
    CONTINUE        reduce using rule 99 (statement -> expression_statement .)
    RETURN          reduce using rule 99 (statement -> expression_statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 99 (statement -> expression_statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 99 (statement -> expression_statement .)
    LBRACE          reduce using rule 99 (statement -> expression_statement .)
    CONST           reduce using rule 99 (statement -> expression_statement .)
    RESTRICT        reduce using rule 99 (statement -> expression_statement .)
    VOLATILE        reduce using rule 99 (statement -> expression_statement .)
    VOID            reduce using rule 99 (statement -> expression_statement .)
    _BOOL           reduce using rule 99 (statement -> expression_statement .)
    CHAR            reduce using rule 99 (statement -> expression_statement .)
    SHORT           reduce using rule 99 (statement -> expression_statement .)
    INT             reduce using rule 99 (statement -> expression_statement .)
    LONG            reduce using rule 99 (statement -> expression_statement .)
    FLOAT           reduce using rule 99 (statement -> expression_statement .)
    DOUBLE          reduce using rule 99 (statement -> expression_statement .)
    _COMPLEX        reduce using rule 99 (statement -> expression_statement .)
    SIGNED          reduce using rule 99 (statement -> expression_statement .)
    UNSIGNED        reduce using rule 99 (statement -> expression_statement .)
    AUTO            reduce using rule 99 (statement -> expression_statement .)
    REGISTER        reduce using rule 99 (statement -> expression_statement .)
    STATIC          reduce using rule 99 (statement -> expression_statement .)
    EXTERN          reduce using rule 99 (statement -> expression_statement .)
    TYPEDEF         reduce using rule 99 (statement -> expression_statement .)
    INLINE          reduce using rule 99 (statement -> expression_statement .)
    TYPEID          reduce using rule 99 (statement -> expression_statement .)
    ENUM            reduce using rule 99 (statement -> expression_statement .)
    STRUCT          reduce using rule 99 (statement -> expression_statement .)
    UNION           reduce using rule 99 (statement -> expression_statement .)
    PLUSPLUS        reduce using rule 99 (statement -> expression_statement .)
    MINUSMINUS      reduce using rule 99 (statement -> expression_statement .)
    SIZEOF          reduce using rule 99 (statement -> expression_statement .)
    POINTCUT        reduce using rule 99 (statement -> expression_statement .)
    POINTCUT_ADD    reduce using rule 99 (statement -> expression_statement .)
    POINTCUT_SUB    reduce using rule 99 (statement -> expression_statement .)
    POINTCUT_FIRST  reduce using rule 99 (statement -> expression_statement .)
    POINTCUT_LAST   reduce using rule 99 (statement -> expression_statement .)
    POINTCUT_MIN    reduce using rule 99 (statement -> expression_statement .)
    POINTCUT_MAX    reduce using rule 99 (statement -> expression_statement .)
    LPAREN          reduce using rule 99 (statement -> expression_statement .)
    AND             reduce using rule 99 (statement -> expression_statement .)
    TIMES           reduce using rule 99 (statement -> expression_statement .)
    PLUS            reduce using rule 99 (statement -> expression_statement .)
    MINUS           reduce using rule 99 (statement -> expression_statement .)
    NOT             reduce using rule 99 (statement -> expression_statement .)
    LNOT            reduce using rule 99 (statement -> expression_statement .)
    INT_CONST_DEC   reduce using rule 99 (statement -> expression_statement .)
    INT_CONST_OCT   reduce using rule 99 (statement -> expression_statement .)
    INT_CONST_HEX   reduce using rule 99 (statement -> expression_statement .)
    FLOAT_CONST     reduce using rule 99 (statement -> expression_statement .)
    HEX_FLOAT_CONST reduce using rule 99 (statement -> expression_statement .)
    CHAR_CONST      reduce using rule 99 (statement -> expression_statement .)
    WCHAR_CONST     reduce using rule 99 (statement -> expression_statement .)
    STRING_LITERAL  reduce using rule 99 (statement -> expression_statement .)
    WSTRING_LITERAL reduce using rule 99 (statement -> expression_statement .)
    SEMI            reduce using rule 99 (statement -> expression_statement .)
    RBRACE          reduce using rule 99 (statement -> expression_statement .)
    ELSE            reduce using rule 99 (statement -> expression_statement .)


state 260

    (101) statement -> selection_statement .

    ID              reduce using rule 101 (statement -> selection_statement .)
    CASE            reduce using rule 101 (statement -> selection_statement .)
    DEFAULT         reduce using rule 101 (statement -> selection_statement .)
    IF              reduce using rule 101 (statement -> selection_statement .)
    SWITCH          reduce using rule 101 (statement -> selection_statement .)
    WHILE           reduce using rule 101 (statement -> selection_statement .)
    DO              reduce using rule 101 (statement -> selection_statement .)
    FOR             reduce using rule 101 (statement -> selection_statement .)
    GOTO            reduce using rule 101 (statement -> selection_statement .)
    BREAK           reduce using rule 101 (statement -> selection_statement .)
    CONTINUE        reduce using rule 101 (statement -> selection_statement .)
    RETURN          reduce using rule 101 (statement -> selection_statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 101 (statement -> selection_statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 101 (statement -> selection_statement .)
    LBRACE          reduce using rule 101 (statement -> selection_statement .)
    CONST           reduce using rule 101 (statement -> selection_statement .)
    RESTRICT        reduce using rule 101 (statement -> selection_statement .)
    VOLATILE        reduce using rule 101 (statement -> selection_statement .)
    VOID            reduce using rule 101 (statement -> selection_statement .)
    _BOOL           reduce using rule 101 (statement -> selection_statement .)
    CHAR            reduce using rule 101 (statement -> selection_statement .)
    SHORT           reduce using rule 101 (statement -> selection_statement .)
    INT             reduce using rule 101 (statement -> selection_statement .)
    LONG            reduce using rule 101 (statement -> selection_statement .)
    FLOAT           reduce using rule 101 (statement -> selection_statement .)
    DOUBLE          reduce using rule 101 (statement -> selection_statement .)
    _COMPLEX        reduce using rule 101 (statement -> selection_statement .)
    SIGNED          reduce using rule 101 (statement -> selection_statement .)
    UNSIGNED        reduce using rule 101 (statement -> selection_statement .)
    AUTO            reduce using rule 101 (statement -> selection_statement .)
    REGISTER        reduce using rule 101 (statement -> selection_statement .)
    STATIC          reduce using rule 101 (statement -> selection_statement .)
    EXTERN          reduce using rule 101 (statement -> selection_statement .)
    TYPEDEF         reduce using rule 101 (statement -> selection_statement .)
    INLINE          reduce using rule 101 (statement -> selection_statement .)
    TYPEID          reduce using rule 101 (statement -> selection_statement .)
    ENUM            reduce using rule 101 (statement -> selection_statement .)
    STRUCT          reduce using rule 101 (statement -> selection_statement .)
    UNION           reduce using rule 101 (statement -> selection_statement .)
    PLUSPLUS        reduce using rule 101 (statement -> selection_statement .)
    MINUSMINUS      reduce using rule 101 (statement -> selection_statement .)
    SIZEOF          reduce using rule 101 (statement -> selection_statement .)
    POINTCUT        reduce using rule 101 (statement -> selection_statement .)
    POINTCUT_ADD    reduce using rule 101 (statement -> selection_statement .)
    POINTCUT_SUB    reduce using rule 101 (statement -> selection_statement .)
    POINTCUT_FIRST  reduce using rule 101 (statement -> selection_statement .)
    POINTCUT_LAST   reduce using rule 101 (statement -> selection_statement .)
    POINTCUT_MIN    reduce using rule 101 (statement -> selection_statement .)
    POINTCUT_MAX    reduce using rule 101 (statement -> selection_statement .)
    LPAREN          reduce using rule 101 (statement -> selection_statement .)
    AND             reduce using rule 101 (statement -> selection_statement .)
    TIMES           reduce using rule 101 (statement -> selection_statement .)
    PLUS            reduce using rule 101 (statement -> selection_statement .)
    MINUS           reduce using rule 101 (statement -> selection_statement .)
    NOT             reduce using rule 101 (statement -> selection_statement .)
    LNOT            reduce using rule 101 (statement -> selection_statement .)
    INT_CONST_DEC   reduce using rule 101 (statement -> selection_statement .)
    INT_CONST_OCT   reduce using rule 101 (statement -> selection_statement .)
    INT_CONST_HEX   reduce using rule 101 (statement -> selection_statement .)
    FLOAT_CONST     reduce using rule 101 (statement -> selection_statement .)
    HEX_FLOAT_CONST reduce using rule 101 (statement -> selection_statement .)
    CHAR_CONST      reduce using rule 101 (statement -> selection_statement .)
    WCHAR_CONST     reduce using rule 101 (statement -> selection_statement .)
    STRING_LITERAL  reduce using rule 101 (statement -> selection_statement .)
    WSTRING_LITERAL reduce using rule 101 (statement -> selection_statement .)
    SEMI            reduce using rule 101 (statement -> selection_statement .)
    RBRACE          reduce using rule 101 (statement -> selection_statement .)
    ELSE            reduce using rule 101 (statement -> selection_statement .)


state 261

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 394


state 262

    (102) statement -> iteration_statement .

    ID              reduce using rule 102 (statement -> iteration_statement .)
    CASE            reduce using rule 102 (statement -> iteration_statement .)
    DEFAULT         reduce using rule 102 (statement -> iteration_statement .)
    IF              reduce using rule 102 (statement -> iteration_statement .)
    SWITCH          reduce using rule 102 (statement -> iteration_statement .)
    WHILE           reduce using rule 102 (statement -> iteration_statement .)
    DO              reduce using rule 102 (statement -> iteration_statement .)
    FOR             reduce using rule 102 (statement -> iteration_statement .)
    GOTO            reduce using rule 102 (statement -> iteration_statement .)
    BREAK           reduce using rule 102 (statement -> iteration_statement .)
    CONTINUE        reduce using rule 102 (statement -> iteration_statement .)
    RETURN          reduce using rule 102 (statement -> iteration_statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 102 (statement -> iteration_statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 102 (statement -> iteration_statement .)
    LBRACE          reduce using rule 102 (statement -> iteration_statement .)
    CONST           reduce using rule 102 (statement -> iteration_statement .)
    RESTRICT        reduce using rule 102 (statement -> iteration_statement .)
    VOLATILE        reduce using rule 102 (statement -> iteration_statement .)
    VOID            reduce using rule 102 (statement -> iteration_statement .)
    _BOOL           reduce using rule 102 (statement -> iteration_statement .)
    CHAR            reduce using rule 102 (statement -> iteration_statement .)
    SHORT           reduce using rule 102 (statement -> iteration_statement .)
    INT             reduce using rule 102 (statement -> iteration_statement .)
    LONG            reduce using rule 102 (statement -> iteration_statement .)
    FLOAT           reduce using rule 102 (statement -> iteration_statement .)
    DOUBLE          reduce using rule 102 (statement -> iteration_statement .)
    _COMPLEX        reduce using rule 102 (statement -> iteration_statement .)
    SIGNED          reduce using rule 102 (statement -> iteration_statement .)
    UNSIGNED        reduce using rule 102 (statement -> iteration_statement .)
    AUTO            reduce using rule 102 (statement -> iteration_statement .)
    REGISTER        reduce using rule 102 (statement -> iteration_statement .)
    STATIC          reduce using rule 102 (statement -> iteration_statement .)
    EXTERN          reduce using rule 102 (statement -> iteration_statement .)
    TYPEDEF         reduce using rule 102 (statement -> iteration_statement .)
    INLINE          reduce using rule 102 (statement -> iteration_statement .)
    TYPEID          reduce using rule 102 (statement -> iteration_statement .)
    ENUM            reduce using rule 102 (statement -> iteration_statement .)
    STRUCT          reduce using rule 102 (statement -> iteration_statement .)
    UNION           reduce using rule 102 (statement -> iteration_statement .)
    PLUSPLUS        reduce using rule 102 (statement -> iteration_statement .)
    MINUSMINUS      reduce using rule 102 (statement -> iteration_statement .)
    SIZEOF          reduce using rule 102 (statement -> iteration_statement .)
    POINTCUT        reduce using rule 102 (statement -> iteration_statement .)
    POINTCUT_ADD    reduce using rule 102 (statement -> iteration_statement .)
    POINTCUT_SUB    reduce using rule 102 (statement -> iteration_statement .)
    POINTCUT_FIRST  reduce using rule 102 (statement -> iteration_statement .)
    POINTCUT_LAST   reduce using rule 102 (statement -> iteration_statement .)
    POINTCUT_MIN    reduce using rule 102 (statement -> iteration_statement .)
    POINTCUT_MAX    reduce using rule 102 (statement -> iteration_statement .)
    LPAREN          reduce using rule 102 (statement -> iteration_statement .)
    AND             reduce using rule 102 (statement -> iteration_statement .)
    TIMES           reduce using rule 102 (statement -> iteration_statement .)
    PLUS            reduce using rule 102 (statement -> iteration_statement .)
    MINUS           reduce using rule 102 (statement -> iteration_statement .)
    NOT             reduce using rule 102 (statement -> iteration_statement .)
    LNOT            reduce using rule 102 (statement -> iteration_statement .)
    INT_CONST_DEC   reduce using rule 102 (statement -> iteration_statement .)
    INT_CONST_OCT   reduce using rule 102 (statement -> iteration_statement .)
    INT_CONST_HEX   reduce using rule 102 (statement -> iteration_statement .)
    FLOAT_CONST     reduce using rule 102 (statement -> iteration_statement .)
    HEX_FLOAT_CONST reduce using rule 102 (statement -> iteration_statement .)
    CHAR_CONST      reduce using rule 102 (statement -> iteration_statement .)
    WCHAR_CONST     reduce using rule 102 (statement -> iteration_statement .)
    STRING_LITERAL  reduce using rule 102 (statement -> iteration_statement .)
    WSTRING_LITERAL reduce using rule 102 (statement -> iteration_statement .)
    SEMI            reduce using rule 102 (statement -> iteration_statement .)
    RBRACE          reduce using rule 102 (statement -> iteration_statement .)
    ELSE            reduce using rule 102 (statement -> iteration_statement .)


state 263

    (27) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 395


state 264

    (110) statement -> motion_append_before_call_keyword .

    ID              reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    CASE            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    DEFAULT         reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    IF              reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    SWITCH          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    WHILE           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    DO              reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    FOR             reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    GOTO            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    BREAK           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    CONTINUE        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    RETURN          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    LBRACE          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    CONST           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    RESTRICT        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    VOLATILE        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    VOID            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    _BOOL           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    CHAR            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    SHORT           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    INT             reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    LONG            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    FLOAT           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    DOUBLE          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    _COMPLEX        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    SIGNED          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    UNSIGNED        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    AUTO            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    REGISTER        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    STATIC          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    EXTERN          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    TYPEDEF         reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    INLINE          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    TYPEID          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    ENUM            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    STRUCT          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    UNION           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    PLUSPLUS        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MINUSMINUS      reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    SIZEOF          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    POINTCUT        reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    POINTCUT_ADD    reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    POINTCUT_SUB    reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    POINTCUT_FIRST  reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    POINTCUT_LAST   reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    POINTCUT_MIN    reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    POINTCUT_MAX    reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    LPAREN          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    AND             reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    TIMES           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    PLUS            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    MINUS           reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    NOT             reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    LNOT            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    INT_CONST_DEC   reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    INT_CONST_OCT   reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    INT_CONST_HEX   reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    FLOAT_CONST     reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    CHAR_CONST      reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    WCHAR_CONST     reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    STRING_LITERAL  reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    WSTRING_LITERAL reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    SEMI            reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    RBRACE          reduce using rule 110 (statement -> motion_append_before_call_keyword .)
    ELSE            reduce using rule 110 (statement -> motion_append_before_call_keyword .)


state 265

    (118) statement -> motion_alwayslast_after_call_keyword .

    ID              reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    CASE            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    DEFAULT         reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    IF              reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    SWITCH          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    WHILE           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    DO              reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    FOR             reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    GOTO            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    BREAK           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    CONTINUE        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    RETURN          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    LBRACE          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    CONST           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    RESTRICT        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    VOLATILE        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    VOID            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    _BOOL           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    CHAR            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    SHORT           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    INT             reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    LONG            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    FLOAT           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    DOUBLE          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    _COMPLEX        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    SIGNED          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    UNSIGNED        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    AUTO            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    REGISTER        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    STATIC          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    EXTERN          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    TYPEDEF         reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    INLINE          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    TYPEID          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    ENUM            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    STRUCT          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    UNION           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    PLUSPLUS        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MINUSMINUS      reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    SIZEOF          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    POINTCUT        reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    POINTCUT_ADD    reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    POINTCUT_SUB    reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    POINTCUT_FIRST  reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    POINTCUT_LAST   reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    POINTCUT_MIN    reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    POINTCUT_MAX    reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    LPAREN          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    AND             reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    TIMES           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    PLUS            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    MINUS           reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    NOT             reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    LNOT            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    INT_CONST_DEC   reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    INT_CONST_OCT   reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    INT_CONST_HEX   reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    FLOAT_CONST     reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    CHAR_CONST      reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    WCHAR_CONST     reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    STRING_LITERAL  reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    WSTRING_LITERAL reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    SEMI            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    RBRACE          reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)
    ELSE            reduce using rule 118 (statement -> motion_alwayslast_after_call_keyword .)


state 266

    (122) statement -> motion_append_advice_before_call_keyword .

    ID              reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    CASE            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    DEFAULT         reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    IF              reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    SWITCH          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    WHILE           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    DO              reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    FOR             reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    GOTO            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    BREAK           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    CONTINUE        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    RETURN          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    LBRACE          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    CONST           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    RESTRICT        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    VOLATILE        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    VOID            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    _BOOL           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    CHAR            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    SHORT           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    INT             reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    LONG            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    FLOAT           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    DOUBLE          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    _COMPLEX        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    SIGNED          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    UNSIGNED        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    AUTO            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    REGISTER        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    STATIC          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    EXTERN          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    TYPEDEF         reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    INLINE          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    TYPEID          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    ENUM            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    STRUCT          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    UNION           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    PLUSPLUS        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MINUSMINUS      reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    SIZEOF          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    POINTCUT        reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    POINTCUT_ADD    reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    POINTCUT_SUB    reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    POINTCUT_FIRST  reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    POINTCUT_LAST   reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    POINTCUT_MIN    reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    POINTCUT_MAX    reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    LPAREN          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    AND             reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    TIMES           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    PLUS            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    MINUS           reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    NOT             reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    LNOT            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    INT_CONST_DEC   reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    INT_CONST_OCT   reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    INT_CONST_HEX   reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    FLOAT_CONST     reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    CHAR_CONST      reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    WCHAR_CONST     reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    STRING_LITERAL  reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    WSTRING_LITERAL reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    SEMI            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    RBRACE          reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)
    ELSE            reduce using rule 122 (statement -> motion_append_advice_before_call_keyword .)


state 267

    (251) jump_statement -> GOTO . ID SEMI

    ID              shift and go to state 396


state 268

    (121) statement -> motion_append_advice_after_call_keyword .

    ID              reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    CASE            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    DEFAULT         reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    IF              reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    SWITCH          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    WHILE           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    DO              reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    FOR             reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    GOTO            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    BREAK           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    CONTINUE        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    RETURN          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    LBRACE          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    CONST           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    RESTRICT        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    VOLATILE        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    VOID            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    _BOOL           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    CHAR            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    SHORT           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    INT             reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    LONG            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    FLOAT           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    DOUBLE          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    _COMPLEX        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    SIGNED          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    UNSIGNED        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    AUTO            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    REGISTER        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    STATIC          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    EXTERN          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    TYPEDEF         reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    INLINE          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    TYPEID          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    ENUM            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    STRUCT          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    UNION           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    PLUSPLUS        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MINUSMINUS      reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    SIZEOF          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    POINTCUT        reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    POINTCUT_ADD    reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    POINTCUT_SUB    reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    POINTCUT_FIRST  reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    POINTCUT_LAST   reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    POINTCUT_MIN    reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    POINTCUT_MAX    reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    LPAREN          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    AND             reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    TIMES           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    PLUS            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    MINUS           reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    NOT             reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    LNOT            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    INT_CONST_DEC   reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    INT_CONST_OCT   reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    INT_CONST_HEX   reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    FLOAT_CONST     reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    CHAR_CONST      reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    WCHAR_CONST     reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    STRING_LITERAL  reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    WSTRING_LITERAL reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    SEMI            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    RBRACE          reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)
    ELSE            reduce using rule 121 (statement -> motion_append_advice_after_call_keyword .)


state 269

    (113) statement -> motion_prepend_before_call_keyword .

    ID              reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    CASE            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    DEFAULT         reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    IF              reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    SWITCH          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    WHILE           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    DO              reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    FOR             reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    GOTO            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    BREAK           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    CONTINUE        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    RETURN          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    LBRACE          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    CONST           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    RESTRICT        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    VOLATILE        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    VOID            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    _BOOL           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    CHAR            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    SHORT           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    INT             reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    LONG            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    FLOAT           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    DOUBLE          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    _COMPLEX        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    SIGNED          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    UNSIGNED        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    AUTO            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    REGISTER        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    STATIC          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    EXTERN          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    TYPEDEF         reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    INLINE          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    TYPEID          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    ENUM            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    STRUCT          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    UNION           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    PLUSPLUS        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MINUSMINUS      reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    SIZEOF          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    POINTCUT        reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    POINTCUT_ADD    reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    POINTCUT_SUB    reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    POINTCUT_FIRST  reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    POINTCUT_LAST   reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    POINTCUT_MIN    reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    POINTCUT_MAX    reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    LPAREN          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    AND             reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    TIMES           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    PLUS            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    MINUS           reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    NOT             reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    LNOT            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    INT_CONST_DEC   reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    INT_CONST_OCT   reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    INT_CONST_HEX   reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    FLOAT_CONST     reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    CHAR_CONST      reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    WCHAR_CONST     reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    STRING_LITERAL  reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    WSTRING_LITERAL reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    SEMI            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    RBRACE          reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)
    ELSE            reduce using rule 113 (statement -> motion_prepend_before_call_keyword .)


state 270

    (256) expression_statement -> expression_opt . SEMI

    SEMI            shift and go to state 397


state 271

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL . LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 398


state 272

    (31) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 399


state 273

    (98) statement -> labeled_statement .

    ID              reduce using rule 98 (statement -> labeled_statement .)
    CASE            reduce using rule 98 (statement -> labeled_statement .)
    DEFAULT         reduce using rule 98 (statement -> labeled_statement .)
    IF              reduce using rule 98 (statement -> labeled_statement .)
    SWITCH          reduce using rule 98 (statement -> labeled_statement .)
    WHILE           reduce using rule 98 (statement -> labeled_statement .)
    DO              reduce using rule 98 (statement -> labeled_statement .)
    FOR             reduce using rule 98 (statement -> labeled_statement .)
    GOTO            reduce using rule 98 (statement -> labeled_statement .)
    BREAK           reduce using rule 98 (statement -> labeled_statement .)
    CONTINUE        reduce using rule 98 (statement -> labeled_statement .)
    RETURN          reduce using rule 98 (statement -> labeled_statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 98 (statement -> labeled_statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 98 (statement -> labeled_statement .)
    LBRACE          reduce using rule 98 (statement -> labeled_statement .)
    CONST           reduce using rule 98 (statement -> labeled_statement .)
    RESTRICT        reduce using rule 98 (statement -> labeled_statement .)
    VOLATILE        reduce using rule 98 (statement -> labeled_statement .)
    VOID            reduce using rule 98 (statement -> labeled_statement .)
    _BOOL           reduce using rule 98 (statement -> labeled_statement .)
    CHAR            reduce using rule 98 (statement -> labeled_statement .)
    SHORT           reduce using rule 98 (statement -> labeled_statement .)
    INT             reduce using rule 98 (statement -> labeled_statement .)
    LONG            reduce using rule 98 (statement -> labeled_statement .)
    FLOAT           reduce using rule 98 (statement -> labeled_statement .)
    DOUBLE          reduce using rule 98 (statement -> labeled_statement .)
    _COMPLEX        reduce using rule 98 (statement -> labeled_statement .)
    SIGNED          reduce using rule 98 (statement -> labeled_statement .)
    UNSIGNED        reduce using rule 98 (statement -> labeled_statement .)
    AUTO            reduce using rule 98 (statement -> labeled_statement .)
    REGISTER        reduce using rule 98 (statement -> labeled_statement .)
    STATIC          reduce using rule 98 (statement -> labeled_statement .)
    EXTERN          reduce using rule 98 (statement -> labeled_statement .)
    TYPEDEF         reduce using rule 98 (statement -> labeled_statement .)
    INLINE          reduce using rule 98 (statement -> labeled_statement .)
    TYPEID          reduce using rule 98 (statement -> labeled_statement .)
    ENUM            reduce using rule 98 (statement -> labeled_statement .)
    STRUCT          reduce using rule 98 (statement -> labeled_statement .)
    UNION           reduce using rule 98 (statement -> labeled_statement .)
    PLUSPLUS        reduce using rule 98 (statement -> labeled_statement .)
    MINUSMINUS      reduce using rule 98 (statement -> labeled_statement .)
    SIZEOF          reduce using rule 98 (statement -> labeled_statement .)
    POINTCUT        reduce using rule 98 (statement -> labeled_statement .)
    POINTCUT_ADD    reduce using rule 98 (statement -> labeled_statement .)
    POINTCUT_SUB    reduce using rule 98 (statement -> labeled_statement .)
    POINTCUT_FIRST  reduce using rule 98 (statement -> labeled_statement .)
    POINTCUT_LAST   reduce using rule 98 (statement -> labeled_statement .)
    POINTCUT_MIN    reduce using rule 98 (statement -> labeled_statement .)
    POINTCUT_MAX    reduce using rule 98 (statement -> labeled_statement .)
    LPAREN          reduce using rule 98 (statement -> labeled_statement .)
    AND             reduce using rule 98 (statement -> labeled_statement .)
    TIMES           reduce using rule 98 (statement -> labeled_statement .)
    PLUS            reduce using rule 98 (statement -> labeled_statement .)
    MINUS           reduce using rule 98 (statement -> labeled_statement .)
    NOT             reduce using rule 98 (statement -> labeled_statement .)
    LNOT            reduce using rule 98 (statement -> labeled_statement .)
    INT_CONST_DEC   reduce using rule 98 (statement -> labeled_statement .)
    INT_CONST_OCT   reduce using rule 98 (statement -> labeled_statement .)
    INT_CONST_HEX   reduce using rule 98 (statement -> labeled_statement .)
    FLOAT_CONST     reduce using rule 98 (statement -> labeled_statement .)
    HEX_FLOAT_CONST reduce using rule 98 (statement -> labeled_statement .)
    CHAR_CONST      reduce using rule 98 (statement -> labeled_statement .)
    WCHAR_CONST     reduce using rule 98 (statement -> labeled_statement .)
    STRING_LITERAL  reduce using rule 98 (statement -> labeled_statement .)
    WSTRING_LITERAL reduce using rule 98 (statement -> labeled_statement .)
    SEMI            reduce using rule 98 (statement -> labeled_statement .)
    RBRACE          reduce using rule 98 (statement -> labeled_statement .)
    ELSE            reduce using rule 98 (statement -> labeled_statement .)


state 274

    (109) statement -> motion_append_after_call_keyword .

    ID              reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    CASE            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    DEFAULT         reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    IF              reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    SWITCH          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    WHILE           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    DO              reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    FOR             reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    GOTO            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    BREAK           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    CONTINUE        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    RETURN          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    LBRACE          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    CONST           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    RESTRICT        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    VOLATILE        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    VOID            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    _BOOL           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    CHAR            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    SHORT           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    INT             reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    LONG            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    FLOAT           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    DOUBLE          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    _COMPLEX        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    SIGNED          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    UNSIGNED        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    AUTO            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    REGISTER        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    STATIC          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    EXTERN          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    TYPEDEF         reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    INLINE          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    TYPEID          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    ENUM            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    STRUCT          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    UNION           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    PLUSPLUS        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MINUSMINUS      reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    SIZEOF          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    POINTCUT        reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    POINTCUT_ADD    reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    POINTCUT_SUB    reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    POINTCUT_FIRST  reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    POINTCUT_LAST   reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    POINTCUT_MIN    reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    POINTCUT_MAX    reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    LPAREN          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    AND             reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    TIMES           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    PLUS            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    MINUS           reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    NOT             reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    LNOT            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    INT_CONST_DEC   reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    INT_CONST_OCT   reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    INT_CONST_HEX   reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    FLOAT_CONST     reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    CHAR_CONST      reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    WCHAR_CONST     reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    STRING_LITERAL  reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    WSTRING_LITERAL reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    SEMI            reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    RBRACE          reduce using rule 109 (statement -> motion_append_after_call_keyword .)
    ELSE            reduce using rule 109 (statement -> motion_append_after_call_keyword .)


state 275

    (120) statement -> motion_alwayslast_around_call_keyword .

    ID              reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    CASE            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    DEFAULT         reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    IF              reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    SWITCH          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    WHILE           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    DO              reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    FOR             reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    GOTO            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    BREAK           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    CONTINUE        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    RETURN          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    LBRACE          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    CONST           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    RESTRICT        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    VOLATILE        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    VOID            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    _BOOL           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    CHAR            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    SHORT           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    INT             reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    LONG            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    FLOAT           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    DOUBLE          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    _COMPLEX        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    SIGNED          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    UNSIGNED        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    AUTO            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    REGISTER        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    STATIC          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    EXTERN          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    TYPEDEF         reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    INLINE          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    TYPEID          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    ENUM            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    STRUCT          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    UNION           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    PLUSPLUS        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MINUSMINUS      reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    SIZEOF          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    POINTCUT        reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    POINTCUT_ADD    reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    POINTCUT_SUB    reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    POINTCUT_FIRST  reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    POINTCUT_LAST   reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    POINTCUT_MIN    reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    POINTCUT_MAX    reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    LPAREN          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    AND             reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    TIMES           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    PLUS            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    MINUS           reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    NOT             reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    LNOT            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    INT_CONST_DEC   reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    INT_CONST_OCT   reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    INT_CONST_HEX   reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    FLOAT_CONST     reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    CHAR_CONST      reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    WCHAR_CONST     reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    STRING_LITERAL  reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    WSTRING_LITERAL reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    SEMI            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    RBRACE          reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)
    ELSE            reduce using rule 120 (statement -> motion_alwayslast_around_call_keyword .)


state 276

    (114) statement -> motion_prepend_around_call_keyword .

    ID              reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    CASE            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    DEFAULT         reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    IF              reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    SWITCH          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    WHILE           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    DO              reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    FOR             reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    GOTO            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    BREAK           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    CONTINUE        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    RETURN          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    LBRACE          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    CONST           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    RESTRICT        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    VOLATILE        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    VOID            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    _BOOL           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    CHAR            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    SHORT           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    INT             reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    LONG            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    FLOAT           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    DOUBLE          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    _COMPLEX        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    SIGNED          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    UNSIGNED        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    AUTO            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    REGISTER        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    STATIC          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    EXTERN          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    TYPEDEF         reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    INLINE          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    TYPEID          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    ENUM            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    STRUCT          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    UNION           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    PLUSPLUS        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MINUSMINUS      reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    SIZEOF          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    POINTCUT        reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    POINTCUT_ADD    reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    POINTCUT_SUB    reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    POINTCUT_FIRST  reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    POINTCUT_LAST   reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    POINTCUT_MIN    reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    POINTCUT_MAX    reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    LPAREN          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    AND             reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    TIMES           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    PLUS            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    MINUS           reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    NOT             reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    LNOT            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    INT_CONST_DEC   reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    INT_CONST_OCT   reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    INT_CONST_HEX   reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    FLOAT_CONST     reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    CHAR_CONST      reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    WCHAR_CONST     reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    STRING_LITERAL  reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    WSTRING_LITERAL reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    SEMI            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    RBRACE          reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)
    ELSE            reduce using rule 114 (statement -> motion_prepend_around_call_keyword .)


state 277

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL . LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 400


state 278

    (115) statement -> motion_alwaysfirst_after_call_keyword .

    ID              reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    CASE            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    DEFAULT         reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    IF              reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    SWITCH          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    WHILE           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    DO              reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    FOR             reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    GOTO            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    BREAK           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    CONTINUE        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    RETURN          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    LBRACE          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    CONST           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    RESTRICT        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    VOLATILE        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    VOID            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    _BOOL           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    CHAR            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    SHORT           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    INT             reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    LONG            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    FLOAT           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    DOUBLE          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    _COMPLEX        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    SIGNED          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    UNSIGNED        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    AUTO            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    REGISTER        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    STATIC          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    EXTERN          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    TYPEDEF         reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    INLINE          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    TYPEID          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    ENUM            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    STRUCT          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    UNION           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    PLUSPLUS        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MINUSMINUS      reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    SIZEOF          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    POINTCUT        reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    POINTCUT_ADD    reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    POINTCUT_SUB    reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    POINTCUT_FIRST  reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    POINTCUT_LAST   reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    POINTCUT_MIN    reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    POINTCUT_MAX    reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    LPAREN          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    AND             reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    TIMES           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    PLUS            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    MINUS           reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    NOT             reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    LNOT            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    INT_CONST_DEC   reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    INT_CONST_OCT   reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    INT_CONST_HEX   reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    FLOAT_CONST     reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    CHAR_CONST      reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    WCHAR_CONST     reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    STRING_LITERAL  reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    WSTRING_LITERAL reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    SEMI            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    RBRACE          reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)
    ELSE            reduce using rule 115 (statement -> motion_alwaysfirst_after_call_keyword .)


state 279

    (100) statement -> compound_statement .

    ID              reduce using rule 100 (statement -> compound_statement .)
    CASE            reduce using rule 100 (statement -> compound_statement .)
    DEFAULT         reduce using rule 100 (statement -> compound_statement .)
    IF              reduce using rule 100 (statement -> compound_statement .)
    SWITCH          reduce using rule 100 (statement -> compound_statement .)
    WHILE           reduce using rule 100 (statement -> compound_statement .)
    DO              reduce using rule 100 (statement -> compound_statement .)
    FOR             reduce using rule 100 (statement -> compound_statement .)
    GOTO            reduce using rule 100 (statement -> compound_statement .)
    BREAK           reduce using rule 100 (statement -> compound_statement .)
    CONTINUE        reduce using rule 100 (statement -> compound_statement .)
    RETURN          reduce using rule 100 (statement -> compound_statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 100 (statement -> compound_statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 100 (statement -> compound_statement .)
    LBRACE          reduce using rule 100 (statement -> compound_statement .)
    CONST           reduce using rule 100 (statement -> compound_statement .)
    RESTRICT        reduce using rule 100 (statement -> compound_statement .)
    VOLATILE        reduce using rule 100 (statement -> compound_statement .)
    VOID            reduce using rule 100 (statement -> compound_statement .)
    _BOOL           reduce using rule 100 (statement -> compound_statement .)
    CHAR            reduce using rule 100 (statement -> compound_statement .)
    SHORT           reduce using rule 100 (statement -> compound_statement .)
    INT             reduce using rule 100 (statement -> compound_statement .)
    LONG            reduce using rule 100 (statement -> compound_statement .)
    FLOAT           reduce using rule 100 (statement -> compound_statement .)
    DOUBLE          reduce using rule 100 (statement -> compound_statement .)
    _COMPLEX        reduce using rule 100 (statement -> compound_statement .)
    SIGNED          reduce using rule 100 (statement -> compound_statement .)
    UNSIGNED        reduce using rule 100 (statement -> compound_statement .)
    AUTO            reduce using rule 100 (statement -> compound_statement .)
    REGISTER        reduce using rule 100 (statement -> compound_statement .)
    STATIC          reduce using rule 100 (statement -> compound_statement .)
    EXTERN          reduce using rule 100 (statement -> compound_statement .)
    TYPEDEF         reduce using rule 100 (statement -> compound_statement .)
    INLINE          reduce using rule 100 (statement -> compound_statement .)
    TYPEID          reduce using rule 100 (statement -> compound_statement .)
    ENUM            reduce using rule 100 (statement -> compound_statement .)
    STRUCT          reduce using rule 100 (statement -> compound_statement .)
    UNION           reduce using rule 100 (statement -> compound_statement .)
    PLUSPLUS        reduce using rule 100 (statement -> compound_statement .)
    MINUSMINUS      reduce using rule 100 (statement -> compound_statement .)
    SIZEOF          reduce using rule 100 (statement -> compound_statement .)
    POINTCUT        reduce using rule 100 (statement -> compound_statement .)
    POINTCUT_ADD    reduce using rule 100 (statement -> compound_statement .)
    POINTCUT_SUB    reduce using rule 100 (statement -> compound_statement .)
    POINTCUT_FIRST  reduce using rule 100 (statement -> compound_statement .)
    POINTCUT_LAST   reduce using rule 100 (statement -> compound_statement .)
    POINTCUT_MIN    reduce using rule 100 (statement -> compound_statement .)
    POINTCUT_MAX    reduce using rule 100 (statement -> compound_statement .)
    LPAREN          reduce using rule 100 (statement -> compound_statement .)
    AND             reduce using rule 100 (statement -> compound_statement .)
    TIMES           reduce using rule 100 (statement -> compound_statement .)
    PLUS            reduce using rule 100 (statement -> compound_statement .)
    MINUS           reduce using rule 100 (statement -> compound_statement .)
    NOT             reduce using rule 100 (statement -> compound_statement .)
    LNOT            reduce using rule 100 (statement -> compound_statement .)
    INT_CONST_DEC   reduce using rule 100 (statement -> compound_statement .)
    INT_CONST_OCT   reduce using rule 100 (statement -> compound_statement .)
    INT_CONST_HEX   reduce using rule 100 (statement -> compound_statement .)
    FLOAT_CONST     reduce using rule 100 (statement -> compound_statement .)
    HEX_FLOAT_CONST reduce using rule 100 (statement -> compound_statement .)
    CHAR_CONST      reduce using rule 100 (statement -> compound_statement .)
    WCHAR_CONST     reduce using rule 100 (statement -> compound_statement .)
    STRING_LITERAL  reduce using rule 100 (statement -> compound_statement .)
    WSTRING_LITERAL reduce using rule 100 (statement -> compound_statement .)
    SEMI            reduce using rule 100 (statement -> compound_statement .)
    RBRACE          reduce using rule 100 (statement -> compound_statement .)
    ELSE            reduce using rule 100 (statement -> compound_statement .)


state 280

    (29) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 401


state 281

    (126) statement -> motion_prepend_advice_around_call_keyword .

    ID              reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    CASE            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    DEFAULT         reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    IF              reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    SWITCH          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    WHILE           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    DO              reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    FOR             reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    GOTO            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    BREAK           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    CONTINUE        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    RETURN          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    LBRACE          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    CONST           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    RESTRICT        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    VOLATILE        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    VOID            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    _BOOL           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    CHAR            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    SHORT           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    INT             reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    LONG            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    FLOAT           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    DOUBLE          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    _COMPLEX        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    SIGNED          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    UNSIGNED        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    AUTO            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    REGISTER        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    STATIC          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    EXTERN          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    TYPEDEF         reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    INLINE          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    TYPEID          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    ENUM            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    STRUCT          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    UNION           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    PLUSPLUS        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MINUSMINUS      reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    SIZEOF          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    POINTCUT        reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    POINTCUT_ADD    reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    POINTCUT_SUB    reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    POINTCUT_FIRST  reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    POINTCUT_LAST   reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    POINTCUT_MIN    reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    POINTCUT_MAX    reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    LPAREN          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    AND             reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    TIMES           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    PLUS            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    MINUS           reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    NOT             reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    LNOT            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    INT_CONST_DEC   reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    INT_CONST_OCT   reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    INT_CONST_HEX   reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    FLOAT_CONST     reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    CHAR_CONST      reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    WCHAR_CONST     reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    STRING_LITERAL  reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    WSTRING_LITERAL reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    SEMI            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    RBRACE          reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)
    ELSE            reduce using rule 126 (statement -> motion_prepend_advice_around_call_keyword .)


state 282

    (43) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 402


state 283

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 403


state 284

    (117) statement -> motion_alwaysfirst_around_call_keyword .

    ID              reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    CASE            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    DEFAULT         reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    IF              reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    SWITCH          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    WHILE           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    DO              reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    FOR             reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    GOTO            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    BREAK           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    CONTINUE        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    RETURN          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    LBRACE          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    CONST           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    RESTRICT        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    VOLATILE        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    VOID            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    _BOOL           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    CHAR            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    SHORT           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    INT             reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    LONG            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    FLOAT           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    DOUBLE          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    _COMPLEX        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    SIGNED          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    UNSIGNED        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    AUTO            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    REGISTER        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    STATIC          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    EXTERN          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    TYPEDEF         reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    INLINE          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    TYPEID          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    ENUM            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    STRUCT          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    UNION           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    PLUSPLUS        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MINUSMINUS      reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    SIZEOF          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    POINTCUT        reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    POINTCUT_ADD    reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    POINTCUT_SUB    reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    POINTCUT_FIRST  reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    POINTCUT_LAST   reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    POINTCUT_MIN    reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    POINTCUT_MAX    reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    LPAREN          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    AND             reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    TIMES           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    PLUS            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    MINUS           reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    NOT             reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    LNOT            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    INT_CONST_DEC   reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    INT_CONST_OCT   reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    INT_CONST_HEX   reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    FLOAT_CONST     reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    CHAR_CONST      reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    WCHAR_CONST     reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    STRING_LITERAL  reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    WSTRING_LITERAL reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    SEMI            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    RBRACE          reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)
    ELSE            reduce using rule 117 (statement -> motion_alwaysfirst_around_call_keyword .)


state 285

    (249) iteration_statement -> FOR . LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> FOR . LPAREN declaration expression_opt SEMI expression_opt RPAREN statement

    LPAREN          shift and go to state 404


state 286

    (45) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 405


state 287

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL . LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 406


state 288

    (6) block_item_list_opt -> block_item_list .
    (239) block_item_list -> block_item_list . block_item
    (236) block_item -> . declaration
    (237) block_item -> . statement
    (134) declaration -> . decl_body SEMI
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    RBRACE          reduce using rule 6 (block_item_list_opt -> block_item_list .)
    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    SEMI            reduce using rule 340 (empty -> .)
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    storage_class_specifier        shift and go to state 1
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    struct_or_union_specifier      shift and go to state 5
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    pointcut_last_keyword          shift and go to state 91
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    type_specifier                 shift and go to state 13
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    typedef_name                   shift and go to state 28
    motion_append_before_call_keyword shift and go to state 264
    pointcut_sub_keyword           shift and go to state 112
    statement                      shift and go to state 301
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    struct_or_union                shift and go to state 7
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    declaration_specifiers         shift and go to state 79
    declaration                    shift and go to state 304
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    enum_specifier                 shift and go to state 45
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    labeled_statement              shift and go to state 273
    function_specifier             shift and go to state 44
    block_item                     shift and go to state 407
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291
    pointcut_keyword               shift and go to state 132
    motion_append_after_call_keyword shift and go to state 274

state 289

    (253) jump_statement -> CONTINUE . SEMI

    SEMI            shift and go to state 409


state 290

    (123) statement -> motion_append_advice_around_call_keyword .

    ID              reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    CASE            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    DEFAULT         reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    IF              reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    SWITCH          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    WHILE           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    DO              reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    FOR             reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    GOTO            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    BREAK           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    CONTINUE        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    RETURN          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    LBRACE          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    CONST           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    RESTRICT        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    VOLATILE        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    VOID            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    _BOOL           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    CHAR            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    SHORT           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    INT             reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    LONG            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    FLOAT           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    DOUBLE          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    _COMPLEX        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    SIGNED          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    UNSIGNED        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    AUTO            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    REGISTER        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    STATIC          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    EXTERN          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    TYPEDEF         reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    INLINE          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    TYPEID          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    ENUM            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    STRUCT          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    UNION           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    PLUSPLUS        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MINUSMINUS      reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    SIZEOF          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    POINTCUT        reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    POINTCUT_ADD    reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    POINTCUT_SUB    reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    POINTCUT_FIRST  reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    POINTCUT_LAST   reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    POINTCUT_MIN    reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    POINTCUT_MAX    reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    LPAREN          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    AND             reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    TIMES           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    PLUS            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    MINUS           reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    NOT             reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    LNOT            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    INT_CONST_DEC   reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    INT_CONST_OCT   reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    INT_CONST_HEX   reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    FLOAT_CONST     reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    CHAR_CONST      reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    WCHAR_CONST     reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    STRING_LITERAL  reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    WSTRING_LITERAL reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    SEMI            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    RBRACE          reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)
    ELSE            reduce using rule 123 (statement -> motion_append_advice_around_call_keyword .)


state 291

    (14) expression_opt -> expression .
    (258) expression -> expression . COMMA assignment_expression

    SEMI            reduce using rule 14 (expression_opt -> expression .)
    RPAREN          reduce using rule 14 (expression_opt -> expression .)
    COMMA           shift and go to state 342


state 292

    (124) statement -> motion_prepend_advice_after_call_keyword .

    ID              reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    CASE            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    DEFAULT         reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    IF              reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    SWITCH          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    WHILE           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    DO              reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    FOR             reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    GOTO            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    BREAK           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    CONTINUE        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    RETURN          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    LBRACE          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    CONST           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    RESTRICT        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    VOLATILE        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    VOID            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    _BOOL           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    CHAR            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    SHORT           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    INT             reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    LONG            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    FLOAT           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    DOUBLE          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    _COMPLEX        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    SIGNED          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    UNSIGNED        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    AUTO            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    REGISTER        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    STATIC          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    EXTERN          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    TYPEDEF         reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    INLINE          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    TYPEID          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    ENUM            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    STRUCT          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    UNION           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    PLUSPLUS        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MINUSMINUS      reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    SIZEOF          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    POINTCUT        reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    POINTCUT_ADD    reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    POINTCUT_SUB    reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    POINTCUT_FIRST  reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    POINTCUT_LAST   reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    POINTCUT_MIN    reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    POINTCUT_MAX    reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    LPAREN          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    AND             reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    TIMES           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    PLUS            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    MINUS           reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    NOT             reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    LNOT            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    INT_CONST_DEC   reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    INT_CONST_OCT   reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    INT_CONST_HEX   reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    FLOAT_CONST     reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    CHAR_CONST      reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    WCHAR_CONST     reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    STRING_LITERAL  reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    WSTRING_LITERAL reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    SEMI            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    RBRACE          reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)
    ELSE            reduce using rule 124 (statement -> motion_prepend_advice_after_call_keyword .)


state 293

    (243) labeled_statement -> DEFAULT . COLON statement

    COLON           shift and go to state 410


state 294

    (33) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 411


state 295

    (247) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 412


state 296

    (254) jump_statement -> RETURN . expression SEMI
    (255) jump_statement -> RETURN . SEMI
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    SEMI            shift and go to state 413
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116
    expression                     shift and go to state 414

state 297

    (112) statement -> motion_prepend_after_call_keyword .

    ID              reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    CASE            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    DEFAULT         reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    IF              reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    SWITCH          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    WHILE           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    DO              reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    FOR             reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    GOTO            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    BREAK           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    CONTINUE        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    RETURN          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    LBRACE          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    CONST           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    RESTRICT        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    VOLATILE        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    VOID            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    _BOOL           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    CHAR            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    SHORT           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    INT             reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    LONG            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    FLOAT           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    DOUBLE          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    _COMPLEX        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    SIGNED          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    UNSIGNED        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    AUTO            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    REGISTER        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    STATIC          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    EXTERN          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    TYPEDEF         reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    INLINE          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    TYPEID          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    ENUM            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    STRUCT          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    UNION           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    PLUSPLUS        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MINUSMINUS      reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    SIZEOF          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    POINTCUT        reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    POINTCUT_ADD    reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    POINTCUT_SUB    reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    POINTCUT_FIRST  reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    POINTCUT_LAST   reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    POINTCUT_MIN    reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    POINTCUT_MAX    reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    LPAREN          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    AND             reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    TIMES           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    PLUS            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    MINUS           reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    NOT             reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    LNOT            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    INT_CONST_DEC   reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    INT_CONST_OCT   reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    INT_CONST_HEX   reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    FLOAT_CONST     reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    CHAR_CONST      reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    WCHAR_CONST     reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    STRING_LITERAL  reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    WSTRING_LITERAL reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    SEMI            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    RBRACE          reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)
    ELSE            reduce using rule 112 (statement -> motion_prepend_after_call_keyword .)


state 298

    (242) labeled_statement -> CASE . constant_expression COLON statement
    (273) constant_expression -> . conditional_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 202
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 324
    constant_expression            shift and go to state 415
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 299

    (47) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 416


state 300

    (246) selection_statement -> SWITCH . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 417


state 301

    (237) block_item -> statement .

    ID              reduce using rule 237 (block_item -> statement .)
    CASE            reduce using rule 237 (block_item -> statement .)
    DEFAULT         reduce using rule 237 (block_item -> statement .)
    IF              reduce using rule 237 (block_item -> statement .)
    SWITCH          reduce using rule 237 (block_item -> statement .)
    WHILE           reduce using rule 237 (block_item -> statement .)
    DO              reduce using rule 237 (block_item -> statement .)
    FOR             reduce using rule 237 (block_item -> statement .)
    GOTO            reduce using rule 237 (block_item -> statement .)
    BREAK           reduce using rule 237 (block_item -> statement .)
    CONTINUE        reduce using rule 237 (block_item -> statement .)
    RETURN          reduce using rule 237 (block_item -> statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 237 (block_item -> statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 237 (block_item -> statement .)
    LBRACE          reduce using rule 237 (block_item -> statement .)
    CONST           reduce using rule 237 (block_item -> statement .)
    RESTRICT        reduce using rule 237 (block_item -> statement .)
    VOLATILE        reduce using rule 237 (block_item -> statement .)
    VOID            reduce using rule 237 (block_item -> statement .)
    _BOOL           reduce using rule 237 (block_item -> statement .)
    CHAR            reduce using rule 237 (block_item -> statement .)
    SHORT           reduce using rule 237 (block_item -> statement .)
    INT             reduce using rule 237 (block_item -> statement .)
    LONG            reduce using rule 237 (block_item -> statement .)
    FLOAT           reduce using rule 237 (block_item -> statement .)
    DOUBLE          reduce using rule 237 (block_item -> statement .)
    _COMPLEX        reduce using rule 237 (block_item -> statement .)
    SIGNED          reduce using rule 237 (block_item -> statement .)
    UNSIGNED        reduce using rule 237 (block_item -> statement .)
    AUTO            reduce using rule 237 (block_item -> statement .)
    REGISTER        reduce using rule 237 (block_item -> statement .)
    STATIC          reduce using rule 237 (block_item -> statement .)
    EXTERN          reduce using rule 237 (block_item -> statement .)
    TYPEDEF         reduce using rule 237 (block_item -> statement .)
    INLINE          reduce using rule 237 (block_item -> statement .)
    TYPEID          reduce using rule 237 (block_item -> statement .)
    ENUM            reduce using rule 237 (block_item -> statement .)
    STRUCT          reduce using rule 237 (block_item -> statement .)
    UNION           reduce using rule 237 (block_item -> statement .)
    PLUSPLUS        reduce using rule 237 (block_item -> statement .)
    MINUSMINUS      reduce using rule 237 (block_item -> statement .)
    SIZEOF          reduce using rule 237 (block_item -> statement .)
    POINTCUT        reduce using rule 237 (block_item -> statement .)
    POINTCUT_ADD    reduce using rule 237 (block_item -> statement .)
    POINTCUT_SUB    reduce using rule 237 (block_item -> statement .)
    POINTCUT_FIRST  reduce using rule 237 (block_item -> statement .)
    POINTCUT_LAST   reduce using rule 237 (block_item -> statement .)
    POINTCUT_MIN    reduce using rule 237 (block_item -> statement .)
    POINTCUT_MAX    reduce using rule 237 (block_item -> statement .)
    LPAREN          reduce using rule 237 (block_item -> statement .)
    AND             reduce using rule 237 (block_item -> statement .)
    TIMES           reduce using rule 237 (block_item -> statement .)
    PLUS            reduce using rule 237 (block_item -> statement .)
    MINUS           reduce using rule 237 (block_item -> statement .)
    NOT             reduce using rule 237 (block_item -> statement .)
    LNOT            reduce using rule 237 (block_item -> statement .)
    INT_CONST_DEC   reduce using rule 237 (block_item -> statement .)
    INT_CONST_OCT   reduce using rule 237 (block_item -> statement .)
    INT_CONST_HEX   reduce using rule 237 (block_item -> statement .)
    FLOAT_CONST     reduce using rule 237 (block_item -> statement .)
    HEX_FLOAT_CONST reduce using rule 237 (block_item -> statement .)
    CHAR_CONST      reduce using rule 237 (block_item -> statement .)
    WCHAR_CONST     reduce using rule 237 (block_item -> statement .)
    STRING_LITERAL  reduce using rule 237 (block_item -> statement .)
    WSTRING_LITERAL reduce using rule 237 (block_item -> statement .)
    SEMI            reduce using rule 237 (block_item -> statement .)
    RBRACE          reduce using rule 237 (block_item -> statement .)


state 302

    (111) statement -> motion_append_around_call_keyword .

    ID              reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    CASE            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    DEFAULT         reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    IF              reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    SWITCH          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    WHILE           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    DO              reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    FOR             reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    GOTO            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    BREAK           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    CONTINUE        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    RETURN          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    LBRACE          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    CONST           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    RESTRICT        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    VOLATILE        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    VOID            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    _BOOL           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    CHAR            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    SHORT           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    INT             reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    LONG            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    FLOAT           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    DOUBLE          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    _COMPLEX        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    SIGNED          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    UNSIGNED        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    AUTO            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    REGISTER        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    STATIC          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    EXTERN          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    TYPEDEF         reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    INLINE          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    TYPEID          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    ENUM            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    STRUCT          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    UNION           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    PLUSPLUS        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MINUSMINUS      reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    SIZEOF          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    POINTCUT        reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    POINTCUT_ADD    reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    POINTCUT_SUB    reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    POINTCUT_FIRST  reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    POINTCUT_LAST   reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    POINTCUT_MIN    reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    POINTCUT_MAX    reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    LPAREN          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    AND             reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    TIMES           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    PLUS            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    MINUS           reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    NOT             reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    LNOT            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    INT_CONST_DEC   reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    INT_CONST_OCT   reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    INT_CONST_HEX   reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    FLOAT_CONST     reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    CHAR_CONST      reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    WCHAR_CONST     reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    STRING_LITERAL  reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    WSTRING_LITERAL reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    SEMI            reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    RBRACE          reduce using rule 111 (statement -> motion_append_around_call_keyword .)
    ELSE            reduce using rule 111 (statement -> motion_append_around_call_keyword .)


state 303

    (37) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 418


state 304

    (236) block_item -> declaration .

    ID              reduce using rule 236 (block_item -> declaration .)
    CASE            reduce using rule 236 (block_item -> declaration .)
    DEFAULT         reduce using rule 236 (block_item -> declaration .)
    IF              reduce using rule 236 (block_item -> declaration .)
    SWITCH          reduce using rule 236 (block_item -> declaration .)
    WHILE           reduce using rule 236 (block_item -> declaration .)
    DO              reduce using rule 236 (block_item -> declaration .)
    FOR             reduce using rule 236 (block_item -> declaration .)
    GOTO            reduce using rule 236 (block_item -> declaration .)
    BREAK           reduce using rule 236 (block_item -> declaration .)
    CONTINUE        reduce using rule 236 (block_item -> declaration .)
    RETURN          reduce using rule 236 (block_item -> declaration .)
    MOTION_APPEND_AFTER_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_APPEND_AROUND_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 236 (block_item -> declaration .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 236 (block_item -> declaration .)
    LBRACE          reduce using rule 236 (block_item -> declaration .)
    CONST           reduce using rule 236 (block_item -> declaration .)
    RESTRICT        reduce using rule 236 (block_item -> declaration .)
    VOLATILE        reduce using rule 236 (block_item -> declaration .)
    VOID            reduce using rule 236 (block_item -> declaration .)
    _BOOL           reduce using rule 236 (block_item -> declaration .)
    CHAR            reduce using rule 236 (block_item -> declaration .)
    SHORT           reduce using rule 236 (block_item -> declaration .)
    INT             reduce using rule 236 (block_item -> declaration .)
    LONG            reduce using rule 236 (block_item -> declaration .)
    FLOAT           reduce using rule 236 (block_item -> declaration .)
    DOUBLE          reduce using rule 236 (block_item -> declaration .)
    _COMPLEX        reduce using rule 236 (block_item -> declaration .)
    SIGNED          reduce using rule 236 (block_item -> declaration .)
    UNSIGNED        reduce using rule 236 (block_item -> declaration .)
    AUTO            reduce using rule 236 (block_item -> declaration .)
    REGISTER        reduce using rule 236 (block_item -> declaration .)
    STATIC          reduce using rule 236 (block_item -> declaration .)
    EXTERN          reduce using rule 236 (block_item -> declaration .)
    TYPEDEF         reduce using rule 236 (block_item -> declaration .)
    INLINE          reduce using rule 236 (block_item -> declaration .)
    TYPEID          reduce using rule 236 (block_item -> declaration .)
    ENUM            reduce using rule 236 (block_item -> declaration .)
    STRUCT          reduce using rule 236 (block_item -> declaration .)
    UNION           reduce using rule 236 (block_item -> declaration .)
    PLUSPLUS        reduce using rule 236 (block_item -> declaration .)
    MINUSMINUS      reduce using rule 236 (block_item -> declaration .)
    SIZEOF          reduce using rule 236 (block_item -> declaration .)
    POINTCUT        reduce using rule 236 (block_item -> declaration .)
    POINTCUT_ADD    reduce using rule 236 (block_item -> declaration .)
    POINTCUT_SUB    reduce using rule 236 (block_item -> declaration .)
    POINTCUT_FIRST  reduce using rule 236 (block_item -> declaration .)
    POINTCUT_LAST   reduce using rule 236 (block_item -> declaration .)
    POINTCUT_MIN    reduce using rule 236 (block_item -> declaration .)
    POINTCUT_MAX    reduce using rule 236 (block_item -> declaration .)
    LPAREN          reduce using rule 236 (block_item -> declaration .)
    AND             reduce using rule 236 (block_item -> declaration .)
    TIMES           reduce using rule 236 (block_item -> declaration .)
    PLUS            reduce using rule 236 (block_item -> declaration .)
    MINUS           reduce using rule 236 (block_item -> declaration .)
    NOT             reduce using rule 236 (block_item -> declaration .)
    LNOT            reduce using rule 236 (block_item -> declaration .)
    INT_CONST_DEC   reduce using rule 236 (block_item -> declaration .)
    INT_CONST_OCT   reduce using rule 236 (block_item -> declaration .)
    INT_CONST_HEX   reduce using rule 236 (block_item -> declaration .)
    FLOAT_CONST     reduce using rule 236 (block_item -> declaration .)
    HEX_FLOAT_CONST reduce using rule 236 (block_item -> declaration .)
    CHAR_CONST      reduce using rule 236 (block_item -> declaration .)
    WCHAR_CONST     reduce using rule 236 (block_item -> declaration .)
    STRING_LITERAL  reduce using rule 236 (block_item -> declaration .)
    WSTRING_LITERAL reduce using rule 236 (block_item -> declaration .)
    SEMI            reduce using rule 236 (block_item -> declaration .)
    RBRACE          reduce using rule 236 (block_item -> declaration .)


state 305

    (103) statement -> jump_statement .

    ID              reduce using rule 103 (statement -> jump_statement .)
    CASE            reduce using rule 103 (statement -> jump_statement .)
    DEFAULT         reduce using rule 103 (statement -> jump_statement .)
    IF              reduce using rule 103 (statement -> jump_statement .)
    SWITCH          reduce using rule 103 (statement -> jump_statement .)
    WHILE           reduce using rule 103 (statement -> jump_statement .)
    DO              reduce using rule 103 (statement -> jump_statement .)
    FOR             reduce using rule 103 (statement -> jump_statement .)
    GOTO            reduce using rule 103 (statement -> jump_statement .)
    BREAK           reduce using rule 103 (statement -> jump_statement .)
    CONTINUE        reduce using rule 103 (statement -> jump_statement .)
    RETURN          reduce using rule 103 (statement -> jump_statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 103 (statement -> jump_statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 103 (statement -> jump_statement .)
    LBRACE          reduce using rule 103 (statement -> jump_statement .)
    CONST           reduce using rule 103 (statement -> jump_statement .)
    RESTRICT        reduce using rule 103 (statement -> jump_statement .)
    VOLATILE        reduce using rule 103 (statement -> jump_statement .)
    VOID            reduce using rule 103 (statement -> jump_statement .)
    _BOOL           reduce using rule 103 (statement -> jump_statement .)
    CHAR            reduce using rule 103 (statement -> jump_statement .)
    SHORT           reduce using rule 103 (statement -> jump_statement .)
    INT             reduce using rule 103 (statement -> jump_statement .)
    LONG            reduce using rule 103 (statement -> jump_statement .)
    FLOAT           reduce using rule 103 (statement -> jump_statement .)
    DOUBLE          reduce using rule 103 (statement -> jump_statement .)
    _COMPLEX        reduce using rule 103 (statement -> jump_statement .)
    SIGNED          reduce using rule 103 (statement -> jump_statement .)
    UNSIGNED        reduce using rule 103 (statement -> jump_statement .)
    AUTO            reduce using rule 103 (statement -> jump_statement .)
    REGISTER        reduce using rule 103 (statement -> jump_statement .)
    STATIC          reduce using rule 103 (statement -> jump_statement .)
    EXTERN          reduce using rule 103 (statement -> jump_statement .)
    TYPEDEF         reduce using rule 103 (statement -> jump_statement .)
    INLINE          reduce using rule 103 (statement -> jump_statement .)
    TYPEID          reduce using rule 103 (statement -> jump_statement .)
    ENUM            reduce using rule 103 (statement -> jump_statement .)
    STRUCT          reduce using rule 103 (statement -> jump_statement .)
    UNION           reduce using rule 103 (statement -> jump_statement .)
    PLUSPLUS        reduce using rule 103 (statement -> jump_statement .)
    MINUSMINUS      reduce using rule 103 (statement -> jump_statement .)
    SIZEOF          reduce using rule 103 (statement -> jump_statement .)
    POINTCUT        reduce using rule 103 (statement -> jump_statement .)
    POINTCUT_ADD    reduce using rule 103 (statement -> jump_statement .)
    POINTCUT_SUB    reduce using rule 103 (statement -> jump_statement .)
    POINTCUT_FIRST  reduce using rule 103 (statement -> jump_statement .)
    POINTCUT_LAST   reduce using rule 103 (statement -> jump_statement .)
    POINTCUT_MIN    reduce using rule 103 (statement -> jump_statement .)
    POINTCUT_MAX    reduce using rule 103 (statement -> jump_statement .)
    LPAREN          reduce using rule 103 (statement -> jump_statement .)
    AND             reduce using rule 103 (statement -> jump_statement .)
    TIMES           reduce using rule 103 (statement -> jump_statement .)
    PLUS            reduce using rule 103 (statement -> jump_statement .)
    MINUS           reduce using rule 103 (statement -> jump_statement .)
    NOT             reduce using rule 103 (statement -> jump_statement .)
    LNOT            reduce using rule 103 (statement -> jump_statement .)
    INT_CONST_DEC   reduce using rule 103 (statement -> jump_statement .)
    INT_CONST_OCT   reduce using rule 103 (statement -> jump_statement .)
    INT_CONST_HEX   reduce using rule 103 (statement -> jump_statement .)
    FLOAT_CONST     reduce using rule 103 (statement -> jump_statement .)
    HEX_FLOAT_CONST reduce using rule 103 (statement -> jump_statement .)
    CHAR_CONST      reduce using rule 103 (statement -> jump_statement .)
    WCHAR_CONST     reduce using rule 103 (statement -> jump_statement .)
    STRING_LITERAL  reduce using rule 103 (statement -> jump_statement .)
    WSTRING_LITERAL reduce using rule 103 (statement -> jump_statement .)
    SEMI            reduce using rule 103 (statement -> jump_statement .)
    RBRACE          reduce using rule 103 (statement -> jump_statement .)
    ELSE            reduce using rule 103 (statement -> jump_statement .)


state 306

    (252) jump_statement -> BREAK . SEMI

    SEMI            shift and go to state 419


state 307

    (238) block_item_list -> block_item .

    ID              reduce using rule 238 (block_item_list -> block_item .)
    CASE            reduce using rule 238 (block_item_list -> block_item .)
    DEFAULT         reduce using rule 238 (block_item_list -> block_item .)
    IF              reduce using rule 238 (block_item_list -> block_item .)
    SWITCH          reduce using rule 238 (block_item_list -> block_item .)
    WHILE           reduce using rule 238 (block_item_list -> block_item .)
    DO              reduce using rule 238 (block_item_list -> block_item .)
    FOR             reduce using rule 238 (block_item_list -> block_item .)
    GOTO            reduce using rule 238 (block_item_list -> block_item .)
    BREAK           reduce using rule 238 (block_item_list -> block_item .)
    CONTINUE        reduce using rule 238 (block_item_list -> block_item .)
    RETURN          reduce using rule 238 (block_item_list -> block_item .)
    MOTION_APPEND_AFTER_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_APPEND_AROUND_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 238 (block_item_list -> block_item .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 238 (block_item_list -> block_item .)
    LBRACE          reduce using rule 238 (block_item_list -> block_item .)
    CONST           reduce using rule 238 (block_item_list -> block_item .)
    RESTRICT        reduce using rule 238 (block_item_list -> block_item .)
    VOLATILE        reduce using rule 238 (block_item_list -> block_item .)
    VOID            reduce using rule 238 (block_item_list -> block_item .)
    _BOOL           reduce using rule 238 (block_item_list -> block_item .)
    CHAR            reduce using rule 238 (block_item_list -> block_item .)
    SHORT           reduce using rule 238 (block_item_list -> block_item .)
    INT             reduce using rule 238 (block_item_list -> block_item .)
    LONG            reduce using rule 238 (block_item_list -> block_item .)
    FLOAT           reduce using rule 238 (block_item_list -> block_item .)
    DOUBLE          reduce using rule 238 (block_item_list -> block_item .)
    _COMPLEX        reduce using rule 238 (block_item_list -> block_item .)
    SIGNED          reduce using rule 238 (block_item_list -> block_item .)
    UNSIGNED        reduce using rule 238 (block_item_list -> block_item .)
    AUTO            reduce using rule 238 (block_item_list -> block_item .)
    REGISTER        reduce using rule 238 (block_item_list -> block_item .)
    STATIC          reduce using rule 238 (block_item_list -> block_item .)
    EXTERN          reduce using rule 238 (block_item_list -> block_item .)
    TYPEDEF         reduce using rule 238 (block_item_list -> block_item .)
    INLINE          reduce using rule 238 (block_item_list -> block_item .)
    TYPEID          reduce using rule 238 (block_item_list -> block_item .)
    ENUM            reduce using rule 238 (block_item_list -> block_item .)
    STRUCT          reduce using rule 238 (block_item_list -> block_item .)
    UNION           reduce using rule 238 (block_item_list -> block_item .)
    PLUSPLUS        reduce using rule 238 (block_item_list -> block_item .)
    MINUSMINUS      reduce using rule 238 (block_item_list -> block_item .)
    SIZEOF          reduce using rule 238 (block_item_list -> block_item .)
    POINTCUT        reduce using rule 238 (block_item_list -> block_item .)
    POINTCUT_ADD    reduce using rule 238 (block_item_list -> block_item .)
    POINTCUT_SUB    reduce using rule 238 (block_item_list -> block_item .)
    POINTCUT_FIRST  reduce using rule 238 (block_item_list -> block_item .)
    POINTCUT_LAST   reduce using rule 238 (block_item_list -> block_item .)
    POINTCUT_MIN    reduce using rule 238 (block_item_list -> block_item .)
    POINTCUT_MAX    reduce using rule 238 (block_item_list -> block_item .)
    LPAREN          reduce using rule 238 (block_item_list -> block_item .)
    AND             reduce using rule 238 (block_item_list -> block_item .)
    TIMES           reduce using rule 238 (block_item_list -> block_item .)
    PLUS            reduce using rule 238 (block_item_list -> block_item .)
    MINUS           reduce using rule 238 (block_item_list -> block_item .)
    NOT             reduce using rule 238 (block_item_list -> block_item .)
    LNOT            reduce using rule 238 (block_item_list -> block_item .)
    INT_CONST_DEC   reduce using rule 238 (block_item_list -> block_item .)
    INT_CONST_OCT   reduce using rule 238 (block_item_list -> block_item .)
    INT_CONST_HEX   reduce using rule 238 (block_item_list -> block_item .)
    FLOAT_CONST     reduce using rule 238 (block_item_list -> block_item .)
    HEX_FLOAT_CONST reduce using rule 238 (block_item_list -> block_item .)
    CHAR_CONST      reduce using rule 238 (block_item_list -> block_item .)
    WCHAR_CONST     reduce using rule 238 (block_item_list -> block_item .)
    STRING_LITERAL  reduce using rule 238 (block_item_list -> block_item .)
    WSTRING_LITERAL reduce using rule 238 (block_item_list -> block_item .)
    SEMI            reduce using rule 238 (block_item_list -> block_item .)
    RBRACE          reduce using rule 238 (block_item_list -> block_item .)


state 308

    (5) block_item_list_opt -> empty .
    (13) expression_opt -> empty .

    RBRACE          reduce using rule 5 (block_item_list_opt -> empty .)
    SEMI            reduce using rule 13 (expression_opt -> empty .)


state 309

    (119) statement -> motion_alwayslast_before_call_keyword .

    ID              reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    CASE            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    DEFAULT         reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    IF              reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    SWITCH          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    WHILE           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    DO              reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    FOR             reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    GOTO            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    BREAK           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    CONTINUE        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    RETURN          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    LBRACE          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    CONST           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    RESTRICT        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    VOLATILE        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    VOID            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    _BOOL           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    CHAR            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    SHORT           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    INT             reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    LONG            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    FLOAT           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    DOUBLE          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    _COMPLEX        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    SIGNED          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    UNSIGNED        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    AUTO            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    REGISTER        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    STATIC          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    EXTERN          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    TYPEDEF         reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    INLINE          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    TYPEID          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    ENUM            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    STRUCT          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    UNION           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    PLUSPLUS        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MINUSMINUS      reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    SIZEOF          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    POINTCUT        reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    POINTCUT_ADD    reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    POINTCUT_SUB    reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    POINTCUT_FIRST  reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    POINTCUT_LAST   reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    POINTCUT_MIN    reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    POINTCUT_MAX    reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    LPAREN          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    AND             reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    TIMES           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    PLUS            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    MINUS           reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    NOT             reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    LNOT            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    INT_CONST_DEC   reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    INT_CONST_OCT   reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    INT_CONST_HEX   reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    FLOAT_CONST     reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    CHAR_CONST      reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    WCHAR_CONST     reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    STRING_LITERAL  reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    WSTRING_LITERAL reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    SEMI            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    RBRACE          reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)
    ELSE            reduce using rule 119 (statement -> motion_alwayslast_before_call_keyword .)


state 310

    (39) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 420


state 311

    (248) iteration_statement -> DO . statement WHILE LPAREN expression RPAREN SEMI
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 421
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 312

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL . LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 422


state 313

    (125) statement -> motion_prepend_advice_before_call_keyword .

    ID              reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    CASE            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    DEFAULT         reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    IF              reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    SWITCH          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    WHILE           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    DO              reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    FOR             reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    GOTO            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    BREAK           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    CONTINUE        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    RETURN          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    LBRACE          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    CONST           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    RESTRICT        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    VOLATILE        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    VOID            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    _BOOL           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    CHAR            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    SHORT           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    INT             reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    LONG            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    FLOAT           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    DOUBLE          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    _COMPLEX        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    SIGNED          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    UNSIGNED        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    AUTO            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    REGISTER        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    STATIC          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    EXTERN          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    TYPEDEF         reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    INLINE          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    TYPEID          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    ENUM            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    STRUCT          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    UNION           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    PLUSPLUS        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MINUSMINUS      reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    SIZEOF          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    POINTCUT        reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    POINTCUT_ADD    reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    POINTCUT_SUB    reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    POINTCUT_FIRST  reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    POINTCUT_LAST   reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    POINTCUT_MIN    reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    POINTCUT_MAX    reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    LPAREN          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    AND             reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    TIMES           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    PLUS            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    MINUS           reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    NOT             reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    LNOT            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    INT_CONST_DEC   reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    INT_CONST_OCT   reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    INT_CONST_HEX   reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    FLOAT_CONST     reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    CHAR_CONST      reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    WCHAR_CONST     reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    STRING_LITERAL  reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    WSTRING_LITERAL reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    SEMI            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    RBRACE          reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)
    ELSE            reduce using rule 125 (statement -> motion_prepend_advice_before_call_keyword .)


state 314

    (35) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 423


state 315

    (41) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 424


state 316

    (240) compound_statement -> brace_open block_item_list_opt . brace_close
    (339) brace_close -> . RBRACE

    RBRACE          shift and go to state 165

    brace_close                    shift and go to state 425

state 317

    (241) labeled_statement -> ID . COLON statement
    (326) identifier -> ID .

    COLON           shift and go to state 426
    LBRACKET        reduce using rule 326 (identifier -> ID .)
    LPAREN          reduce using rule 326 (identifier -> ID .)
    PERIOD          reduce using rule 326 (identifier -> ID .)
    ARROW           reduce using rule 326 (identifier -> ID .)
    PLUSPLUS        reduce using rule 326 (identifier -> ID .)
    MINUSMINUS      reduce using rule 326 (identifier -> ID .)
    EQUALS          reduce using rule 326 (identifier -> ID .)
    XOREQUAL        reduce using rule 326 (identifier -> ID .)
    TIMESEQUAL      reduce using rule 326 (identifier -> ID .)
    DIVEQUAL        reduce using rule 326 (identifier -> ID .)
    MODEQUAL        reduce using rule 326 (identifier -> ID .)
    PLUSEQUAL       reduce using rule 326 (identifier -> ID .)
    MINUSEQUAL      reduce using rule 326 (identifier -> ID .)
    LSHIFTEQUAL     reduce using rule 326 (identifier -> ID .)
    RSHIFTEQUAL     reduce using rule 326 (identifier -> ID .)
    ANDEQUAL        reduce using rule 326 (identifier -> ID .)
    OREQUAL         reduce using rule 326 (identifier -> ID .)
    CONDOP          reduce using rule 326 (identifier -> ID .)
    TIMES           reduce using rule 326 (identifier -> ID .)
    DIVIDE          reduce using rule 326 (identifier -> ID .)
    MOD             reduce using rule 326 (identifier -> ID .)
    PLUS            reduce using rule 326 (identifier -> ID .)
    MINUS           reduce using rule 326 (identifier -> ID .)
    RSHIFT          reduce using rule 326 (identifier -> ID .)
    LSHIFT          reduce using rule 326 (identifier -> ID .)
    LT              reduce using rule 326 (identifier -> ID .)
    LE              reduce using rule 326 (identifier -> ID .)
    GE              reduce using rule 326 (identifier -> ID .)
    GT              reduce using rule 326 (identifier -> ID .)
    EQ              reduce using rule 326 (identifier -> ID .)
    NE              reduce using rule 326 (identifier -> ID .)
    AND             reduce using rule 326 (identifier -> ID .)
    OR              reduce using rule 326 (identifier -> ID .)
    XOR             reduce using rule 326 (identifier -> ID .)
    LAND            reduce using rule 326 (identifier -> ID .)
    LOR             reduce using rule 326 (identifier -> ID .)
    COMMA           reduce using rule 326 (identifier -> ID .)
    SEMI            reduce using rule 326 (identifier -> ID .)


state 318

    (244) selection_statement -> IF . LPAREN expression RPAREN statement
    (245) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 427


state 319

    (116) statement -> motion_alwaysfirst_before_call_keyword .

    ID              reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    CASE            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    DEFAULT         reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    IF              reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    SWITCH          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    WHILE           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    DO              reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    FOR             reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    GOTO            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    BREAK           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    CONTINUE        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    RETURN          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_APPEND_AFTER_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_APPEND_AROUND_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    LBRACE          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    CONST           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    RESTRICT        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    VOLATILE        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    VOID            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    _BOOL           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    CHAR            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    SHORT           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    INT             reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    LONG            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    FLOAT           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    DOUBLE          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    _COMPLEX        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    SIGNED          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    UNSIGNED        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    AUTO            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    REGISTER        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    STATIC          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    EXTERN          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    TYPEDEF         reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    INLINE          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    TYPEID          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    ENUM            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    STRUCT          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    UNION           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    PLUSPLUS        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MINUSMINUS      reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    SIZEOF          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    POINTCUT        reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    POINTCUT_ADD    reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    POINTCUT_SUB    reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    POINTCUT_FIRST  reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    POINTCUT_LAST   reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    POINTCUT_MIN    reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    POINTCUT_MAX    reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    LPAREN          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    AND             reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    TIMES           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    PLUS            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    MINUS           reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    NOT             reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    LNOT            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    INT_CONST_DEC   reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    INT_CONST_OCT   reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    INT_CONST_HEX   reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    FLOAT_CONST     reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    HEX_FLOAT_CONST reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    CHAR_CONST      reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    WCHAR_CONST     reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    STRING_LITERAL  reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    WSTRING_LITERAL reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    SEMI            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    RBRACE          reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)
    ELSE            reduce using rule 116 (statement -> motion_alwaysfirst_before_call_keyword .)


state 320

    (49) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL . LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL . LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    LPAREN          shift and go to state 428


state 321

    (174) struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .

    CONST           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    RESTRICT        reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    VOLATILE        reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    VOID            reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    _BOOL           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    CHAR            reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    SHORT           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    INT             reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    LONG            reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    FLOAT           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    DOUBLE          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    _COMPLEX        reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    SIGNED          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    UNSIGNED        reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    AUTO            reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    REGISTER        reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    STATIC          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    EXTERN          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    TYPEDEF         reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    INLINE          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    TYPEID          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    ENUM            reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    STRUCT          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    UNION           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    ID              reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    LPAREN          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    TIMES           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    SEMI            reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    LBRACKET        reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    COMMA           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    RPAREN          reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)
    COLON           reduce using rule 174 (struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close .)


state 322

    (173) struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .

    CONST           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    RESTRICT        reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    VOLATILE        reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    VOID            reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    _BOOL           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    CHAR            reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    SHORT           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    INT             reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    LONG            reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    FLOAT           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    DOUBLE          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    _COMPLEX        reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    SIGNED          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    UNSIGNED        reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    AUTO            reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    REGISTER        reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    STATIC          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    EXTERN          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    TYPEDEF         reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    INLINE          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    TYPEID          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    ENUM            reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    STRUCT          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    UNION           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    ID              reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    LPAREN          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    TIMES           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    SEMI            reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    LBRACKET        reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    COMMA           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    RPAREN          reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)
    COLON           reduce using rule 173 (struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close .)


state 323

    (184) struct_declarator -> COLON constant_expression .

    COMMA           reduce using rule 184 (struct_declarator -> COLON constant_expression .)
    SEMI            reduce using rule 184 (struct_declarator -> COLON constant_expression .)


state 324

    (273) constant_expression -> conditional_expression .

    COMMA           reduce using rule 273 (constant_expression -> conditional_expression .)
    SEMI            reduce using rule 273 (constant_expression -> conditional_expression .)
    RBRACKET        reduce using rule 273 (constant_expression -> conditional_expression .)
    RBRACE          reduce using rule 273 (constant_expression -> conditional_expression .)
    COLON           reduce using rule 273 (constant_expression -> conditional_expression .)


state 325

    (181) struct_declarator_list -> struct_declarator_list COMMA . struct_declarator
    (182) struct_declarator -> . declarator
    (183) struct_declarator -> . declarator COLON constant_expression
    (184) struct_declarator -> . COLON constant_expression
    (195) declarator -> . direct_declarator
    (196) declarator -> . pointer direct_declarator
    (197) direct_declarator -> . ID
    (198) direct_declarator -> . LPAREN declarator RPAREN
    (199) direct_declarator -> . direct_declarator LBRACKET assignment_expression_opt RBRACKET
    (200) direct_declarator -> . direct_declarator LBRACKET TIMES RBRACKET
    (201) direct_declarator -> . direct_declarator LPAREN parameter_type_list RPAREN
    (202) direct_declarator -> . direct_declarator LPAREN identifier_list_opt RPAREN
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer

    COLON           shift and go to state 170
    ID              shift and go to state 32
    LPAREN          shift and go to state 4
    TIMES           shift and go to state 27

    struct_declarator              shift and go to state 429
    direct_declarator              shift and go to state 24
    declarator                     shift and go to state 175
    pointer                        shift and go to state 15

state 326

    (179) struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .

    RBRACE          reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    CONST           reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    RESTRICT        reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    VOLATILE        reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    VOID            reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    _BOOL           reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    CHAR            reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    SHORT           reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    INT             reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    LONG            reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    FLOAT           reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    DOUBLE          reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    _COMPLEX        reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    SIGNED          reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    UNSIGNED        reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    TYPEID          reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    ENUM            reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    STRUCT          reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)
    UNION           reduce using rule 179 (struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI .)


state 327

    (183) struct_declarator -> declarator COLON . constant_expression
    (273) constant_expression -> . conditional_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 202
    conditional_expression         shift and go to state 324
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    constant_expression            shift and go to state 430
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 328

    (104) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID . SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID . COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID . COMMA ID RPAREN
    (107) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID . RPAREN

    SEMI            shift and go to state 432
    COMMA           shift and go to state 433
    RPAREN          shift and go to state 431


state 329

    (261) assignment_expression -> unary_expression assignment_operator assignment_expression .

    SEMI            reduce using rule 261 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COMMA           reduce using rule 261 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RBRACE          reduce using rule 261 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RPAREN          reduce using rule 261 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RBRACKET        reduce using rule 261 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COLON           reduce using rule 261 (assignment_expression -> unary_expression assignment_operator assignment_expression .)


state 330

    (88) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID . SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID . COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID . COMMA ID RPAREN
    (91) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID . RPAREN

    SEMI            shift and go to state 435
    COMMA           shift and go to state 436
    RPAREN          shift and go to state 434


state 331

    (302) unary_expression -> SIZEOF LPAREN type_name . RPAREN
    (317) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list COMMA brace_close

    RPAREN          shift and go to state 437


state 332

    (314) postfix_expression -> postfix_expression ARROW identifier .

    LBRACKET        reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    LPAREN          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    PERIOD          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    ARROW           reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    PLUSPLUS        reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    MINUSMINUS      reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    EQUALS          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    XOREQUAL        reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    TIMESEQUAL      reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    DIVEQUAL        reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    MODEQUAL        reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    PLUSEQUAL       reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    MINUSEQUAL      reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    LSHIFTEQUAL     reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    RSHIFTEQUAL     reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    ANDEQUAL        reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    OREQUAL         reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    CONDOP          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    TIMES           reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    DIVIDE          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    MOD             reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    PLUS            reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    MINUS           reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    RSHIFT          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    LSHIFT          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    LT              reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    LE              reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    GE              reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    GT              reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    EQ              reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    NE              reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    AND             reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    OR              reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    XOR             reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    LAND            reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    LOR             reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    RBRACKET        reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    COMMA           reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    RBRACE          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    RPAREN          reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    SEMI            reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)
    COLON           reduce using rule 314 (postfix_expression -> postfix_expression ARROW identifier .)


state 333

    (313) postfix_expression -> postfix_expression PERIOD identifier .

    LBRACKET        reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    LPAREN          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    PERIOD          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    ARROW           reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    PLUSPLUS        reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    MINUSMINUS      reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    EQUALS          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    XOREQUAL        reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    TIMESEQUAL      reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    DIVEQUAL        reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    MODEQUAL        reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    PLUSEQUAL       reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    MINUSEQUAL      reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    LSHIFTEQUAL     reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    RSHIFTEQUAL     reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    ANDEQUAL        reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    OREQUAL         reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    CONDOP          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    TIMES           reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    DIVIDE          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    MOD             reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    PLUS            reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    MINUS           reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    RSHIFT          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    LSHIFT          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    LT              reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    LE              reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    GE              reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    GT              reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    EQ              reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    NE              reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    AND             reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    OR              reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    XOR             reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    LAND            reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    LOR             reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    RBRACKET        reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    COMMA           reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    RBRACE          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    RPAREN          reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    SEMI            reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)
    COLON           reduce using rule 313 (postfix_expression -> postfix_expression PERIOD identifier .)


state 334

    (310) postfix_expression -> postfix_expression LBRACKET expression . RBRACKET
    (258) expression -> expression . COMMA assignment_expression

    RBRACKET        shift and go to state 438
    COMMA           shift and go to state 342


state 335

    (312) postfix_expression -> postfix_expression LPAREN RPAREN .

    LBRACKET        reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LPAREN          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PERIOD          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ARROW           reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUSMINUS      reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    EQUALS          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    XOREQUAL        reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    TIMESEQUAL      reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    DIVEQUAL        reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MODEQUAL        reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUSEQUAL      reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LSHIFTEQUAL     reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RSHIFTEQUAL     reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ANDEQUAL        reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    OREQUAL         reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    CONDOP          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    TIMES           reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MOD             reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUS            reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUS           reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RSHIFT          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LSHIFT          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LT              reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LE              reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    GE              reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    GT              reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    EQ              reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    NE              reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    AND             reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    OR              reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    XOR             reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LAND            reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LOR             reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    COMMA           reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RBRACE          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RPAREN          reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    SEMI            reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    COLON           reduce using rule 312 (postfix_expression -> postfix_expression LPAREN RPAREN .)


state 336

    (324) argument_expression_list -> assignment_expression .

    RPAREN          reduce using rule 324 (argument_expression_list -> assignment_expression .)
    COMMA           reduce using rule 324 (argument_expression_list -> assignment_expression .)


state 337

    (311) postfix_expression -> postfix_expression LPAREN argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 439
    COMMA           shift and go to state 440


state 338

    (75) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID . SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID . COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID . COMMA ID RPAREN
    (78) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID . RPAREN

    SEMI            shift and go to state 442
    COMMA           shift and go to state 443
    RPAREN          shift and go to state 441


state 339

    (296) cast_expression -> LPAREN type_name . RPAREN cast_expression
    (317) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list COMMA brace_close

    RPAREN          shift and go to state 444


state 340

    (317) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name . RPAREN brace_open initializer_list COMMA brace_close

    RPAREN          shift and go to state 445


state 341

    (323) primary_expression -> LPAREN expression RPAREN .

    LBRACKET        reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    PERIOD          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    ARROW           reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    XOREQUAL        reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    TIMESEQUAL      reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    DIVEQUAL        reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    MODEQUAL        reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    PLUSEQUAL       reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    MINUSEQUAL      reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    LSHIFTEQUAL     reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    RSHIFTEQUAL     reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    ANDEQUAL        reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    OREQUAL         reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    CONDOP          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    RSHIFT          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    LSHIFT          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    LAND            reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    LOR             reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 323 (primary_expression -> LPAREN expression RPAREN .)


state 342

    (258) expression -> expression COMMA . assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 446
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 343

    (317) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list COMMA brace_close
    (296) cast_expression -> LPAREN type_name RPAREN . cast_expression
    (338) brace_open -> . LBRACE
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LBRACE          shift and go to state 55
    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 447
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    pointcut_keyword               shift and go to state 132
    brace_open                     shift and go to state 448
    identifier                     shift and go to state 116

state 344

    (225) type_name -> specifier_qualifier_list abstract_declarator_opt .

    RPAREN          reduce using rule 225 (type_name -> specifier_qualifier_list abstract_declarator_opt .)


state 345

    (229) direct_abstract_declarator -> LPAREN . abstract_declarator RPAREN
    (235) direct_abstract_declarator -> LPAREN . parameter_type_list_opt RPAREN
    (226) abstract_declarator -> . pointer
    (227) abstract_declarator -> . pointer direct_abstract_declarator
    (228) abstract_declarator -> . direct_abstract_declarator
    (19) parameter_type_list_opt -> . empty
    (20) parameter_type_list_opt -> . parameter_type_list
    (203) pointer -> . TIMES type_qualifier_list_opt
    (204) pointer -> . TIMES type_qualifier_list_opt pointer
    (229) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (230) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET
    (231) direct_abstract_declarator -> . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET TIMES RBRACKET
    (233) direct_abstract_declarator -> . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (235) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN
    (340) empty -> .
    (207) parameter_type_list -> . parameter_list
    (208) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (209) parameter_list -> . parameter_declaration
    (210) parameter_list -> . parameter_list COMMA parameter_declaration
    (211) parameter_declaration -> . declaration_specifiers declarator
    (212) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    TIMES           shift and go to state 27
    LPAREN          shift and go to state 345
    LBRACKET        shift and go to state 242
    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 5
    abstract_declarator            shift and go to state 373
    type_specifier                 shift and go to state 13
    pointer                        shift and go to state 346
    parameter_declaration          shift and go to state 142
    struct_or_union                shift and go to state 7
    parameter_type_list            shift and go to state 371
    declaration_specifiers         shift and go to state 143
    typedef_name                   shift and go to state 28
    parameter_type_list_opt        shift and go to state 372
    parameter_list                 shift and go to state 145
    enum_specifier                 shift and go to state 45
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    empty                          shift and go to state 370
    direct_abstract_declarator     shift and go to state 244

state 346

    (226) abstract_declarator -> pointer .
    (227) abstract_declarator -> pointer . direct_abstract_declarator
    (229) direct_abstract_declarator -> . LPAREN abstract_declarator RPAREN
    (230) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET
    (231) direct_abstract_declarator -> . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> . direct_abstract_declarator LBRACKET TIMES RBRACKET
    (233) direct_abstract_declarator -> . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> . direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN
    (235) direct_abstract_declarator -> . LPAREN parameter_type_list_opt RPAREN

    RPAREN          reduce using rule 226 (abstract_declarator -> pointer .)
    LPAREN          shift and go to state 345
    LBRACKET        shift and go to state 242

    direct_abstract_declarator     shift and go to state 378

state 347

    (69) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID . SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID . COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID . COMMA ID RPAREN
    (72) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID . RPAREN

    SEMI            shift and go to state 450
    COMMA           shift and go to state 451
    RPAREN          shift and go to state 449


state 348

    (93) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID . SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID . COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID . COMMA ID RPAREN
    (96) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID . RPAREN

    SEMI            shift and go to state 453
    COMMA           shift and go to state 454
    RPAREN          shift and go to state 452


state 349

    (282) binary_expression -> binary_expression RSHIFT binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    RSHIFT          reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    LSHIFT          reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    LT              reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    LE              reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    GE              reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    GT              reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    EQ              reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    NE              reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    AND             reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    OR              reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    XOR             reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    LAND            reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    LOR             reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    CONDOP          reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    RBRACKET        reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    RPAREN          reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    COMMA           reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    SEMI            reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    COLON           reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    RBRACE          reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218

  ! TIMES           [ reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .) ]
  ! DIVIDE          [ reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .) ]
  ! MOD             [ reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .) ]
  ! PLUS            [ reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .) ]
  ! MINUS           [ reduce using rule 282 (binary_expression -> binary_expression RSHIFT binary_expression .) ]
  ! RSHIFT          [ shift and go to state 215 ]
  ! LSHIFT          [ shift and go to state 217 ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 350

    (294) binary_expression -> binary_expression LOR binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    LOR             reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    CONDOP          reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    RBRACKET        reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    RPAREN          reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    COMMA           reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    SEMI            reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    COLON           reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    RBRACE          reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223
    EQ              shift and go to state 229
    NE              shift and go to state 220
    AND             shift and go to state 230
    OR              shift and go to state 232
    XOR             shift and go to state 224
    LAND            shift and go to state 228

  ! TIMES           [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! DIVIDE          [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! MOD             [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! PLUS            [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! MINUS           [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! RSHIFT          [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! LSHIFT          [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! LT              [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! LE              [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! GE              [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! GT              [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! EQ              [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! NE              [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! AND             [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! OR              [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! XOR             [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! LAND            [ reduce using rule 294 (binary_expression -> binary_expression LOR binary_expression .) ]
  ! LOR             [ shift and go to state 216 ]


state 351

    (283) binary_expression -> binary_expression LSHIFT binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    RSHIFT          reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    LSHIFT          reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    LT              reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    LE              reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    GE              reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    GT              reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    EQ              reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    NE              reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    AND             reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    OR              reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    XOR             reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    LAND            reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    LOR             reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    CONDOP          reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    RBRACKET        reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    RPAREN          reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    COMMA           reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    SEMI            reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    COLON           reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    RBRACE          reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218

  ! TIMES           [ reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .) ]
  ! DIVIDE          [ reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .) ]
  ! MOD             [ reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .) ]
  ! PLUS            [ reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .) ]
  ! MINUS           [ reduce using rule 283 (binary_expression -> binary_expression LSHIFT binary_expression .) ]
  ! RSHIFT          [ shift and go to state 215 ]
  ! LSHIFT          [ shift and go to state 217 ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 352

    (281) binary_expression -> binary_expression MINUS binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    PLUS            reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    MINUS           reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    RSHIFT          reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    LSHIFT          reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    LT              reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    LE              reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    GE              reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    GT              reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    EQ              reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    NE              reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    AND             reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    OR              reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    XOR             reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    LAND            reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    LOR             reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    CONDOP          reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    RBRACKET        reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    RPAREN          reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    COMMA           reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    SEMI            reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    COLON           reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    RBRACE          reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233

  ! TIMES           [ reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! DIVIDE          [ reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! MOD             [ reduce using rule 281 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! PLUS            [ shift and go to state 222 ]
  ! MINUS           [ shift and go to state 218 ]
  ! RSHIFT          [ shift and go to state 215 ]
  ! LSHIFT          [ shift and go to state 217 ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 353

    (285) binary_expression -> binary_expression LE binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    LT              reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    LE              reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    GE              reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    GT              reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    EQ              reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    NE              reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    AND             reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    OR              reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    XOR             reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    LAND            reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    LOR             reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    CONDOP          reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    RBRACKET        reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    RPAREN          reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    COMMA           reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    SEMI            reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    COLON           reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    RBRACE          reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217

  ! TIMES           [ reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .) ]
  ! DIVIDE          [ reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .) ]
  ! MOD             [ reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .) ]
  ! PLUS            [ reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .) ]
  ! MINUS           [ reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .) ]
  ! RSHIFT          [ reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .) ]
  ! LSHIFT          [ reduce using rule 285 (binary_expression -> binary_expression LE binary_expression .) ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 354

    (289) binary_expression -> binary_expression NE binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    EQ              reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    NE              reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    AND             reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    OR              reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    XOR             reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    LAND            reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    LOR             reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    CONDOP          reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    RBRACKET        reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    RPAREN          reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    COMMA           reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    SEMI            reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    COLON           reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    RBRACE          reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223

  ! TIMES           [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! DIVIDE          [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! MOD             [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! PLUS            [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! MINUS           [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! RSHIFT          [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! LSHIFT          [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! LT              [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! LE              [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! GE              [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! GT              [ reduce using rule 289 (binary_expression -> binary_expression NE binary_expression .) ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 355

    (284) binary_expression -> binary_expression LT binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    LT              reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    LE              reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    GE              reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    GT              reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    EQ              reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    NE              reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    AND             reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    OR              reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    XOR             reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    LAND            reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    LOR             reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    CONDOP          reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    RBRACKET        reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    RPAREN          reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    COMMA           reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    SEMI            reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    COLON           reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    RBRACE          reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217

  ! TIMES           [ reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .) ]
  ! DIVIDE          [ reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .) ]
  ! MOD             [ reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .) ]
  ! PLUS            [ reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .) ]
  ! MINUS           [ reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .) ]
  ! RSHIFT          [ reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .) ]
  ! LSHIFT          [ reduce using rule 284 (binary_expression -> binary_expression LT binary_expression .) ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 356

    (280) binary_expression -> binary_expression PLUS binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    PLUS            reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    MINUS           reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    RSHIFT          reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    LSHIFT          reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    LT              reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    LE              reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    GE              reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    GT              reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    EQ              reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    NE              reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    AND             reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    OR              reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    XOR             reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    LAND            reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    LOR             reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    CONDOP          reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    RBRACKET        reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    RPAREN          reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    COMMA           reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    SEMI            reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    COLON           reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    RBRACE          reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233

  ! TIMES           [ reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! DIVIDE          [ reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! MOD             [ reduce using rule 280 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! PLUS            [ shift and go to state 222 ]
  ! MINUS           [ shift and go to state 218 ]
  ! RSHIFT          [ shift and go to state 215 ]
  ! LSHIFT          [ shift and go to state 217 ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 357

    (287) binary_expression -> binary_expression GT binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    LT              reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    LE              reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    GE              reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    GT              reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    EQ              reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    NE              reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    AND             reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    OR              reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    XOR             reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    LAND            reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    LOR             reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    CONDOP          reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    RBRACKET        reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    RPAREN          reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    COMMA           reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    SEMI            reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    COLON           reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    RBRACE          reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217

  ! TIMES           [ reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .) ]
  ! DIVIDE          [ reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .) ]
  ! MOD             [ reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .) ]
  ! PLUS            [ reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .) ]
  ! MINUS           [ reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .) ]
  ! RSHIFT          [ reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .) ]
  ! LSHIFT          [ reduce using rule 287 (binary_expression -> binary_expression GT binary_expression .) ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 358

    (292) binary_expression -> binary_expression XOR binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    OR              reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    XOR             reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    LAND            reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    LOR             reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    CONDOP          reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    RBRACKET        reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    RPAREN          reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    COMMA           reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    SEMI            reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    COLON           reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    RBRACE          reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223
    EQ              shift and go to state 229
    NE              shift and go to state 220
    AND             shift and go to state 230

  ! TIMES           [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! DIVIDE          [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! MOD             [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! PLUS            [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! MINUS           [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! RSHIFT          [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! LSHIFT          [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! LT              [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! LE              [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! GE              [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! GT              [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! EQ              [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! NE              [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! AND             [ reduce using rule 292 (binary_expression -> binary_expression XOR binary_expression .) ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 359

    (278) binary_expression -> binary_expression DIVIDE binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    TIMES           reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    DIVIDE          reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    MOD             reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    PLUS            reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    MINUS           reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RSHIFT          reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    LSHIFT          reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    LT              reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    LE              reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    GE              reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    GT              reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    EQ              reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    NE              reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    AND             reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    OR              reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    XOR             reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    LAND            reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    LOR             reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    CONDOP          reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RBRACKET        reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RPAREN          reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    COMMA           reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    SEMI            reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    COLON           reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RBRACE          reduce using rule 278 (binary_expression -> binary_expression DIVIDE binary_expression .)

  ! TIMES           [ shift and go to state 226 ]
  ! DIVIDE          [ shift and go to state 225 ]
  ! MOD             [ shift and go to state 233 ]
  ! PLUS            [ shift and go to state 222 ]
  ! MINUS           [ shift and go to state 218 ]
  ! RSHIFT          [ shift and go to state 215 ]
  ! LSHIFT          [ shift and go to state 217 ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 360

    (277) binary_expression -> binary_expression TIMES binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    TIMES           reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    DIVIDE          reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    MOD             reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    PLUS            reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    MINUS           reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    RSHIFT          reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    LSHIFT          reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    LT              reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    LE              reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    GE              reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    GT              reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    EQ              reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    NE              reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    AND             reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    OR              reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    XOR             reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    LAND            reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    LOR             reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    CONDOP          reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    RBRACKET        reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    RPAREN          reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    COMMA           reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    SEMI            reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    COLON           reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)
    RBRACE          reduce using rule 277 (binary_expression -> binary_expression TIMES binary_expression .)

  ! TIMES           [ shift and go to state 226 ]
  ! DIVIDE          [ shift and go to state 225 ]
  ! MOD             [ shift and go to state 233 ]
  ! PLUS            [ shift and go to state 222 ]
  ! MINUS           [ shift and go to state 218 ]
  ! RSHIFT          [ shift and go to state 215 ]
  ! LSHIFT          [ shift and go to state 217 ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 361

    (286) binary_expression -> binary_expression GE binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    LT              reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    LE              reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    GE              reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    GT              reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    EQ              reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    NE              reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    AND             reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    OR              reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    XOR             reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    LAND            reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    LOR             reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    CONDOP          reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    RBRACKET        reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    RPAREN          reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    COMMA           reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    SEMI            reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    COLON           reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    RBRACE          reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217

  ! TIMES           [ reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .) ]
  ! DIVIDE          [ reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .) ]
  ! MOD             [ reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .) ]
  ! PLUS            [ reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .) ]
  ! MINUS           [ reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .) ]
  ! RSHIFT          [ reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .) ]
  ! LSHIFT          [ reduce using rule 286 (binary_expression -> binary_expression GE binary_expression .) ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 362

    (293) binary_expression -> binary_expression LAND binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    LAND            reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    LOR             reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    CONDOP          reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    RBRACKET        reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    RPAREN          reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    COMMA           reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    SEMI            reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    COLON           reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    RBRACE          reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223
    EQ              shift and go to state 229
    NE              shift and go to state 220
    AND             shift and go to state 230
    OR              shift and go to state 232
    XOR             shift and go to state 224

  ! TIMES           [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! DIVIDE          [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! MOD             [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! PLUS            [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! MINUS           [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! RSHIFT          [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! LSHIFT          [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! LT              [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! LE              [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! GE              [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! GT              [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! EQ              [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! NE              [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! AND             [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! OR              [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! XOR             [ reduce using rule 293 (binary_expression -> binary_expression LAND binary_expression .) ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 363

    (288) binary_expression -> binary_expression EQ binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    EQ              reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    NE              reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    AND             reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    OR              reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    XOR             reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    LAND            reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    LOR             reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    CONDOP          reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    RBRACKET        reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    RPAREN          reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    COMMA           reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    SEMI            reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    COLON           reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    RBRACE          reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223

  ! TIMES           [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! DIVIDE          [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! MOD             [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! PLUS            [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! MINUS           [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! RSHIFT          [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! LSHIFT          [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! LT              [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! LE              [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! GE              [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! GT              [ reduce using rule 288 (binary_expression -> binary_expression EQ binary_expression .) ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 364

    (290) binary_expression -> binary_expression AND binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    AND             reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    OR              reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    XOR             reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    LAND            reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    LOR             reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    CONDOP          reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    RBRACKET        reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    RPAREN          reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    COMMA           reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    SEMI            reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    COLON           reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    RBRACE          reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223
    EQ              shift and go to state 229
    NE              shift and go to state 220

  ! TIMES           [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! DIVIDE          [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! MOD             [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! PLUS            [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! MINUS           [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! RSHIFT          [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! LSHIFT          [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! LT              [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! LE              [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! GE              [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! GT              [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! EQ              [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! NE              [ reduce using rule 290 (binary_expression -> binary_expression AND binary_expression .) ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 365

    (275) conditional_expression -> binary_expression CONDOP expression . COLON conditional_expression
    (258) expression -> expression . COMMA assignment_expression

    COLON           shift and go to state 455
    COMMA           shift and go to state 342


state 366

    (291) binary_expression -> binary_expression OR binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    OR              reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    LAND            reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    LOR             reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    CONDOP          reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    RBRACKET        reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    RPAREN          reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    COMMA           reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    SEMI            reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    COLON           reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    RBRACE          reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .)
    TIMES           shift and go to state 226
    DIVIDE          shift and go to state 225
    MOD             shift and go to state 233
    PLUS            shift and go to state 222
    MINUS           shift and go to state 218
    RSHIFT          shift and go to state 215
    LSHIFT          shift and go to state 217
    LT              shift and go to state 221
    LE              shift and go to state 219
    GE              shift and go to state 227
    GT              shift and go to state 223
    EQ              shift and go to state 229
    NE              shift and go to state 220
    AND             shift and go to state 230
    XOR             shift and go to state 224

  ! TIMES           [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! DIVIDE          [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! MOD             [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! PLUS            [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! MINUS           [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! RSHIFT          [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! LSHIFT          [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! LT              [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! LE              [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! GE              [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! GT              [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! EQ              [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! NE              [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! AND             [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! XOR             [ reduce using rule 291 (binary_expression -> binary_expression OR binary_expression .) ]
  ! OR              [ shift and go to state 232 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 367

    (279) binary_expression -> binary_expression MOD binary_expression .
    (277) binary_expression -> binary_expression . TIMES binary_expression
    (278) binary_expression -> binary_expression . DIVIDE binary_expression
    (279) binary_expression -> binary_expression . MOD binary_expression
    (280) binary_expression -> binary_expression . PLUS binary_expression
    (281) binary_expression -> binary_expression . MINUS binary_expression
    (282) binary_expression -> binary_expression . RSHIFT binary_expression
    (283) binary_expression -> binary_expression . LSHIFT binary_expression
    (284) binary_expression -> binary_expression . LT binary_expression
    (285) binary_expression -> binary_expression . LE binary_expression
    (286) binary_expression -> binary_expression . GE binary_expression
    (287) binary_expression -> binary_expression . GT binary_expression
    (288) binary_expression -> binary_expression . EQ binary_expression
    (289) binary_expression -> binary_expression . NE binary_expression
    (290) binary_expression -> binary_expression . AND binary_expression
    (291) binary_expression -> binary_expression . OR binary_expression
    (292) binary_expression -> binary_expression . XOR binary_expression
    (293) binary_expression -> binary_expression . LAND binary_expression
    (294) binary_expression -> binary_expression . LOR binary_expression

    TIMES           reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    DIVIDE          reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    MOD             reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    PLUS            reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    MINUS           reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    RSHIFT          reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    LSHIFT          reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    LT              reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    LE              reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    GE              reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    GT              reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    EQ              reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    NE              reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    AND             reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    OR              reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    XOR             reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    LAND            reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    LOR             reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    CONDOP          reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    RBRACKET        reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    RPAREN          reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    COMMA           reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    SEMI            reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    COLON           reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)
    RBRACE          reduce using rule 279 (binary_expression -> binary_expression MOD binary_expression .)

  ! TIMES           [ shift and go to state 226 ]
  ! DIVIDE          [ shift and go to state 225 ]
  ! MOD             [ shift and go to state 233 ]
  ! PLUS            [ shift and go to state 222 ]
  ! MINUS           [ shift and go to state 218 ]
  ! RSHIFT          [ shift and go to state 215 ]
  ! LSHIFT          [ shift and go to state 217 ]
  ! LT              [ shift and go to state 221 ]
  ! LE              [ shift and go to state 219 ]
  ! GE              [ shift and go to state 227 ]
  ! GT              [ shift and go to state 223 ]
  ! EQ              [ shift and go to state 229 ]
  ! NE              [ shift and go to state 220 ]
  ! AND             [ shift and go to state 230 ]
  ! OR              [ shift and go to state 232 ]
  ! XOR             [ shift and go to state 224 ]
  ! LAND            [ shift and go to state 228 ]
  ! LOR             [ shift and go to state 216 ]


state 368

    (63) pointcut_keyword -> POINTCUT LPAREN ID . SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> POINTCUT LPAREN ID . COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> POINTCUT LPAREN ID . COMMA ID RPAREN
    (66) pointcut_keyword -> POINTCUT LPAREN ID . RPAREN

    SEMI            shift and go to state 457
    COMMA           shift and go to state 458
    RPAREN          shift and go to state 456


state 369

    (81) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID . SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID . COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID . COMMA ID RPAREN
    (84) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID . RPAREN

    SEMI            shift and go to state 460
    COMMA           shift and go to state 461
    RPAREN          shift and go to state 459


state 370

    (19) parameter_type_list_opt -> empty .

    RPAREN          reduce using rule 19 (parameter_type_list_opt -> empty .)


state 371

    (20) parameter_type_list_opt -> parameter_type_list .

    RPAREN          reduce using rule 20 (parameter_type_list_opt -> parameter_type_list .)


state 372

    (235) direct_abstract_declarator -> LPAREN parameter_type_list_opt . RPAREN

    RPAREN          shift and go to state 462


state 373

    (229) direct_abstract_declarator -> LPAREN abstract_declarator . RPAREN

    RPAREN          shift and go to state 463


state 374

    (231) direct_abstract_declarator -> LBRACKET assignment_expression_opt . RBRACKET

    RBRACKET        shift and go to state 464


state 375

    (233) direct_abstract_declarator -> LBRACKET TIMES . RBRACKET
    (304) unary_operator -> TIMES .

    RBRACKET        shift and go to state 465
    LPAREN          reduce using rule 304 (unary_operator -> TIMES .)
    PLUSPLUS        reduce using rule 304 (unary_operator -> TIMES .)
    MINUSMINUS      reduce using rule 304 (unary_operator -> TIMES .)
    SIZEOF          reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT        reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_ADD    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_SUB    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_FIRST  reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_LAST   reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MIN    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MAX    reduce using rule 304 (unary_operator -> TIMES .)
    AND             reduce using rule 304 (unary_operator -> TIMES .)
    TIMES           reduce using rule 304 (unary_operator -> TIMES .)
    PLUS            reduce using rule 304 (unary_operator -> TIMES .)
    MINUS           reduce using rule 304 (unary_operator -> TIMES .)
    NOT             reduce using rule 304 (unary_operator -> TIMES .)
    LNOT            reduce using rule 304 (unary_operator -> TIMES .)
    ID              reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_DEC   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_OCT   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_HEX   reduce using rule 304 (unary_operator -> TIMES .)
    FLOAT_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    HEX_FLOAT_CONST reduce using rule 304 (unary_operator -> TIMES .)
    CHAR_CONST      reduce using rule 304 (unary_operator -> TIMES .)
    WCHAR_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    STRING_LITERAL  reduce using rule 304 (unary_operator -> TIMES .)
    WSTRING_LITERAL reduce using rule 304 (unary_operator -> TIMES .)


state 376

    (230) direct_abstract_declarator -> direct_abstract_declarator LBRACKET . assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> direct_abstract_declarator LBRACKET . TIMES RBRACKET
    (3) assignment_expression_opt -> . empty
    (4) assignment_expression_opt -> . assignment_expression
    (340) empty -> .
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    TIMES           shift and go to state 467
    RBRACKET        reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    assignment_expression_opt      shift and go to state 466
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 115
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    empty                          shift and go to state 113
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116

state 377

    (234) direct_abstract_declarator -> direct_abstract_declarator LPAREN . parameter_type_list_opt RPAREN
    (19) parameter_type_list_opt -> . empty
    (20) parameter_type_list_opt -> . parameter_type_list
    (340) empty -> .
    (207) parameter_type_list -> . parameter_list
    (208) parameter_type_list -> . parameter_list COMMA ELLIPSIS
    (209) parameter_list -> . parameter_declaration
    (210) parameter_list -> . parameter_list COMMA parameter_declaration
    (211) parameter_declaration -> . declaration_specifiers declarator
    (212) parameter_declaration -> . declaration_specifiers abstract_declarator_opt
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION

    RPAREN          reduce using rule 340 (empty -> .)
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 5
    type_specifier                 shift and go to state 13
    struct_or_union                shift and go to state 7
    parameter_type_list            shift and go to state 371
    parameter_declaration          shift and go to state 142
    declaration_specifiers         shift and go to state 143
    typedef_name                   shift and go to state 28
    parameter_type_list_opt        shift and go to state 468
    parameter_list                 shift and go to state 145
    enum_specifier                 shift and go to state 45
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    empty                          shift and go to state 370

state 378

    (227) abstract_declarator -> pointer direct_abstract_declarator .
    (230) direct_abstract_declarator -> direct_abstract_declarator . LBRACKET assignment_expression_opt RBRACKET
    (232) direct_abstract_declarator -> direct_abstract_declarator . LBRACKET TIMES RBRACKET
    (234) direct_abstract_declarator -> direct_abstract_declarator . LPAREN parameter_type_list_opt RPAREN

    RPAREN          reduce using rule 227 (abstract_declarator -> pointer direct_abstract_declarator .)
    COMMA           reduce using rule 227 (abstract_declarator -> pointer direct_abstract_declarator .)
    LBRACKET        shift and go to state 376
    LPAREN          shift and go to state 377


state 379

    (214) identifier_list -> identifier_list COMMA identifier .

    COMMA           reduce using rule 214 (identifier_list -> identifier_list COMMA identifier .)
    RPAREN          reduce using rule 214 (identifier_list -> identifier_list COMMA identifier .)


state 380

    (208) parameter_type_list -> parameter_list COMMA ELLIPSIS .

    RPAREN          reduce using rule 208 (parameter_type_list -> parameter_list COMMA ELLIPSIS .)


state 381

    (210) parameter_list -> parameter_list COMMA parameter_declaration .

    COMMA           reduce using rule 210 (parameter_list -> parameter_list COMMA parameter_declaration .)
    RPAREN          reduce using rule 210 (parameter_list -> parameter_list COMMA parameter_declaration .)


state 382

    (189) enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .

    CONST           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    RESTRICT        reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    VOLATILE        reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    VOID            reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    _BOOL           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    CHAR            reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    SHORT           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    INT             reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    LONG            reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    FLOAT           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    DOUBLE          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    _COMPLEX        reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    SIGNED          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    UNSIGNED        reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    TYPEID          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    ENUM            reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    STRUCT          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    UNION           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    COLON           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    ID              reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    LPAREN          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    TIMES           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    SEMI            reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    LBRACKET        reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    RPAREN          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    AUTO            reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    REGISTER        reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    STATIC          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    EXTERN          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    TYPEDEF         reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    INLINE          reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)
    COMMA           reduce using rule 189 (enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close .)


state 383

    (188) enum_specifier -> ENUM ID brace_open enumerator_list brace_close .

    CONST           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    RESTRICT        reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    VOLATILE        reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    VOID            reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    _BOOL           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    CHAR            reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    SHORT           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    INT             reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    LONG            reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    FLOAT           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    DOUBLE          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    _COMPLEX        reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    SIGNED          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    UNSIGNED        reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    TYPEID          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    ENUM            reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    STRUCT          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    UNION           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    COLON           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    ID              reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    LPAREN          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    TIMES           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    SEMI            reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    LBRACKET        reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    RPAREN          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    AUTO            reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    REGISTER        reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    STATIC          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    EXTERN          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    TYPEDEF         reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    INLINE          reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)
    COMMA           reduce using rule 188 (enum_specifier -> ENUM ID brace_open enumerator_list brace_close .)


state 384

    (192) enumerator_list -> enumerator_list COMMA enumerator .

    COMMA           reduce using rule 192 (enumerator_list -> enumerator_list COMMA enumerator .)
    RBRACE          reduce using rule 192 (enumerator_list -> enumerator_list COMMA enumerator .)


state 385

    (194) enumerator -> ID EQUALS constant_expression .

    COMMA           reduce using rule 194 (enumerator -> ID EQUALS constant_expression .)
    RBRACE          reduce using rule 194 (enumerator -> ID EQUALS constant_expression .)


state 386

    (12) designation_opt -> designation .

    LBRACE          reduce using rule 12 (designation_opt -> designation .)
    PLUSPLUS        reduce using rule 12 (designation_opt -> designation .)
    MINUSMINUS      reduce using rule 12 (designation_opt -> designation .)
    SIZEOF          reduce using rule 12 (designation_opt -> designation .)
    POINTCUT        reduce using rule 12 (designation_opt -> designation .)
    POINTCUT_ADD    reduce using rule 12 (designation_opt -> designation .)
    POINTCUT_SUB    reduce using rule 12 (designation_opt -> designation .)
    POINTCUT_FIRST  reduce using rule 12 (designation_opt -> designation .)
    POINTCUT_LAST   reduce using rule 12 (designation_opt -> designation .)
    POINTCUT_MIN    reduce using rule 12 (designation_opt -> designation .)
    POINTCUT_MAX    reduce using rule 12 (designation_opt -> designation .)
    LPAREN          reduce using rule 12 (designation_opt -> designation .)
    AND             reduce using rule 12 (designation_opt -> designation .)
    TIMES           reduce using rule 12 (designation_opt -> designation .)
    PLUS            reduce using rule 12 (designation_opt -> designation .)
    MINUS           reduce using rule 12 (designation_opt -> designation .)
    NOT             reduce using rule 12 (designation_opt -> designation .)
    LNOT            reduce using rule 12 (designation_opt -> designation .)
    ID              reduce using rule 12 (designation_opt -> designation .)
    INT_CONST_DEC   reduce using rule 12 (designation_opt -> designation .)
    INT_CONST_OCT   reduce using rule 12 (designation_opt -> designation .)
    INT_CONST_HEX   reduce using rule 12 (designation_opt -> designation .)
    FLOAT_CONST     reduce using rule 12 (designation_opt -> designation .)
    HEX_FLOAT_CONST reduce using rule 12 (designation_opt -> designation .)
    CHAR_CONST      reduce using rule 12 (designation_opt -> designation .)
    WCHAR_CONST     reduce using rule 12 (designation_opt -> designation .)
    STRING_LITERAL  reduce using rule 12 (designation_opt -> designation .)
    WSTRING_LITERAL reduce using rule 12 (designation_opt -> designation .)


state 387

    (221) designator_list -> designator .

    EQUALS          reduce using rule 221 (designator_list -> designator .)
    LBRACKET        reduce using rule 221 (designator_list -> designator .)
    PERIOD          reduce using rule 221 (designator_list -> designator .)


state 388

    (224) designator -> PERIOD . identifier
    (326) identifier -> . ID

    ID              shift and go to state 124

    identifier                     shift and go to state 469

state 389

    (223) designator -> LBRACKET . constant_expression RBRACKET
    (273) constant_expression -> . conditional_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 202
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 324
    constant_expression            shift and go to state 470
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 390

    (218) initializer_list -> designation_opt . initializer
    (215) initializer -> . assignment_expression
    (216) initializer -> . brace_open initializer_list brace_close
    (217) initializer -> . brace_open initializer_list COMMA brace_close
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (338) brace_open -> . LBRACE
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LBRACE          shift and go to state 55
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    initializer                    shift and go to state 471
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    brace_open                     shift and go to state 256
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 257
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116

state 391

    (11) designation_opt -> empty .

    LBRACE          reduce using rule 11 (designation_opt -> empty .)
    PLUSPLUS        reduce using rule 11 (designation_opt -> empty .)
    MINUSMINUS      reduce using rule 11 (designation_opt -> empty .)
    SIZEOF          reduce using rule 11 (designation_opt -> empty .)
    POINTCUT        reduce using rule 11 (designation_opt -> empty .)
    POINTCUT_ADD    reduce using rule 11 (designation_opt -> empty .)
    POINTCUT_SUB    reduce using rule 11 (designation_opt -> empty .)
    POINTCUT_FIRST  reduce using rule 11 (designation_opt -> empty .)
    POINTCUT_LAST   reduce using rule 11 (designation_opt -> empty .)
    POINTCUT_MIN    reduce using rule 11 (designation_opt -> empty .)
    POINTCUT_MAX    reduce using rule 11 (designation_opt -> empty .)
    LPAREN          reduce using rule 11 (designation_opt -> empty .)
    AND             reduce using rule 11 (designation_opt -> empty .)
    TIMES           reduce using rule 11 (designation_opt -> empty .)
    PLUS            reduce using rule 11 (designation_opt -> empty .)
    MINUS           reduce using rule 11 (designation_opt -> empty .)
    NOT             reduce using rule 11 (designation_opt -> empty .)
    LNOT            reduce using rule 11 (designation_opt -> empty .)
    ID              reduce using rule 11 (designation_opt -> empty .)
    INT_CONST_DEC   reduce using rule 11 (designation_opt -> empty .)
    INT_CONST_OCT   reduce using rule 11 (designation_opt -> empty .)
    INT_CONST_HEX   reduce using rule 11 (designation_opt -> empty .)
    FLOAT_CONST     reduce using rule 11 (designation_opt -> empty .)
    HEX_FLOAT_CONST reduce using rule 11 (designation_opt -> empty .)
    CHAR_CONST      reduce using rule 11 (designation_opt -> empty .)
    WCHAR_CONST     reduce using rule 11 (designation_opt -> empty .)
    STRING_LITERAL  reduce using rule 11 (designation_opt -> empty .)
    WSTRING_LITERAL reduce using rule 11 (designation_opt -> empty .)


state 392

    (216) initializer -> brace_open initializer_list . brace_close
    (217) initializer -> brace_open initializer_list . COMMA brace_close
    (219) initializer_list -> initializer_list . COMMA designation_opt initializer
    (339) brace_close -> . RBRACE

    COMMA           shift and go to state 472
    RBRACE          shift and go to state 165

    brace_close                    shift and go to state 473

state 393

    (220) designation -> designator_list . EQUALS
    (222) designator_list -> designator_list . designator
    (223) designator -> . LBRACKET constant_expression RBRACKET
    (224) designator -> . PERIOD identifier

    EQUALS          shift and go to state 475
    LBRACKET        shift and go to state 389
    PERIOD          shift and go to state 388

    designator                     shift and go to state 474

state 394

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 476


state 395

    (27) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 477


state 396

    (251) jump_statement -> GOTO ID . SEMI

    SEMI            shift and go to state 478


state 397

    (256) expression_statement -> expression_opt SEMI .

    ID              reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    CASE            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    DEFAULT         reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    IF              reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    SWITCH          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    WHILE           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    DO              reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    FOR             reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    GOTO            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    BREAK           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    CONTINUE        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    RETURN          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    LBRACE          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    CONST           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    RESTRICT        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    VOLATILE        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    VOID            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    _BOOL           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    CHAR            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    SHORT           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    INT             reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    LONG            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    FLOAT           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    DOUBLE          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    _COMPLEX        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    SIGNED          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    UNSIGNED        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    AUTO            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    REGISTER        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    STATIC          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    EXTERN          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    TYPEDEF         reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    INLINE          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    TYPEID          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    ENUM            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    STRUCT          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    UNION           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    PLUSPLUS        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MINUSMINUS      reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    SIZEOF          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    POINTCUT        reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    POINTCUT_ADD    reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    POINTCUT_SUB    reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    POINTCUT_FIRST  reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    POINTCUT_LAST   reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    POINTCUT_MIN    reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    POINTCUT_MAX    reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    LPAREN          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    AND             reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    TIMES           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    PLUS            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    MINUS           reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    NOT             reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    LNOT            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    INT_CONST_DEC   reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    INT_CONST_OCT   reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    INT_CONST_HEX   reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    FLOAT_CONST     reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    HEX_FLOAT_CONST reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    CHAR_CONST      reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    WCHAR_CONST     reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    STRING_LITERAL  reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    WSTRING_LITERAL reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    SEMI            reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    RBRACE          reduce using rule 256 (expression_statement -> expression_opt SEMI .)
    ELSE            reduce using rule 256 (expression_statement -> expression_opt SEMI .)


state 398

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN . ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 479


state 399

    (31) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 480


state 400

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN . ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 481


state 401

    (29) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 482


state 402

    (43) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 483


state 403

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 484


state 404

    (249) iteration_statement -> FOR LPAREN . expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> FOR LPAREN . declaration expression_opt SEMI expression_opt RPAREN statement
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (134) declaration -> . decl_body SEMI
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (108) decl_body -> . declaration_specifiers init_declarator_list_opt
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (137) declaration_specifiers -> . type_qualifier declaration_specifiers_opt
    (138) declaration_specifiers -> . type_specifier declaration_specifiers_opt
    (139) declaration_specifiers -> . storage_class_specifier declaration_specifiers_opt
    (140) declaration_specifiers -> . function_specifier declaration_specifiers_opt
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (161) type_qualifier -> . CONST
    (162) type_qualifier -> . RESTRICT
    (163) type_qualifier -> . VOLATILE
    (147) type_specifier -> . VOID
    (148) type_specifier -> . _BOOL
    (149) type_specifier -> . CHAR
    (150) type_specifier -> . SHORT
    (151) type_specifier -> . INT
    (152) type_specifier -> . LONG
    (153) type_specifier -> . FLOAT
    (154) type_specifier -> . DOUBLE
    (155) type_specifier -> . _COMPLEX
    (156) type_specifier -> . SIGNED
    (157) type_specifier -> . UNSIGNED
    (158) type_specifier -> . typedef_name
    (159) type_specifier -> . enum_specifier
    (160) type_specifier -> . struct_or_union_specifier
    (141) storage_class_specifier -> . AUTO
    (142) storage_class_specifier -> . REGISTER
    (143) storage_class_specifier -> . STATIC
    (144) storage_class_specifier -> . EXTERN
    (145) storage_class_specifier -> . TYPEDEF
    (146) function_specifier -> . INLINE
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (259) typedef_name -> . TYPEID
    (185) enum_specifier -> . ENUM ID
    (186) enum_specifier -> . ENUM TYPEID
    (187) enum_specifier -> . ENUM brace_open enumerator_list brace_close
    (188) enum_specifier -> . ENUM ID brace_open enumerator_list brace_close
    (189) enum_specifier -> . ENUM TYPEID brace_open enumerator_list brace_close
    (170) struct_or_union_specifier -> . struct_or_union ID
    (171) struct_or_union_specifier -> . struct_or_union TYPEID
    (172) struct_or_union_specifier -> . struct_or_union brace_open struct_declaration_list brace_close
    (173) struct_or_union_specifier -> . struct_or_union ID brace_open struct_declaration_list brace_close
    (174) struct_or_union_specifier -> . struct_or_union TYPEID brace_open struct_declaration_list brace_close
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (175) struct_or_union -> . STRUCT
    (176) struct_or_union -> . UNION
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    CONST           shift and go to state 3
    RESTRICT        shift and go to state 31
    VOLATILE        shift and go to state 46
    VOID            shift and go to state 6
    _BOOL           shift and go to state 12
    CHAR            shift and go to state 36
    SHORT           shift and go to state 2
    INT             shift and go to state 39
    LONG            shift and go to state 18
    FLOAT           shift and go to state 34
    DOUBLE          shift and go to state 40
    _COMPLEX        shift and go to state 26
    SIGNED          shift and go to state 43
    UNSIGNED        shift and go to state 17
    AUTO            shift and go to state 20
    REGISTER        shift and go to state 16
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 22
    INLINE          shift and go to state 49
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    TYPEID          shift and go to state 23
    ENUM            shift and go to state 25
    STRUCT          shift and go to state 33
    UNION           shift and go to state 19
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    storage_class_specifier        shift and go to state 1
    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    struct_or_union_specifier      shift and go to state 5
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    type_specifier                 shift and go to state 13
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    empty                          shift and go to state 408
    struct_or_union                shift and go to state 7
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    expression_opt                 shift and go to state 485
    primary_expression             shift and go to state 121
    declaration_specifiers         shift and go to state 79
    declaration                    shift and go to state 486
    typedef_name                   shift and go to state 28
    binary_expression              shift and go to state 130
    enum_specifier                 shift and go to state 45
    decl_body                      shift and go to state 41
    type_qualifier                 shift and go to state 42
    function_specifier             shift and go to state 44
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 291
    pointcut_keyword               shift and go to state 132

state 405

    (45) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 487


state 406

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN . ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 488


state 407

    (239) block_item_list -> block_item_list block_item .

    ID              reduce using rule 239 (block_item_list -> block_item_list block_item .)
    CASE            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    DEFAULT         reduce using rule 239 (block_item_list -> block_item_list block_item .)
    IF              reduce using rule 239 (block_item_list -> block_item_list block_item .)
    SWITCH          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    WHILE           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    DO              reduce using rule 239 (block_item_list -> block_item_list block_item .)
    FOR             reduce using rule 239 (block_item_list -> block_item_list block_item .)
    GOTO            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    BREAK           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    CONTINUE        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    RETURN          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_APPEND_AFTER_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_APPEND_AROUND_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    LBRACE          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    CONST           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    RESTRICT        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    VOLATILE        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    VOID            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    _BOOL           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    CHAR            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    SHORT           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    INT             reduce using rule 239 (block_item_list -> block_item_list block_item .)
    LONG            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    FLOAT           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    DOUBLE          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    _COMPLEX        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    SIGNED          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    UNSIGNED        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    AUTO            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    REGISTER        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    STATIC          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    EXTERN          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    TYPEDEF         reduce using rule 239 (block_item_list -> block_item_list block_item .)
    INLINE          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    TYPEID          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    ENUM            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    STRUCT          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    UNION           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    PLUSPLUS        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MINUSMINUS      reduce using rule 239 (block_item_list -> block_item_list block_item .)
    SIZEOF          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    POINTCUT        reduce using rule 239 (block_item_list -> block_item_list block_item .)
    POINTCUT_ADD    reduce using rule 239 (block_item_list -> block_item_list block_item .)
    POINTCUT_SUB    reduce using rule 239 (block_item_list -> block_item_list block_item .)
    POINTCUT_FIRST  reduce using rule 239 (block_item_list -> block_item_list block_item .)
    POINTCUT_LAST   reduce using rule 239 (block_item_list -> block_item_list block_item .)
    POINTCUT_MIN    reduce using rule 239 (block_item_list -> block_item_list block_item .)
    POINTCUT_MAX    reduce using rule 239 (block_item_list -> block_item_list block_item .)
    LPAREN          reduce using rule 239 (block_item_list -> block_item_list block_item .)
    AND             reduce using rule 239 (block_item_list -> block_item_list block_item .)
    TIMES           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    PLUS            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    MINUS           reduce using rule 239 (block_item_list -> block_item_list block_item .)
    NOT             reduce using rule 239 (block_item_list -> block_item_list block_item .)
    LNOT            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    INT_CONST_DEC   reduce using rule 239 (block_item_list -> block_item_list block_item .)
    INT_CONST_OCT   reduce using rule 239 (block_item_list -> block_item_list block_item .)
    INT_CONST_HEX   reduce using rule 239 (block_item_list -> block_item_list block_item .)
    FLOAT_CONST     reduce using rule 239 (block_item_list -> block_item_list block_item .)
    HEX_FLOAT_CONST reduce using rule 239 (block_item_list -> block_item_list block_item .)
    CHAR_CONST      reduce using rule 239 (block_item_list -> block_item_list block_item .)
    WCHAR_CONST     reduce using rule 239 (block_item_list -> block_item_list block_item .)
    STRING_LITERAL  reduce using rule 239 (block_item_list -> block_item_list block_item .)
    WSTRING_LITERAL reduce using rule 239 (block_item_list -> block_item_list block_item .)
    SEMI            reduce using rule 239 (block_item_list -> block_item_list block_item .)
    RBRACE          reduce using rule 239 (block_item_list -> block_item_list block_item .)


state 408

    (13) expression_opt -> empty .

    SEMI            reduce using rule 13 (expression_opt -> empty .)
    RPAREN          reduce using rule 13 (expression_opt -> empty .)


state 409

    (253) jump_statement -> CONTINUE SEMI .

    ID              reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    CASE            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    IF              reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    DO              reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    FOR             reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    GOTO            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    LBRACE          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    CONST           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    RESTRICT        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    VOLATILE        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    VOID            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    _BOOL           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    CHAR            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    SHORT           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    INT             reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    LONG            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    FLOAT           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    _COMPLEX        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    SIGNED          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    UNSIGNED        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    AUTO            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    REGISTER        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    STATIC          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    EXTERN          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    TYPEDEF         reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    INLINE          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    TYPEID          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    ENUM            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    STRUCT          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    UNION           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    PLUSPLUS        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MINUSMINUS      reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    SIZEOF          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    POINTCUT        reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    POINTCUT_ADD    reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    POINTCUT_SUB    reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    POINTCUT_FIRST  reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    POINTCUT_LAST   reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    POINTCUT_MIN    reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    POINTCUT_MAX    reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    AND             reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    TIMES           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    PLUS            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    MINUS           reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    NOT             reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    LNOT            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    INT_CONST_DEC   reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    INT_CONST_OCT   reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    INT_CONST_HEX   reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    FLOAT_CONST     reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    HEX_FLOAT_CONST reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    CHAR_CONST      reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    WCHAR_CONST     reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    STRING_LITERAL  reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    WSTRING_LITERAL reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    SEMI            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    RBRACE          reduce using rule 253 (jump_statement -> CONTINUE SEMI .)
    ELSE            reduce using rule 253 (jump_statement -> CONTINUE SEMI .)


state 410

    (243) labeled_statement -> DEFAULT COLON . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 489
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_append_advice_around_call_keyword shift and go to state 290
    expression                     shift and go to state 291

state 411

    (33) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 490


state 412

    (247) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 491

state 413

    (255) jump_statement -> RETURN SEMI .

    ID              reduce using rule 255 (jump_statement -> RETURN SEMI .)
    CASE            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    DEFAULT         reduce using rule 255 (jump_statement -> RETURN SEMI .)
    IF              reduce using rule 255 (jump_statement -> RETURN SEMI .)
    SWITCH          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    WHILE           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    DO              reduce using rule 255 (jump_statement -> RETURN SEMI .)
    FOR             reduce using rule 255 (jump_statement -> RETURN SEMI .)
    GOTO            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    BREAK           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    CONTINUE        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    RETURN          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    LBRACE          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    CONST           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    RESTRICT        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    VOLATILE        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    VOID            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    _BOOL           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    CHAR            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    SHORT           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    INT             reduce using rule 255 (jump_statement -> RETURN SEMI .)
    LONG            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    FLOAT           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    DOUBLE          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    _COMPLEX        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    SIGNED          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    UNSIGNED        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    AUTO            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    REGISTER        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    STATIC          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    EXTERN          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    TYPEDEF         reduce using rule 255 (jump_statement -> RETURN SEMI .)
    INLINE          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    TYPEID          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    ENUM            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    STRUCT          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    UNION           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    PLUSPLUS        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MINUSMINUS      reduce using rule 255 (jump_statement -> RETURN SEMI .)
    SIZEOF          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    POINTCUT        reduce using rule 255 (jump_statement -> RETURN SEMI .)
    POINTCUT_ADD    reduce using rule 255 (jump_statement -> RETURN SEMI .)
    POINTCUT_SUB    reduce using rule 255 (jump_statement -> RETURN SEMI .)
    POINTCUT_FIRST  reduce using rule 255 (jump_statement -> RETURN SEMI .)
    POINTCUT_LAST   reduce using rule 255 (jump_statement -> RETURN SEMI .)
    POINTCUT_MIN    reduce using rule 255 (jump_statement -> RETURN SEMI .)
    POINTCUT_MAX    reduce using rule 255 (jump_statement -> RETURN SEMI .)
    LPAREN          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    AND             reduce using rule 255 (jump_statement -> RETURN SEMI .)
    TIMES           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    PLUS            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    MINUS           reduce using rule 255 (jump_statement -> RETURN SEMI .)
    NOT             reduce using rule 255 (jump_statement -> RETURN SEMI .)
    LNOT            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    INT_CONST_DEC   reduce using rule 255 (jump_statement -> RETURN SEMI .)
    INT_CONST_OCT   reduce using rule 255 (jump_statement -> RETURN SEMI .)
    INT_CONST_HEX   reduce using rule 255 (jump_statement -> RETURN SEMI .)
    FLOAT_CONST     reduce using rule 255 (jump_statement -> RETURN SEMI .)
    HEX_FLOAT_CONST reduce using rule 255 (jump_statement -> RETURN SEMI .)
    CHAR_CONST      reduce using rule 255 (jump_statement -> RETURN SEMI .)
    WCHAR_CONST     reduce using rule 255 (jump_statement -> RETURN SEMI .)
    STRING_LITERAL  reduce using rule 255 (jump_statement -> RETURN SEMI .)
    WSTRING_LITERAL reduce using rule 255 (jump_statement -> RETURN SEMI .)
    SEMI            reduce using rule 255 (jump_statement -> RETURN SEMI .)
    RBRACE          reduce using rule 255 (jump_statement -> RETURN SEMI .)
    ELSE            reduce using rule 255 (jump_statement -> RETURN SEMI .)


state 414

    (254) jump_statement -> RETURN expression . SEMI
    (258) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 492
    COMMA           shift and go to state 342


state 415

    (242) labeled_statement -> CASE constant_expression . COLON statement

    COLON           shift and go to state 493


state 416

    (47) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 494


state 417

    (246) selection_statement -> SWITCH LPAREN . expression RPAREN statement
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 495

state 418

    (37) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 496


state 419

    (252) jump_statement -> BREAK SEMI .

    ID              reduce using rule 252 (jump_statement -> BREAK SEMI .)
    CASE            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    DEFAULT         reduce using rule 252 (jump_statement -> BREAK SEMI .)
    IF              reduce using rule 252 (jump_statement -> BREAK SEMI .)
    SWITCH          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    WHILE           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    DO              reduce using rule 252 (jump_statement -> BREAK SEMI .)
    FOR             reduce using rule 252 (jump_statement -> BREAK SEMI .)
    GOTO            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    BREAK           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    RETURN          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    LBRACE          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    CONST           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    RESTRICT        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    VOLATILE        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    VOID            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    _BOOL           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    CHAR            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    SHORT           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    INT             reduce using rule 252 (jump_statement -> BREAK SEMI .)
    LONG            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    FLOAT           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    DOUBLE          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    _COMPLEX        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    SIGNED          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    UNSIGNED        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    AUTO            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    REGISTER        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    STATIC          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    EXTERN          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    TYPEDEF         reduce using rule 252 (jump_statement -> BREAK SEMI .)
    INLINE          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    TYPEID          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    ENUM            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    STRUCT          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    UNION           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    PLUSPLUS        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MINUSMINUS      reduce using rule 252 (jump_statement -> BREAK SEMI .)
    SIZEOF          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    POINTCUT        reduce using rule 252 (jump_statement -> BREAK SEMI .)
    POINTCUT_ADD    reduce using rule 252 (jump_statement -> BREAK SEMI .)
    POINTCUT_SUB    reduce using rule 252 (jump_statement -> BREAK SEMI .)
    POINTCUT_FIRST  reduce using rule 252 (jump_statement -> BREAK SEMI .)
    POINTCUT_LAST   reduce using rule 252 (jump_statement -> BREAK SEMI .)
    POINTCUT_MIN    reduce using rule 252 (jump_statement -> BREAK SEMI .)
    POINTCUT_MAX    reduce using rule 252 (jump_statement -> BREAK SEMI .)
    LPAREN          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    AND             reduce using rule 252 (jump_statement -> BREAK SEMI .)
    TIMES           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    PLUS            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    MINUS           reduce using rule 252 (jump_statement -> BREAK SEMI .)
    NOT             reduce using rule 252 (jump_statement -> BREAK SEMI .)
    LNOT            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    INT_CONST_DEC   reduce using rule 252 (jump_statement -> BREAK SEMI .)
    INT_CONST_OCT   reduce using rule 252 (jump_statement -> BREAK SEMI .)
    INT_CONST_HEX   reduce using rule 252 (jump_statement -> BREAK SEMI .)
    FLOAT_CONST     reduce using rule 252 (jump_statement -> BREAK SEMI .)
    HEX_FLOAT_CONST reduce using rule 252 (jump_statement -> BREAK SEMI .)
    CHAR_CONST      reduce using rule 252 (jump_statement -> BREAK SEMI .)
    WCHAR_CONST     reduce using rule 252 (jump_statement -> BREAK SEMI .)
    STRING_LITERAL  reduce using rule 252 (jump_statement -> BREAK SEMI .)
    WSTRING_LITERAL reduce using rule 252 (jump_statement -> BREAK SEMI .)
    SEMI            reduce using rule 252 (jump_statement -> BREAK SEMI .)
    RBRACE          reduce using rule 252 (jump_statement -> BREAK SEMI .)
    ELSE            reduce using rule 252 (jump_statement -> BREAK SEMI .)


state 420

    (39) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 497


state 421

    (248) iteration_statement -> DO statement . WHILE LPAREN expression RPAREN SEMI

    WHILE           shift and go to state 498


state 422

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN . ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 499


state 423

    (35) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 500


state 424

    (41) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 501


state 425

    (240) compound_statement -> brace_open block_item_list_opt brace_close .

    ID              reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    CASE            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    DEFAULT         reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    IF              reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    SWITCH          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    WHILE           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    DO              reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    FOR             reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    GOTO            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    BREAK           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    CONTINUE        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    RETURN          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_APPEND_AFTER_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_APPEND_AROUND_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    LBRACE          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    CONST           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    RESTRICT        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    VOLATILE        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    VOID            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    _BOOL           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    CHAR            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    SHORT           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    INT             reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    LONG            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    FLOAT           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    DOUBLE          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    _COMPLEX        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    SIGNED          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    UNSIGNED        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    AUTO            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    REGISTER        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    STATIC          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    EXTERN          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    TYPEDEF         reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    INLINE          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    TYPEID          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    ENUM            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    STRUCT          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    UNION           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    PLUSPLUS        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MINUSMINUS      reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    SIZEOF          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    POINTCUT        reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    POINTCUT_ADD    reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    POINTCUT_SUB    reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    POINTCUT_FIRST  reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    POINTCUT_LAST   reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    POINTCUT_MIN    reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    POINTCUT_MAX    reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    LPAREN          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    AND             reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    TIMES           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    PLUS            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    MINUS           reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    NOT             reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    LNOT            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    INT_CONST_DEC   reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    INT_CONST_OCT   reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    INT_CONST_HEX   reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    FLOAT_CONST     reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    HEX_FLOAT_CONST reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    CHAR_CONST      reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    WCHAR_CONST     reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    STRING_LITERAL  reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    WSTRING_LITERAL reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    SEMI            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    RBRACE          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    ELSE            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    PPHASH          reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)
    $end            reduce using rule 240 (compound_statement -> brace_open block_item_list_opt brace_close .)


state 426

    (241) labeled_statement -> ID COLON . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 502
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_append_advice_around_call_keyword shift and go to state 290
    expression                     shift and go to state 291

state 427

    (244) selection_statement -> IF LPAREN . expression RPAREN statement
    (245) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 503

state 428

    (49) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN . ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 504


state 429

    (181) struct_declarator_list -> struct_declarator_list COMMA struct_declarator .

    COMMA           reduce using rule 181 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)
    SEMI            reduce using rule 181 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)


state 430

    (183) struct_declarator -> declarator COLON constant_expression .

    COMMA           reduce using rule 183 (struct_declarator -> declarator COLON constant_expression .)
    SEMI            reduce using rule 183 (struct_declarator -> declarator COLON constant_expression .)


state 431

    (107) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .

    TIMES           reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    MOD             reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    PLUS            reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    MINUS           reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    RSHIFT          reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    LSHIFT          reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    LT              reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    LE              reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    GE              reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    GT              reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    EQ              reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    NE              reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    AND             reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    OR              reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    XOR             reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    LAND            reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    LOR             reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    CONDOP          reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    RPAREN          reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    COMMA           reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    SEMI            reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    COLON           reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    RBRACE          reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    EQUALS          reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    XOREQUAL        reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    TIMESEQUAL      reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    DIVEQUAL        reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    MODEQUAL        reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    PLUSEQUAL       reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    MINUSEQUAL      reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    ANDEQUAL        reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)
    OREQUAL         reduce using rule 107 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID RPAREN .)


state 432

    (104) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 505
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 433

    (105) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA . ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 506


state 434

    (91) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .

    EQUALS          reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    XOREQUAL        reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    TIMESEQUAL      reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    DIVEQUAL        reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    MODEQUAL        reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    PLUSEQUAL       reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    MINUSEQUAL      reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    ANDEQUAL        reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    OREQUAL         reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    CONDOP          reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    TIMES           reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    MOD             reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    PLUS            reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    MINUS           reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    RSHIFT          reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    LSHIFT          reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    LT              reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    LE              reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    GE              reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    GT              reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    EQ              reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    NE              reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    AND             reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    OR              reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    XOR             reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    LAND            reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    LOR             reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    RPAREN          reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    COMMA           reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    SEMI            reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    COLON           reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)
    RBRACE          reduce using rule 91 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID RPAREN .)


state 435

    (88) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 507
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 436

    (89) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA . ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 508


state 437

    (302) unary_expression -> SIZEOF LPAREN type_name RPAREN .
    (317) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list COMMA brace_close
    (338) brace_open -> . LBRACE

    EQUALS          reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    XOREQUAL        reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    TIMESEQUAL      reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    DIVEQUAL        reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MODEQUAL        reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    PLUSEQUAL       reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MINUSEQUAL      reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LSHIFTEQUAL     reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RSHIFTEQUAL     reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    ANDEQUAL        reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    OREQUAL         reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    CONDOP          reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    TIMES           reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    DIVIDE          reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MOD             reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    PLUS            reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    MINUS           reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RSHIFT          reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LSHIFT          reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LT              reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LE              reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    GE              reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    GT              reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    EQ              reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    NE              reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    AND             reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    OR              reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    XOR             reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LAND            reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LOR             reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RPAREN          reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    COMMA           reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    SEMI            reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RBRACKET        reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    COLON           reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    RBRACE          reduce using rule 302 (unary_expression -> SIZEOF LPAREN type_name RPAREN .)
    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 448

state 438

    (310) postfix_expression -> postfix_expression LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PERIOD          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ARROW           reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    XOREQUAL        reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    TIMESEQUAL      reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    DIVEQUAL        reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MODEQUAL        reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUSEQUAL       reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUSEQUAL      reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LSHIFTEQUAL     reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RSHIFTEQUAL     reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ANDEQUAL        reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    OREQUAL         reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    CONDOP          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RSHIFT          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LSHIFT          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    NE              reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    XOR             reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LAND            reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LOR             reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 310 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)


state 439

    (311) postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .

    LBRACKET        reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LPAREN          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PERIOD          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    ARROW           reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PLUSPLUS        reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MINUSMINUS      reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    EQUALS          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    CONDOP          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    TIMES           reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MOD             reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    PLUS            reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    MINUS           reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LT              reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LE              reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    GE              reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    GT              reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    EQ              reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    NE              reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    AND             reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    OR              reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    XOR             reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LAND            reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    LOR             reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    COMMA           reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RBRACE          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    RPAREN          reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    SEMI            reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)
    COLON           reduce using rule 311 (postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN .)


state 440

    (325) argument_expression_list -> argument_expression_list COMMA . assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 509
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 441

    (78) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .

    EQUALS          reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    XOREQUAL        reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    TIMESEQUAL      reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    DIVEQUAL        reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    MODEQUAL        reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    PLUSEQUAL       reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    MINUSEQUAL      reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    ANDEQUAL        reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    OREQUAL         reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    CONDOP          reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    TIMES           reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    MOD             reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    PLUS            reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    MINUS           reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    RSHIFT          reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    LSHIFT          reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    LT              reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    LE              reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    GE              reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    GT              reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    EQ              reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    NE              reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    AND             reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    OR              reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    XOR             reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    LAND            reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    LOR             reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    RPAREN          reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    COMMA           reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    SEMI            reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    COLON           reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)
    RBRACE          reduce using rule 78 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID RPAREN .)


state 442

    (75) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 510
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 443

    (76) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA . ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 511


state 444

    (296) cast_expression -> LPAREN type_name RPAREN . cast_expression
    (317) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list COMMA brace_close
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (338) brace_open -> . LBRACE
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    LBRACE          shift and go to state 55
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    pointcut_add_keyword           shift and go to state 104
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    unary_expression               shift and go to state 202
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 447
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    pointcut_keyword               shift and go to state 132
    brace_open                     shift and go to state 448
    identifier                     shift and go to state 116

state 445

    (317) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name RPAREN . brace_open initializer_list COMMA brace_close
    (338) brace_open -> . LBRACE

    LBRACE          shift and go to state 55

    brace_open                     shift and go to state 448

state 446

    (258) expression -> expression COMMA assignment_expression .

    COMMA           reduce using rule 258 (expression -> expression COMMA assignment_expression .)
    SEMI            reduce using rule 258 (expression -> expression COMMA assignment_expression .)
    RPAREN          reduce using rule 258 (expression -> expression COMMA assignment_expression .)
    RBRACKET        reduce using rule 258 (expression -> expression COMMA assignment_expression .)
    COLON           reduce using rule 258 (expression -> expression COMMA assignment_expression .)


state 447

    (296) cast_expression -> LPAREN type_name RPAREN cast_expression .

    CONDOP          reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    TIMES           reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    DIVIDE          reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MOD             reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    PLUS            reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MINUS           reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RSHIFT          reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LSHIFT          reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LT              reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LE              reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    GE              reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    GT              reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    EQ              reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    NE              reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    AND             reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    OR              reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    XOR             reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LAND            reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LOR             reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RBRACKET        reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RPAREN          reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    COMMA           reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    SEMI            reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    COLON           reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RBRACE          reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    EQUALS          reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    XOREQUAL        reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    TIMESEQUAL      reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    DIVEQUAL        reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MODEQUAL        reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    PLUSEQUAL       reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    MINUSEQUAL      reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    LSHIFTEQUAL     reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    RSHIFTEQUAL     reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    ANDEQUAL        reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)
    OREQUAL         reduce using rule 296 (cast_expression -> LPAREN type_name RPAREN cast_expression .)


state 448

    (317) postfix_expression -> LPAREN type_name RPAREN brace_open . initializer_list brace_close
    (318) postfix_expression -> LPAREN type_name RPAREN brace_open . initializer_list COMMA brace_close
    (218) initializer_list -> . designation_opt initializer
    (219) initializer_list -> . initializer_list COMMA designation_opt initializer
    (11) designation_opt -> . empty
    (12) designation_opt -> . designation
    (340) empty -> .
    (220) designation -> . designator_list EQUALS
    (221) designator_list -> . designator
    (222) designator_list -> . designator_list designator
    (223) designator -> . LBRACKET constant_expression RBRACKET
    (224) designator -> . PERIOD identifier

    LBRACE          reduce using rule 340 (empty -> .)
    PLUSPLUS        reduce using rule 340 (empty -> .)
    MINUSMINUS      reduce using rule 340 (empty -> .)
    SIZEOF          reduce using rule 340 (empty -> .)
    POINTCUT        reduce using rule 340 (empty -> .)
    POINTCUT_ADD    reduce using rule 340 (empty -> .)
    POINTCUT_SUB    reduce using rule 340 (empty -> .)
    POINTCUT_FIRST  reduce using rule 340 (empty -> .)
    POINTCUT_LAST   reduce using rule 340 (empty -> .)
    POINTCUT_MIN    reduce using rule 340 (empty -> .)
    POINTCUT_MAX    reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    AND             reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    PLUS            reduce using rule 340 (empty -> .)
    MINUS           reduce using rule 340 (empty -> .)
    NOT             reduce using rule 340 (empty -> .)
    LNOT            reduce using rule 340 (empty -> .)
    ID              reduce using rule 340 (empty -> .)
    INT_CONST_DEC   reduce using rule 340 (empty -> .)
    INT_CONST_OCT   reduce using rule 340 (empty -> .)
    INT_CONST_HEX   reduce using rule 340 (empty -> .)
    FLOAT_CONST     reduce using rule 340 (empty -> .)
    HEX_FLOAT_CONST reduce using rule 340 (empty -> .)
    CHAR_CONST      reduce using rule 340 (empty -> .)
    WCHAR_CONST     reduce using rule 340 (empty -> .)
    STRING_LITERAL  reduce using rule 340 (empty -> .)
    WSTRING_LITERAL reduce using rule 340 (empty -> .)
    LBRACKET        shift and go to state 389
    PERIOD          shift and go to state 388

    designation                    shift and go to state 386
    designator                     shift and go to state 387
    designation_opt                shift and go to state 390
    empty                          shift and go to state 391
    initializer_list               shift and go to state 512
    designator_list                shift and go to state 393

state 449

    (72) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .

    EQUALS          reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    XOREQUAL        reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    TIMESEQUAL      reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    DIVEQUAL        reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    MODEQUAL        reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    PLUSEQUAL       reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    MINUSEQUAL      reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    ANDEQUAL        reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    OREQUAL         reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    CONDOP          reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    TIMES           reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    MOD             reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    PLUS            reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    MINUS           reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    RSHIFT          reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    LSHIFT          reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    LT              reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    LE              reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    GE              reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    GT              reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    EQ              reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    NE              reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    AND             reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    OR              reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    XOR             reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    LAND            reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    LOR             reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    RPAREN          reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    COMMA           reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    SEMI            reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    COLON           reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)
    RBRACE          reduce using rule 72 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID RPAREN .)


state 450

    (69) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 513
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 451

    (70) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA . ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 514


state 452

    (96) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .

    EQUALS          reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    XOREQUAL        reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    TIMESEQUAL      reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    DIVEQUAL        reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    MODEQUAL        reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    PLUSEQUAL       reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    MINUSEQUAL      reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    ANDEQUAL        reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    OREQUAL         reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    CONDOP          reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    TIMES           reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    MOD             reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    PLUS            reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    MINUS           reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    RSHIFT          reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    LSHIFT          reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    LT              reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    LE              reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    GE              reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    GT              reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    EQ              reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    NE              reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    AND             reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    OR              reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    XOR             reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    LAND            reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    LOR             reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    COMMA           reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    SEMI            reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    RPAREN          reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    COLON           reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)
    RBRACE          reduce using rule 96 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID RPAREN .)


state 453

    (93) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 515
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 454

    (94) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA . ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 516


state 455

    (275) conditional_expression -> binary_expression CONDOP expression COLON . conditional_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 202
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 517
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    unary_operator                 shift and go to state 110
    identifier                     shift and go to state 116

state 456

    (66) pointcut_keyword -> POINTCUT LPAREN ID RPAREN .

    TIMES           reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    MOD             reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    PLUS            reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    MINUS           reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    RSHIFT          reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    LSHIFT          reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    LT              reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    LE              reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    GE              reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    GT              reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    EQ              reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    NE              reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    AND             reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    OR              reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    XOR             reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    LAND            reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    LOR             reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    CONDOP          reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    RPAREN          reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    COMMA           reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    SEMI            reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    COLON           reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    RBRACE          reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    EQUALS          reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    XOREQUAL        reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    TIMESEQUAL      reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    DIVEQUAL        reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    MODEQUAL        reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    PLUSEQUAL       reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    MINUSEQUAL      reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    ANDEQUAL        reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)
    OREQUAL         reduce using rule 66 (pointcut_keyword -> POINTCUT LPAREN ID RPAREN .)


state 457

    (63) pointcut_keyword -> POINTCUT LPAREN ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 518
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 458

    (64) pointcut_keyword -> POINTCUT LPAREN ID COMMA . ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> POINTCUT LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 519


state 459

    (84) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .

    EQUALS          reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    XOREQUAL        reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    TIMESEQUAL      reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    DIVEQUAL        reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    MODEQUAL        reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    PLUSEQUAL       reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    MINUSEQUAL      reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    ANDEQUAL        reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    OREQUAL         reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    CONDOP          reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    TIMES           reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    MOD             reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    PLUS            reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    MINUS           reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    RSHIFT          reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    LSHIFT          reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    LT              reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    LE              reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    GE              reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    GT              reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    EQ              reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    NE              reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    AND             reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    OR              reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    XOR             reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    LAND            reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    LOR             reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    COMMA           reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    RPAREN          reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    SEMI            reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    RBRACKET        reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    COLON           reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)
    RBRACE          reduce using rule 84 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID RPAREN .)


state 460

    (81) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 520
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 461

    (82) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA . ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA . ID RPAREN

    ID              shift and go to state 521


state 462

    (235) direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .

    LBRACKET        reduce using rule 235 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)
    LPAREN          reduce using rule 235 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)
    COMMA           reduce using rule 235 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)
    RPAREN          reduce using rule 235 (direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN .)


state 463

    (229) direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .

    LBRACKET        reduce using rule 229 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)
    LPAREN          reduce using rule 229 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)
    COMMA           reduce using rule 229 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)
    RPAREN          reduce using rule 229 (direct_abstract_declarator -> LPAREN abstract_declarator RPAREN .)


state 464

    (231) direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET .

    LBRACKET        reduce using rule 231 (direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET .)
    LPAREN          reduce using rule 231 (direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET .)
    COMMA           reduce using rule 231 (direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET .)
    RPAREN          reduce using rule 231 (direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET .)


state 465

    (233) direct_abstract_declarator -> LBRACKET TIMES RBRACKET .

    LBRACKET        reduce using rule 233 (direct_abstract_declarator -> LBRACKET TIMES RBRACKET .)
    LPAREN          reduce using rule 233 (direct_abstract_declarator -> LBRACKET TIMES RBRACKET .)
    COMMA           reduce using rule 233 (direct_abstract_declarator -> LBRACKET TIMES RBRACKET .)
    RPAREN          reduce using rule 233 (direct_abstract_declarator -> LBRACKET TIMES RBRACKET .)


state 466

    (230) direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt . RBRACKET

    RBRACKET        shift and go to state 522


state 467

    (232) direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES . RBRACKET
    (304) unary_operator -> TIMES .

    RBRACKET        shift and go to state 523
    LPAREN          reduce using rule 304 (unary_operator -> TIMES .)
    PLUSPLUS        reduce using rule 304 (unary_operator -> TIMES .)
    MINUSMINUS      reduce using rule 304 (unary_operator -> TIMES .)
    SIZEOF          reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT        reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_ADD    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_SUB    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_FIRST  reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_LAST   reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MIN    reduce using rule 304 (unary_operator -> TIMES .)
    POINTCUT_MAX    reduce using rule 304 (unary_operator -> TIMES .)
    AND             reduce using rule 304 (unary_operator -> TIMES .)
    TIMES           reduce using rule 304 (unary_operator -> TIMES .)
    PLUS            reduce using rule 304 (unary_operator -> TIMES .)
    MINUS           reduce using rule 304 (unary_operator -> TIMES .)
    NOT             reduce using rule 304 (unary_operator -> TIMES .)
    LNOT            reduce using rule 304 (unary_operator -> TIMES .)
    ID              reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_DEC   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_OCT   reduce using rule 304 (unary_operator -> TIMES .)
    INT_CONST_HEX   reduce using rule 304 (unary_operator -> TIMES .)
    FLOAT_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    HEX_FLOAT_CONST reduce using rule 304 (unary_operator -> TIMES .)
    CHAR_CONST      reduce using rule 304 (unary_operator -> TIMES .)
    WCHAR_CONST     reduce using rule 304 (unary_operator -> TIMES .)
    STRING_LITERAL  reduce using rule 304 (unary_operator -> TIMES .)
    WSTRING_LITERAL reduce using rule 304 (unary_operator -> TIMES .)


state 468

    (234) direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt . RPAREN

    RPAREN          shift and go to state 524


state 469

    (224) designator -> PERIOD identifier .

    EQUALS          reduce using rule 224 (designator -> PERIOD identifier .)
    LBRACKET        reduce using rule 224 (designator -> PERIOD identifier .)
    PERIOD          reduce using rule 224 (designator -> PERIOD identifier .)


state 470

    (223) designator -> LBRACKET constant_expression . RBRACKET

    RBRACKET        shift and go to state 525


state 471

    (218) initializer_list -> designation_opt initializer .

    COMMA           reduce using rule 218 (initializer_list -> designation_opt initializer .)
    RBRACE          reduce using rule 218 (initializer_list -> designation_opt initializer .)


state 472

    (217) initializer -> brace_open initializer_list COMMA . brace_close
    (219) initializer_list -> initializer_list COMMA . designation_opt initializer
    (339) brace_close -> . RBRACE
    (11) designation_opt -> . empty
    (12) designation_opt -> . designation
    (340) empty -> .
    (220) designation -> . designator_list EQUALS
    (221) designator_list -> . designator
    (222) designator_list -> . designator_list designator
    (223) designator -> . LBRACKET constant_expression RBRACKET
    (224) designator -> . PERIOD identifier

    RBRACE          shift and go to state 165
    LBRACE          reduce using rule 340 (empty -> .)
    PLUSPLUS        reduce using rule 340 (empty -> .)
    MINUSMINUS      reduce using rule 340 (empty -> .)
    SIZEOF          reduce using rule 340 (empty -> .)
    POINTCUT        reduce using rule 340 (empty -> .)
    POINTCUT_ADD    reduce using rule 340 (empty -> .)
    POINTCUT_SUB    reduce using rule 340 (empty -> .)
    POINTCUT_FIRST  reduce using rule 340 (empty -> .)
    POINTCUT_LAST   reduce using rule 340 (empty -> .)
    POINTCUT_MIN    reduce using rule 340 (empty -> .)
    POINTCUT_MAX    reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    AND             reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    PLUS            reduce using rule 340 (empty -> .)
    MINUS           reduce using rule 340 (empty -> .)
    NOT             reduce using rule 340 (empty -> .)
    LNOT            reduce using rule 340 (empty -> .)
    ID              reduce using rule 340 (empty -> .)
    INT_CONST_DEC   reduce using rule 340 (empty -> .)
    INT_CONST_OCT   reduce using rule 340 (empty -> .)
    INT_CONST_HEX   reduce using rule 340 (empty -> .)
    FLOAT_CONST     reduce using rule 340 (empty -> .)
    HEX_FLOAT_CONST reduce using rule 340 (empty -> .)
    CHAR_CONST      reduce using rule 340 (empty -> .)
    WCHAR_CONST     reduce using rule 340 (empty -> .)
    STRING_LITERAL  reduce using rule 340 (empty -> .)
    WSTRING_LITERAL reduce using rule 340 (empty -> .)
    LBRACKET        shift and go to state 389
    PERIOD          shift and go to state 388

    designation                    shift and go to state 386
    designator                     shift and go to state 387
    designation_opt                shift and go to state 526
    designator_list                shift and go to state 393
    brace_close                    shift and go to state 527
    empty                          shift and go to state 391

state 473

    (216) initializer -> brace_open initializer_list brace_close .

    COMMA           reduce using rule 216 (initializer -> brace_open initializer_list brace_close .)
    SEMI            reduce using rule 216 (initializer -> brace_open initializer_list brace_close .)
    RBRACE          reduce using rule 216 (initializer -> brace_open initializer_list brace_close .)


state 474

    (222) designator_list -> designator_list designator .

    EQUALS          reduce using rule 222 (designator_list -> designator_list designator .)
    LBRACKET        reduce using rule 222 (designator_list -> designator_list designator .)
    PERIOD          reduce using rule 222 (designator_list -> designator_list designator .)


state 475

    (220) designation -> designator_list EQUALS .

    LBRACE          reduce using rule 220 (designation -> designator_list EQUALS .)
    PLUSPLUS        reduce using rule 220 (designation -> designator_list EQUALS .)
    MINUSMINUS      reduce using rule 220 (designation -> designator_list EQUALS .)
    SIZEOF          reduce using rule 220 (designation -> designator_list EQUALS .)
    POINTCUT        reduce using rule 220 (designation -> designator_list EQUALS .)
    POINTCUT_ADD    reduce using rule 220 (designation -> designator_list EQUALS .)
    POINTCUT_SUB    reduce using rule 220 (designation -> designator_list EQUALS .)
    POINTCUT_FIRST  reduce using rule 220 (designation -> designator_list EQUALS .)
    POINTCUT_LAST   reduce using rule 220 (designation -> designator_list EQUALS .)
    POINTCUT_MIN    reduce using rule 220 (designation -> designator_list EQUALS .)
    POINTCUT_MAX    reduce using rule 220 (designation -> designator_list EQUALS .)
    LPAREN          reduce using rule 220 (designation -> designator_list EQUALS .)
    AND             reduce using rule 220 (designation -> designator_list EQUALS .)
    TIMES           reduce using rule 220 (designation -> designator_list EQUALS .)
    PLUS            reduce using rule 220 (designation -> designator_list EQUALS .)
    MINUS           reduce using rule 220 (designation -> designator_list EQUALS .)
    NOT             reduce using rule 220 (designation -> designator_list EQUALS .)
    LNOT            reduce using rule 220 (designation -> designator_list EQUALS .)
    ID              reduce using rule 220 (designation -> designator_list EQUALS .)
    INT_CONST_DEC   reduce using rule 220 (designation -> designator_list EQUALS .)
    INT_CONST_OCT   reduce using rule 220 (designation -> designator_list EQUALS .)
    INT_CONST_HEX   reduce using rule 220 (designation -> designator_list EQUALS .)
    FLOAT_CONST     reduce using rule 220 (designation -> designator_list EQUALS .)
    HEX_FLOAT_CONST reduce using rule 220 (designation -> designator_list EQUALS .)
    CHAR_CONST      reduce using rule 220 (designation -> designator_list EQUALS .)
    WCHAR_CONST     reduce using rule 220 (designation -> designator_list EQUALS .)
    STRING_LITERAL  reduce using rule 220 (designation -> designator_list EQUALS .)
    WSTRING_LITERAL reduce using rule 220 (designation -> designator_list EQUALS .)


state 476

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 528


state 477

    (27) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 529


state 478

    (251) jump_statement -> GOTO ID SEMI .

    ID              reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    CASE            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    DEFAULT         reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    IF              reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    SWITCH          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    WHILE           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    DO              reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    FOR             reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    GOTO            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    BREAK           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    CONTINUE        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    RETURN          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    LBRACE          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    CONST           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    RESTRICT        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    VOLATILE        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    VOID            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    _BOOL           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    CHAR            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    SHORT           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    INT             reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    LONG            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    FLOAT           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    DOUBLE          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    _COMPLEX        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    SIGNED          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    UNSIGNED        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    AUTO            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    REGISTER        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    STATIC          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    EXTERN          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    TYPEDEF         reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    INLINE          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    TYPEID          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    ENUM            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    STRUCT          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    UNION           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    PLUSPLUS        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MINUSMINUS      reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    SIZEOF          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    POINTCUT        reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    POINTCUT_ADD    reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    POINTCUT_SUB    reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    POINTCUT_FIRST  reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    POINTCUT_LAST   reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    POINTCUT_MIN    reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    POINTCUT_MAX    reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    LPAREN          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    AND             reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    TIMES           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    PLUS            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    MINUS           reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    NOT             reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    LNOT            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    INT_CONST_DEC   reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    INT_CONST_OCT   reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    INT_CONST_HEX   reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    FLOAT_CONST     reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    HEX_FLOAT_CONST reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    CHAR_CONST      reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    WCHAR_CONST     reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    STRING_LITERAL  reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    WSTRING_LITERAL reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    SEMI            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    RBRACE          reduce using rule 251 (jump_statement -> GOTO ID SEMI .)
    ELSE            reduce using rule 251 (jump_statement -> GOTO ID SEMI .)


state 479

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID . COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 530


state 480

    (31) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 531


state 481

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID . COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 532


state 482

    (29) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 533


state 483

    (43) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 534


state 484

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 535


state 485

    (249) iteration_statement -> FOR LPAREN expression_opt . SEMI expression_opt SEMI expression_opt RPAREN statement

    SEMI            shift and go to state 536


state 486

    (250) iteration_statement -> FOR LPAREN declaration . expression_opt SEMI expression_opt RPAREN statement
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    expression_opt                 shift and go to state 537
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    empty                          shift and go to state 408
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 291

state 487

    (45) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 538


state 488

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID . COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 539


state 489

    (243) labeled_statement -> DEFAULT COLON statement .

    ID              reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    CASE            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    DEFAULT         reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    IF              reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    SWITCH          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    WHILE           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    DO              reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    FOR             reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    GOTO            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    BREAK           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    CONTINUE        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    RETURN          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    LBRACE          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    CONST           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    RESTRICT        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    VOLATILE        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    VOID            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    _BOOL           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    CHAR            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    SHORT           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    INT             reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    LONG            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    FLOAT           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    DOUBLE          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    _COMPLEX        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    SIGNED          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    UNSIGNED        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    AUTO            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    REGISTER        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    STATIC          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    EXTERN          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    TYPEDEF         reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    INLINE          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    TYPEID          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    ENUM            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    STRUCT          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    UNION           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    PLUSPLUS        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MINUSMINUS      reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    SIZEOF          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    POINTCUT        reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    POINTCUT_ADD    reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    POINTCUT_SUB    reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    POINTCUT_FIRST  reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    POINTCUT_LAST   reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    POINTCUT_MIN    reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    POINTCUT_MAX    reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    LPAREN          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    AND             reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    TIMES           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    PLUS            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    MINUS           reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    NOT             reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    LNOT            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    INT_CONST_DEC   reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    INT_CONST_OCT   reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    INT_CONST_HEX   reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    FLOAT_CONST     reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    HEX_FLOAT_CONST reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    CHAR_CONST      reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    WCHAR_CONST     reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    STRING_LITERAL  reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    WSTRING_LITERAL reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    SEMI            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    RBRACE          reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)
    ELSE            reduce using rule 243 (labeled_statement -> DEFAULT COLON statement .)


state 490

    (33) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 540


state 491

    (247) iteration_statement -> WHILE LPAREN expression . RPAREN statement
    (258) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 541
    COMMA           shift and go to state 342


state 492

    (254) jump_statement -> RETURN expression SEMI .

    ID              reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    CASE            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    IF              reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    SWITCH          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    DO              reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    FOR             reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    GOTO            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    BREAK           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    CONTINUE        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    LBRACE          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    CONST           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    RESTRICT        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    VOLATILE        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    VOID            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    _BOOL           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    CHAR            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    SHORT           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    INT             reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    LONG            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    FLOAT           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    DOUBLE          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    _COMPLEX        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    SIGNED          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    UNSIGNED        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    AUTO            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    REGISTER        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    STATIC          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    EXTERN          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    TYPEDEF         reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    INLINE          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    TYPEID          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    ENUM            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    STRUCT          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    UNION           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    PLUSPLUS        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MINUSMINUS      reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    SIZEOF          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    POINTCUT        reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    POINTCUT_ADD    reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    POINTCUT_SUB    reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    POINTCUT_FIRST  reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    POINTCUT_LAST   reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    POINTCUT_MIN    reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    POINTCUT_MAX    reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    AND             reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    TIMES           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    PLUS            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    NOT             reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    LNOT            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    INT_CONST_DEC   reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    INT_CONST_OCT   reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    INT_CONST_HEX   reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    FLOAT_CONST     reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    HEX_FLOAT_CONST reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    CHAR_CONST      reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    WCHAR_CONST     reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    STRING_LITERAL  reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    WSTRING_LITERAL reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    SEMI            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    RBRACE          reduce using rule 254 (jump_statement -> RETURN expression SEMI .)
    ELSE            reduce using rule 254 (jump_statement -> RETURN expression SEMI .)


state 493

    (242) labeled_statement -> CASE constant_expression COLON . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 542
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 494

    (47) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 543


state 495

    (246) selection_statement -> SWITCH LPAREN expression . RPAREN statement
    (258) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 544
    COMMA           shift and go to state 342


state 496

    (37) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 545


state 497

    (39) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 546


state 498

    (248) iteration_statement -> DO statement WHILE . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 547


state 499

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID . COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 548


state 500

    (35) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 549


state 501

    (41) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 550


state 502

    (241) labeled_statement -> ID COLON statement .

    ID              reduce using rule 241 (labeled_statement -> ID COLON statement .)
    CASE            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    DEFAULT         reduce using rule 241 (labeled_statement -> ID COLON statement .)
    IF              reduce using rule 241 (labeled_statement -> ID COLON statement .)
    SWITCH          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    WHILE           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    DO              reduce using rule 241 (labeled_statement -> ID COLON statement .)
    FOR             reduce using rule 241 (labeled_statement -> ID COLON statement .)
    GOTO            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    BREAK           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    CONTINUE        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    RETURN          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    LBRACE          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    CONST           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    RESTRICT        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    VOLATILE        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    VOID            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    _BOOL           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    CHAR            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    SHORT           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    INT             reduce using rule 241 (labeled_statement -> ID COLON statement .)
    LONG            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    FLOAT           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    DOUBLE          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    _COMPLEX        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    SIGNED          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    UNSIGNED        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    AUTO            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    REGISTER        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    STATIC          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    EXTERN          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    TYPEDEF         reduce using rule 241 (labeled_statement -> ID COLON statement .)
    INLINE          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    TYPEID          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    ENUM            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    STRUCT          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    UNION           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    PLUSPLUS        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MINUSMINUS      reduce using rule 241 (labeled_statement -> ID COLON statement .)
    SIZEOF          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    POINTCUT        reduce using rule 241 (labeled_statement -> ID COLON statement .)
    POINTCUT_ADD    reduce using rule 241 (labeled_statement -> ID COLON statement .)
    POINTCUT_SUB    reduce using rule 241 (labeled_statement -> ID COLON statement .)
    POINTCUT_FIRST  reduce using rule 241 (labeled_statement -> ID COLON statement .)
    POINTCUT_LAST   reduce using rule 241 (labeled_statement -> ID COLON statement .)
    POINTCUT_MIN    reduce using rule 241 (labeled_statement -> ID COLON statement .)
    POINTCUT_MAX    reduce using rule 241 (labeled_statement -> ID COLON statement .)
    LPAREN          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    AND             reduce using rule 241 (labeled_statement -> ID COLON statement .)
    TIMES           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    PLUS            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    MINUS           reduce using rule 241 (labeled_statement -> ID COLON statement .)
    NOT             reduce using rule 241 (labeled_statement -> ID COLON statement .)
    LNOT            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    INT_CONST_DEC   reduce using rule 241 (labeled_statement -> ID COLON statement .)
    INT_CONST_OCT   reduce using rule 241 (labeled_statement -> ID COLON statement .)
    INT_CONST_HEX   reduce using rule 241 (labeled_statement -> ID COLON statement .)
    FLOAT_CONST     reduce using rule 241 (labeled_statement -> ID COLON statement .)
    HEX_FLOAT_CONST reduce using rule 241 (labeled_statement -> ID COLON statement .)
    CHAR_CONST      reduce using rule 241 (labeled_statement -> ID COLON statement .)
    WCHAR_CONST     reduce using rule 241 (labeled_statement -> ID COLON statement .)
    STRING_LITERAL  reduce using rule 241 (labeled_statement -> ID COLON statement .)
    WSTRING_LITERAL reduce using rule 241 (labeled_statement -> ID COLON statement .)
    SEMI            reduce using rule 241 (labeled_statement -> ID COLON statement .)
    RBRACE          reduce using rule 241 (labeled_statement -> ID COLON statement .)
    ELSE            reduce using rule 241 (labeled_statement -> ID COLON statement .)


state 503

    (244) selection_statement -> IF LPAREN expression . RPAREN statement
    (245) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (258) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 551
    COMMA           shift and go to state 342


state 504

    (49) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID . COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 552


state 505

    (104) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 553
    COMMA           shift and go to state 440


state 506

    (105) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID . SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID . RPAREN

    SEMI            shift and go to state 555
    RPAREN          shift and go to state 554


state 507

    (88) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 556
    COMMA           shift and go to state 440


state 508

    (89) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID . SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID . RPAREN

    SEMI            shift and go to state 558
    RPAREN          shift and go to state 557


state 509

    (325) argument_expression_list -> argument_expression_list COMMA assignment_expression .

    RPAREN          reduce using rule 325 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)
    COMMA           reduce using rule 325 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)


state 510

    (75) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 559
    COMMA           shift and go to state 440


state 511

    (76) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID . SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID . RPAREN

    SEMI            shift and go to state 561
    RPAREN          shift and go to state 560


state 512

    (317) postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list . brace_close
    (318) postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list . COMMA brace_close
    (219) initializer_list -> initializer_list . COMMA designation_opt initializer
    (339) brace_close -> . RBRACE

    COMMA           shift and go to state 562
    RBRACE          shift and go to state 165

    brace_close                    shift and go to state 563

state 513

    (69) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 564
    COMMA           shift and go to state 440


state 514

    (70) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID . SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID . RPAREN

    SEMI            shift and go to state 566
    RPAREN          shift and go to state 565


state 515

    (93) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 567
    COMMA           shift and go to state 440


state 516

    (94) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID . SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID . RPAREN

    SEMI            shift and go to state 569
    RPAREN          shift and go to state 568


state 517

    (275) conditional_expression -> binary_expression CONDOP expression COLON conditional_expression .

    RPAREN          reduce using rule 275 (conditional_expression -> binary_expression CONDOP expression COLON conditional_expression .)
    COMMA           reduce using rule 275 (conditional_expression -> binary_expression CONDOP expression COLON conditional_expression .)
    RBRACE          reduce using rule 275 (conditional_expression -> binary_expression CONDOP expression COLON conditional_expression .)
    SEMI            reduce using rule 275 (conditional_expression -> binary_expression CONDOP expression COLON conditional_expression .)
    RBRACKET        reduce using rule 275 (conditional_expression -> binary_expression CONDOP expression COLON conditional_expression .)
    COLON           reduce using rule 275 (conditional_expression -> binary_expression CONDOP expression COLON conditional_expression .)


state 518

    (63) pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 570
    COMMA           shift and go to state 440


state 519

    (64) pointcut_keyword -> POINTCUT LPAREN ID COMMA ID . SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> POINTCUT LPAREN ID COMMA ID . RPAREN

    SEMI            shift and go to state 572
    RPAREN          shift and go to state 571


state 520

    (81) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 573
    COMMA           shift and go to state 440


state 521

    (82) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID . SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID . RPAREN

    SEMI            shift and go to state 575
    RPAREN          shift and go to state 574


state 522

    (230) direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET .

    LBRACKET        reduce using rule 230 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET .)
    LPAREN          reduce using rule 230 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET .)
    COMMA           reduce using rule 230 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET .)
    RPAREN          reduce using rule 230 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET .)


state 523

    (232) direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET .

    LBRACKET        reduce using rule 232 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET .)
    LPAREN          reduce using rule 232 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET .)
    COMMA           reduce using rule 232 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET .)
    RPAREN          reduce using rule 232 (direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET .)


state 524

    (234) direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .

    LBRACKET        reduce using rule 234 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)
    LPAREN          reduce using rule 234 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)
    COMMA           reduce using rule 234 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)
    RPAREN          reduce using rule 234 (direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN .)


state 525

    (223) designator -> LBRACKET constant_expression RBRACKET .

    EQUALS          reduce using rule 223 (designator -> LBRACKET constant_expression RBRACKET .)
    LBRACKET        reduce using rule 223 (designator -> LBRACKET constant_expression RBRACKET .)
    PERIOD          reduce using rule 223 (designator -> LBRACKET constant_expression RBRACKET .)


state 526

    (219) initializer_list -> initializer_list COMMA designation_opt . initializer
    (215) initializer -> . assignment_expression
    (216) initializer -> . brace_open initializer_list brace_close
    (217) initializer -> . brace_open initializer_list COMMA brace_close
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (338) brace_open -> . LBRACE
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    LBRACE          shift and go to state 55
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    initializer                    shift and go to state 576
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    brace_open                     shift and go to state 256
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 257
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116

state 527

    (217) initializer -> brace_open initializer_list COMMA brace_close .

    COMMA           reduce using rule 217 (initializer -> brace_open initializer_list COMMA brace_close .)
    SEMI            reduce using rule 217 (initializer -> brace_open initializer_list COMMA brace_close .)
    RBRACE          reduce using rule 217 (initializer -> brace_open initializer_list COMMA brace_close .)


state 528

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 577


state 529

    (27) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 578


state 530

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA . ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 579


state 531

    (31) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 580


state 532

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA . ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 581


state 533

    (29) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 582


state 534

    (43) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 583


state 535

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 584


state 536

    (249) iteration_statement -> FOR LPAREN expression_opt SEMI . expression_opt SEMI expression_opt RPAREN statement
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    expression_opt                 shift and go to state 585
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    empty                          shift and go to state 408
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 291

state 537

    (250) iteration_statement -> FOR LPAREN declaration expression_opt . SEMI expression_opt RPAREN statement

    SEMI            shift and go to state 586


state 538

    (45) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 587


state 539

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA . ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 588


state 540

    (33) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 589


state 541

    (247) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 590
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 542

    (242) labeled_statement -> CASE constant_expression COLON statement .

    ID              reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    CASE            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    DEFAULT         reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    IF              reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    SWITCH          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    WHILE           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    DO              reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    FOR             reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    GOTO            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    BREAK           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    CONTINUE        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    RETURN          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    LBRACE          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    CONST           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    RESTRICT        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    VOLATILE        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    VOID            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    _BOOL           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    CHAR            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    SHORT           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    INT             reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    LONG            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    FLOAT           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    DOUBLE          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    _COMPLEX        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    SIGNED          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    UNSIGNED        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    AUTO            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    REGISTER        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    STATIC          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    EXTERN          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    TYPEDEF         reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    INLINE          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    TYPEID          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    ENUM            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    STRUCT          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    UNION           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    PLUSPLUS        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MINUSMINUS      reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    SIZEOF          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    POINTCUT        reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    POINTCUT_ADD    reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    POINTCUT_SUB    reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    POINTCUT_FIRST  reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    POINTCUT_LAST   reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    POINTCUT_MIN    reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    POINTCUT_MAX    reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    LPAREN          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    AND             reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    TIMES           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    PLUS            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    MINUS           reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    NOT             reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    LNOT            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    INT_CONST_DEC   reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    INT_CONST_OCT   reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    INT_CONST_HEX   reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    FLOAT_CONST     reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    HEX_FLOAT_CONST reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    CHAR_CONST      reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    WCHAR_CONST     reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    STRING_LITERAL  reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    WSTRING_LITERAL reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    SEMI            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    RBRACE          reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)
    ELSE            reduce using rule 242 (labeled_statement -> CASE constant_expression COLON statement .)


state 543

    (47) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 591


state 544

    (246) selection_statement -> SWITCH LPAREN expression RPAREN . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 592
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 545

    (37) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 593


state 546

    (39) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 594


state 547

    (248) iteration_statement -> DO statement WHILE LPAREN . expression RPAREN SEMI
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 595

state 548

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA . ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 596


state 549

    (35) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 597


state 550

    (41) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 598


state 551

    (244) selection_statement -> IF LPAREN expression RPAREN . statement
    (245) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 599
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 552

    (49) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA . ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 600


state 553

    (104) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .

    TIMES           reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    EQUALS          reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 104 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN .)


state 554

    (106) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .

    TIMES           reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    DIVIDE          reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    MOD             reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    PLUS            reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    MINUS           reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    RSHIFT          reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    LSHIFT          reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    LT              reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    LE              reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    GE              reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    GT              reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    EQ              reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    NE              reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    AND             reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    OR              reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    XOR             reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    LAND            reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    LOR             reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    CONDOP          reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    RBRACKET        reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    RPAREN          reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    COMMA           reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    SEMI            reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    COLON           reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    EQUALS          reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    XOREQUAL        reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    TIMESEQUAL      reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    DIVEQUAL        reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    MODEQUAL        reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    PLUSEQUAL       reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    MINUSEQUAL      reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    ANDEQUAL        reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)
    OREQUAL         reduce using rule 106 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID RPAREN .)


state 555

    (105) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 601
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 556

    (88) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 88 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN .)


state 557

    (90) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .

    EQUALS          reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    XOREQUAL        reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    TIMESEQUAL      reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    DIVEQUAL        reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    MODEQUAL        reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    PLUSEQUAL       reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    MINUSEQUAL      reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    ANDEQUAL        reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    OREQUAL         reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    CONDOP          reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    TIMES           reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    DIVIDE          reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    MOD             reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    PLUS            reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    MINUS           reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    RSHIFT          reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    LSHIFT          reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    LT              reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    LE              reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    GE              reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    GT              reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    EQ              reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    NE              reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    AND             reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    OR              reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    XOR             reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    LAND            reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    LOR             reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    RPAREN          reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    COMMA           reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    SEMI            reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    RBRACKET        reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    COLON           reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 90 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID RPAREN .)


state 558

    (89) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 602
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 559

    (75) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 75 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN .)


state 560

    (77) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .

    EQUALS          reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    XOREQUAL        reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    TIMESEQUAL      reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    DIVEQUAL        reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    MODEQUAL        reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    PLUSEQUAL       reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    MINUSEQUAL      reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    ANDEQUAL        reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    OREQUAL         reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    CONDOP          reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    TIMES           reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    DIVIDE          reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    MOD             reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    PLUS            reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    MINUS           reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    RSHIFT          reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    LSHIFT          reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    LT              reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    LE              reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    GE              reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    GT              reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    EQ              reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    NE              reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    AND             reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    OR              reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    XOR             reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    LAND            reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    LOR             reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    RPAREN          reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    COMMA           reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    RBRACKET        reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    SEMI            reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    COLON           reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 77 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID RPAREN .)


state 561

    (76) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 603
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 562

    (318) postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA . brace_close
    (219) initializer_list -> initializer_list COMMA . designation_opt initializer
    (339) brace_close -> . RBRACE
    (11) designation_opt -> . empty
    (12) designation_opt -> . designation
    (340) empty -> .
    (220) designation -> . designator_list EQUALS
    (221) designator_list -> . designator
    (222) designator_list -> . designator_list designator
    (223) designator -> . LBRACKET constant_expression RBRACKET
    (224) designator -> . PERIOD identifier

    RBRACE          shift and go to state 165
    LBRACE          reduce using rule 340 (empty -> .)
    PLUSPLUS        reduce using rule 340 (empty -> .)
    MINUSMINUS      reduce using rule 340 (empty -> .)
    SIZEOF          reduce using rule 340 (empty -> .)
    POINTCUT        reduce using rule 340 (empty -> .)
    POINTCUT_ADD    reduce using rule 340 (empty -> .)
    POINTCUT_SUB    reduce using rule 340 (empty -> .)
    POINTCUT_FIRST  reduce using rule 340 (empty -> .)
    POINTCUT_LAST   reduce using rule 340 (empty -> .)
    POINTCUT_MIN    reduce using rule 340 (empty -> .)
    POINTCUT_MAX    reduce using rule 340 (empty -> .)
    LPAREN          reduce using rule 340 (empty -> .)
    AND             reduce using rule 340 (empty -> .)
    TIMES           reduce using rule 340 (empty -> .)
    PLUS            reduce using rule 340 (empty -> .)
    MINUS           reduce using rule 340 (empty -> .)
    NOT             reduce using rule 340 (empty -> .)
    LNOT            reduce using rule 340 (empty -> .)
    ID              reduce using rule 340 (empty -> .)
    INT_CONST_DEC   reduce using rule 340 (empty -> .)
    INT_CONST_OCT   reduce using rule 340 (empty -> .)
    INT_CONST_HEX   reduce using rule 340 (empty -> .)
    FLOAT_CONST     reduce using rule 340 (empty -> .)
    HEX_FLOAT_CONST reduce using rule 340 (empty -> .)
    CHAR_CONST      reduce using rule 340 (empty -> .)
    WCHAR_CONST     reduce using rule 340 (empty -> .)
    STRING_LITERAL  reduce using rule 340 (empty -> .)
    WSTRING_LITERAL reduce using rule 340 (empty -> .)
    LBRACKET        shift and go to state 389
    PERIOD          shift and go to state 388

    designation                    shift and go to state 386
    designator                     shift and go to state 387
    designation_opt                shift and go to state 526
    empty                          shift and go to state 391
    designator_list                shift and go to state 393
    brace_close                    shift and go to state 604

state 563

    (317) postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .

    LBRACKET        reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    LPAREN          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    PERIOD          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    ARROW           reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    PLUSPLUS        reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    MINUSMINUS      reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    EQUALS          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    XOREQUAL        reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    TIMESEQUAL      reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    DIVEQUAL        reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    MODEQUAL        reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    PLUSEQUAL       reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    MINUSEQUAL      reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    LSHIFTEQUAL     reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    RSHIFTEQUAL     reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    ANDEQUAL        reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    OREQUAL         reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    CONDOP          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    TIMES           reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    DIVIDE          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    MOD             reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    PLUS            reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    MINUS           reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    RSHIFT          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    LSHIFT          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    LT              reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    LE              reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    GE              reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    GT              reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    EQ              reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    NE              reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    AND             reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    OR              reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    XOR             reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    LAND            reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    LOR             reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    RBRACKET        reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    COMMA           reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    RBRACE          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    RPAREN          reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    SEMI            reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)
    COLON           reduce using rule 317 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close .)


state 564

    (69) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 69 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN .)


state 565

    (71) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .

    EQUALS          reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    XOREQUAL        reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    TIMESEQUAL      reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    DIVEQUAL        reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    MODEQUAL        reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    PLUSEQUAL       reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    MINUSEQUAL      reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    ANDEQUAL        reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    OREQUAL         reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    CONDOP          reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    TIMES           reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    DIVIDE          reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    MOD             reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    PLUS            reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    MINUS           reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    RSHIFT          reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    LSHIFT          reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    LT              reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    LE              reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    GE              reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    GT              reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    EQ              reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    NE              reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    AND             reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    OR              reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    XOR             reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    LAND            reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    LOR             reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    RPAREN          reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    COMMA           reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    SEMI            reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    RBRACKET        reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    COLON           reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 71 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID RPAREN .)


state 566

    (70) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 605
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 567

    (93) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 93 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN .)


state 568

    (95) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .

    EQUALS          reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    XOREQUAL        reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    TIMESEQUAL      reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    DIVEQUAL        reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    MODEQUAL        reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    PLUSEQUAL       reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    MINUSEQUAL      reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    ANDEQUAL        reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    OREQUAL         reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    CONDOP          reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    TIMES           reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    DIVIDE          reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    MOD             reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    PLUS            reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    MINUS           reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    RSHIFT          reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    LSHIFT          reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    LT              reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    LE              reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    GE              reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    GT              reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    EQ              reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    NE              reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    AND             reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    OR              reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    XOR             reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    LAND            reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    LOR             reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    COMMA           reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    SEMI            reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    RBRACKET        reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    RPAREN          reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    COLON           reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 95 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID RPAREN .)


state 569

    (94) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 606
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 570

    (63) pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .

    TIMES           reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    EQUALS          reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 63 (pointcut_keyword -> POINTCUT LPAREN ID SEMI argument_expression_list RPAREN .)


state 571

    (65) pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .

    TIMES           reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    DIVIDE          reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    MOD             reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    PLUS            reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    MINUS           reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    RSHIFT          reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    LSHIFT          reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    LT              reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    LE              reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    GE              reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    GT              reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    EQ              reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    NE              reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    AND             reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    OR              reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    XOR             reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    LAND            reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    LOR             reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    CONDOP          reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    RBRACKET        reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    RPAREN          reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    COMMA           reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    SEMI            reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    COLON           reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    EQUALS          reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    XOREQUAL        reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    TIMESEQUAL      reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    DIVEQUAL        reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    MODEQUAL        reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    PLUSEQUAL       reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    MINUSEQUAL      reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    ANDEQUAL        reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)
    OREQUAL         reduce using rule 65 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID RPAREN .)


state 572

    (64) pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 607
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 573

    (81) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 81 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN .)


state 574

    (83) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .

    EQUALS          reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    XOREQUAL        reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    TIMESEQUAL      reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    DIVEQUAL        reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    MODEQUAL        reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    PLUSEQUAL       reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    MINUSEQUAL      reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    LSHIFTEQUAL     reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    RSHIFTEQUAL     reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    ANDEQUAL        reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    OREQUAL         reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    CONDOP          reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    TIMES           reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    DIVIDE          reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    MOD             reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    PLUS            reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    MINUS           reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    RSHIFT          reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    LSHIFT          reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    LT              reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    LE              reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    GE              reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    GT              reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    EQ              reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    NE              reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    AND             reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    OR              reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    XOR             reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    LAND            reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    LOR             reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    COMMA           reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    RPAREN          reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    SEMI            reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    RBRACKET        reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    COLON           reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)
    RBRACE          reduce using rule 83 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID RPAREN .)


state 575

    (82) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI . argument_expression_list RPAREN
    (324) argument_expression_list -> . assignment_expression
    (325) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    unary_operator                 shift and go to state 110
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    assignment_expression          shift and go to state 336
    pointcut_max_keyword           shift and go to state 118
    conditional_expression         shift and go to state 137
    argument_expression_list       shift and go to state 608
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    identifier                     shift and go to state 116

state 576

    (219) initializer_list -> initializer_list COMMA designation_opt initializer .

    COMMA           reduce using rule 219 (initializer_list -> initializer_list COMMA designation_opt initializer .)
    RBRACE          reduce using rule 219 (initializer_list -> initializer_list COMMA designation_opt initializer .)


state 577

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 609


state 578

    (27) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 610
    COMMA           shift and go to state 611


state 579

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID . COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 612


state 580

    (31) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 613
    COMMA           shift and go to state 614


state 581

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID . COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 615


state 582

    (29) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 616
    COMMA           shift and go to state 617


state 583

    (43) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 618
    COMMA           shift and go to state 619


state 584

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 620


state 585

    (249) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt . SEMI expression_opt RPAREN statement

    SEMI            shift and go to state 621


state 586

    (250) iteration_statement -> FOR LPAREN declaration expression_opt SEMI . expression_opt RPAREN statement
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    RPAREN          reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    pointcut_min_keyword           shift and go to state 105
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    expression_opt                 shift and go to state 622
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    empty                          shift and go to state 408
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 291

state 587

    (45) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 623
    COMMA           shift and go to state 624


state 588

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID . COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 625


state 589

    (33) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 626
    COMMA           shift and go to state 627


state 590

    (247) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    ID              reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    GOTO            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CONST           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RESTRICT        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    VOLATILE        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    VOID            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    _BOOL           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SHORT           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT             reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LONG            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    DOUBLE          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    _COMPLEX        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SIGNED          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    UNSIGNED        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    AUTO            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    REGISTER        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    STATIC          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    EXTERN          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    TYPEDEF         reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INLINE          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    TYPEID          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    STRUCT          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    UNION           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SIZEOF          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    POINTCUT        reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    POINTCUT_ADD    reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    POINTCUT_SUB    reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    POINTCUT_FIRST  reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    POINTCUT_LAST   reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    POINTCUT_MIN    reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    POINTCUT_MAX    reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    AND             reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT_CONST_DEC   reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT_CONST_OCT   reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT_CONST_HEX   reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    HEX_FLOAT_CONST reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    CHAR_CONST      reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WCHAR_CONST     reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WSTRING_LITERAL reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 247 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 591

    (47) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 628
    COMMA           shift and go to state 629


state 592

    (246) selection_statement -> SWITCH LPAREN expression RPAREN statement .

    ID              reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CASE            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    IF              reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    DO              reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    FOR             reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    GOTO            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CONST           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    RESTRICT        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    VOLATILE        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    VOID            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    _BOOL           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SHORT           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    INT             reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    LONG            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    DOUBLE          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    _COMPLEX        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SIGNED          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    UNSIGNED        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    AUTO            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    REGISTER        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    STATIC          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    EXTERN          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    TYPEDEF         reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    INLINE          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    TYPEID          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    STRUCT          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    UNION           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SIZEOF          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    POINTCUT        reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    POINTCUT_ADD    reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    POINTCUT_SUB    reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    POINTCUT_FIRST  reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    POINTCUT_LAST   reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    POINTCUT_MIN    reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    POINTCUT_MAX    reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    AND             reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    NOT             reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    INT_CONST_DEC   reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    INT_CONST_OCT   reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    INT_CONST_HEX   reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    HEX_FLOAT_CONST reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    CHAR_CONST      reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    WCHAR_CONST     reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    WSTRING_LITERAL reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 246 (selection_statement -> SWITCH LPAREN expression RPAREN statement .)


state 593

    (37) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 630
    COMMA           shift and go to state 631


state 594

    (39) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 632
    COMMA           shift and go to state 633


state 595

    (248) iteration_statement -> DO statement WHILE LPAREN expression . RPAREN SEMI
    (258) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 634
    COMMA           shift and go to state 342


state 596

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID . COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID COMMA ID RPAREN SEMI

    COMMA           shift and go to state 635


state 597

    (35) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 636
    COMMA           shift and go to state 637


state 598

    (41) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 638
    COMMA           shift and go to state 639


state 599

    (244) selection_statement -> IF LPAREN expression RPAREN statement .
    (245) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    ID              reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    GOTO            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CONTINUE        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CONST           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RESTRICT        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    VOLATILE        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    VOID            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    _BOOL           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CHAR            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SHORT           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT             reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LONG            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    DOUBLE          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    _COMPLEX        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SIGNED          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    UNSIGNED        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    AUTO            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    REGISTER        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    STATIC          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    EXTERN          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    TYPEDEF         reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INLINE          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    TYPEID          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ENUM            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    STRUCT          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    UNION           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SIZEOF          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    POINTCUT        reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    POINTCUT_ADD    reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    POINTCUT_SUB    reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    POINTCUT_FIRST  reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    POINTCUT_LAST   reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    POINTCUT_MIN    reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    POINTCUT_MAX    reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    AND             reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LNOT            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT_CONST_DEC   reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT_CONST_OCT   reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT_CONST_HEX   reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    HEX_FLOAT_CONST reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    CHAR_CONST      reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WCHAR_CONST     reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    STRING_LITERAL  reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WSTRING_LITERAL reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 640

  ! ELSE            [ reduce using rule 244 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 600

    (49) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID . RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 641
    COMMA           shift and go to state 642


state 601

    (105) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 643
    COMMA           shift and go to state 440


state 602

    (89) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 644
    COMMA           shift and go to state 440


state 603

    (76) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 645
    COMMA           shift and go to state 440


state 604

    (318) postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .

    LBRACKET        reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    LPAREN          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    PERIOD          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    ARROW           reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    PLUSPLUS        reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    MINUSMINUS      reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    EQUALS          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    XOREQUAL        reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    TIMESEQUAL      reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    DIVEQUAL        reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    MODEQUAL        reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    PLUSEQUAL       reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    MINUSEQUAL      reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    LSHIFTEQUAL     reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    RSHIFTEQUAL     reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    ANDEQUAL        reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    OREQUAL         reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    CONDOP          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    TIMES           reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    DIVIDE          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    MOD             reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    PLUS            reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    MINUS           reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    RSHIFT          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    LSHIFT          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    LT              reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    LE              reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    GE              reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    GT              reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    EQ              reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    NE              reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    AND             reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    OR              reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    XOR             reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    LAND            reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    LOR             reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    RBRACKET        reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    COMMA           reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    RBRACE          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    RPAREN          reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    SEMI            reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)
    COLON           reduce using rule 318 (postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close .)


state 605

    (70) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 646
    COMMA           shift and go to state 440


state 606

    (94) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 647
    COMMA           shift and go to state 440


state 607

    (64) pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 648
    COMMA           shift and go to state 440


state 608

    (82) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list . RPAREN
    (325) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    RPAREN          shift and go to state 649
    COMMA           shift and go to state 440


state 609

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 650


state 610

    (27) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 651


state 611

    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 652


state 612

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA . ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 653


state 613

    (31) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 654


state 614

    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 655


state 615

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA . ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 656


state 616

    (29) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 657


state 617

    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 658


state 618

    (43) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 659


state 619

    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 660


state 620

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 661


state 621

    (249) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI . expression_opt RPAREN statement
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    RPAREN          reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    ID              shift and go to state 124
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    constant                       shift and go to state 100
    unary_expression               shift and go to state 93
    unified_wstring_literal        shift and go to state 135
    pointcut_first_keyword         shift and go to state 103
    pointcut_add_keyword           shift and go to state 104
    unified_string_literal         shift and go to state 106
    postfix_expression             shift and go to state 107
    cast_expression                shift and go to state 111
    pointcut_sub_keyword           shift and go to state 112
    unary_operator                 shift and go to state 110
    assignment_expression          shift and go to state 210
    pointcut_max_keyword           shift and go to state 118
    expression_opt                 shift and go to state 662
    primary_expression             shift and go to state 121
    binary_expression              shift and go to state 130
    pointcut_keyword               shift and go to state 132
    empty                          shift and go to state 408
    conditional_expression         shift and go to state 137
    identifier                     shift and go to state 116
    expression                     shift and go to state 291

state 622

    (250) iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt . RPAREN statement

    RPAREN          shift and go to state 663


state 623

    (45) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 664


state 624

    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 665


state 625

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA . ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 666


state 626

    (33) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 667


state 627

    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 668


state 628

    (47) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 669


state 629

    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 670


state 630

    (37) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 671


state 631

    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 672


state 632

    (39) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 673


state 633

    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 674


state 634

    (248) iteration_statement -> DO statement WHILE LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 675


state 635

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA . ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID COMMA ID RPAREN SEMI

    ID              shift and go to state 676


state 636

    (35) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 677


state 637

    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 678


state 638

    (41) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 679


state 639

    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 680


state 640

    (245) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 681
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 641

    (49) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 682


state 642

    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 683


state 643

    (105) pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .

    TIMES           reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQUALS          reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 105 (pointcut_max_keyword -> POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)


state 644

    (89) pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 89 (pointcut_last_keyword -> POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)


state 645

    (76) pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 76 (pointcut_sub_keyword -> POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)


state 646

    (70) pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 70 (pointcut_add_keyword -> POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)


state 647

    (94) pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 94 (pointcut_min_keyword -> POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)


state 648

    (64) pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .

    TIMES           reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQUALS          reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 64 (pointcut_keyword -> POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)


state 649

    (82) pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .

    EQUALS          reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOREQUAL        reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMESEQUAL      reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVEQUAL        reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MODEQUAL        reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUSEQUAL       reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUSEQUAL      reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFTEQUAL     reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFTEQUAL     reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    ANDEQUAL        reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OREQUAL         reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    CONDOP          reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    TIMES           reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    DIVIDE          reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MOD             reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    PLUS            reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    MINUS           reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RSHIFT          reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LSHIFT          reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LT              reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LE              reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GE              reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    GT              reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    EQ              reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    NE              reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    AND             reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    OR              reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    XOR             reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LAND            reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    LOR             reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COMMA           reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RPAREN          reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    SEMI            reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACKET        reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    COLON           reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)
    RBRACE          reduce using rule 82 (pointcut_first_keyword -> POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN .)


state 650

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 684
    COMMA           shift and go to state 685


state 651

    (27) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 27 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 652

    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 686


state 653

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID . RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 687
    COMMA           shift and go to state 688


state 654

    (31) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 31 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 655

    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 689


state 656

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID . RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 690
    COMMA           shift and go to state 691


state 657

    (29) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 29 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 658

    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 692


state 659

    (43) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 43 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 660

    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 693


state 661

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 694
    COMMA           shift and go to state 695


state 662

    (249) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt . RPAREN statement

    RPAREN          shift and go to state 696


state 663

    (250) iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 697
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 664

    (45) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 45 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 665

    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 698


state 666

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID . RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 700
    COMMA           shift and go to state 699


state 667

    (33) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 33 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 668

    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 701


state 669

    (47) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 47 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 670

    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 702


state 671

    (37) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 37 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 672

    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 703


state 673

    (39) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 39 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 674

    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 704


state 675

    (248) iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .

    ID              reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CASE            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DEFAULT         reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SWITCH          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DO              reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    GOTO            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CONTINUE        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LBRACE          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CONST           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    RESTRICT        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    VOLATILE        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    VOID            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    _BOOL           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CHAR            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SHORT           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    INT             reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LONG            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FLOAT           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    DOUBLE          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    _COMPLEX        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SIGNED          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    UNSIGNED        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    AUTO            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    REGISTER        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    STATIC          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    EXTERN          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    TYPEDEF         reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    INLINE          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    TYPEID          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ENUM            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    STRUCT          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    UNION           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SIZEOF          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    POINTCUT        reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    AND             reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    TIMES           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    LNOT            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    CHAR_CONST      reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 248 (iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI .)


state 676

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID . RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID COMMA ID RPAREN SEMI

    RPAREN          shift and go to state 705
    COMMA           shift and go to state 706


state 677

    (35) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 35 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 678

    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 707


state 679

    (41) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 41 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 680

    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 708


state 681

    (245) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    ID              reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CASE            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SWITCH          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DO              reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    GOTO            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BREAK           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONTINUE        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CONST           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RESTRICT        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    VOLATILE        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    VOID            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    _BOOL           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CHAR            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SHORT           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT             reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LONG            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    DOUBLE          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    _COMPLEX        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SIGNED          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    UNSIGNED        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    AUTO            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    REGISTER        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STATIC          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    EXTERN          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TYPEDEF         reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INLINE          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TYPEID          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ENUM            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRUCT          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    UNION           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SIZEOF          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    POINTCUT        reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    POINTCUT_ADD    reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    POINTCUT_SUB    reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    POINTCUT_FIRST  reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    POINTCUT_LAST   reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    POINTCUT_MIN    reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    POINTCUT_MAX    reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    AND             reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TIMES           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUS            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUS           reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LNOT            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT_CONST_DEC   reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT_CONST_OCT   reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT_CONST_HEX   reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT_CONST     reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    HEX_FLOAT_CONST reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CHAR_CONST      reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WCHAR_CONST     reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING_LITERAL  reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WSTRING_LITERAL reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SEMI            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 245 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 682

    (49) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 49 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI .)


state 683

    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 709


state 684

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 710


state 685

    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 711


state 686

    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 712


state 687

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 713


state 688

    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 714


state 689

    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 715


state 690

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 716


state 691

    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 717


state 692

    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 718


state 693

    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 719


state 694

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 720


state 695

    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 721


state 696

    (249) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN . statement
    (98) statement -> . labeled_statement
    (99) statement -> . expression_statement
    (100) statement -> . compound_statement
    (101) statement -> . selection_statement
    (102) statement -> . iteration_statement
    (103) statement -> . jump_statement
    (109) statement -> . motion_append_after_call_keyword
    (110) statement -> . motion_append_before_call_keyword
    (111) statement -> . motion_append_around_call_keyword
    (112) statement -> . motion_prepend_after_call_keyword
    (113) statement -> . motion_prepend_before_call_keyword
    (114) statement -> . motion_prepend_around_call_keyword
    (115) statement -> . motion_alwaysfirst_after_call_keyword
    (116) statement -> . motion_alwaysfirst_before_call_keyword
    (117) statement -> . motion_alwaysfirst_around_call_keyword
    (118) statement -> . motion_alwayslast_after_call_keyword
    (119) statement -> . motion_alwayslast_before_call_keyword
    (120) statement -> . motion_alwayslast_around_call_keyword
    (121) statement -> . motion_append_advice_after_call_keyword
    (122) statement -> . motion_append_advice_before_call_keyword
    (123) statement -> . motion_append_advice_around_call_keyword
    (124) statement -> . motion_prepend_advice_after_call_keyword
    (125) statement -> . motion_prepend_advice_before_call_keyword
    (126) statement -> . motion_prepend_advice_around_call_keyword
    (241) labeled_statement -> . ID COLON statement
    (242) labeled_statement -> . CASE constant_expression COLON statement
    (243) labeled_statement -> . DEFAULT COLON statement
    (256) expression_statement -> . expression_opt SEMI
    (240) compound_statement -> . brace_open block_item_list_opt brace_close
    (244) selection_statement -> . IF LPAREN expression RPAREN statement
    (245) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (246) selection_statement -> . SWITCH LPAREN expression RPAREN statement
    (247) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (248) iteration_statement -> . DO statement WHILE LPAREN expression RPAREN SEMI
    (249) iteration_statement -> . FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement
    (250) iteration_statement -> . FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement
    (251) jump_statement -> . GOTO ID SEMI
    (252) jump_statement -> . BREAK SEMI
    (253) jump_statement -> . CONTINUE SEMI
    (254) jump_statement -> . RETURN expression SEMI
    (255) jump_statement -> . RETURN SEMI
    (27) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (28) motion_append_after_call_keyword -> . MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (29) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (30) motion_append_before_call_keyword -> . MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (31) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (32) motion_append_around_call_keyword -> . MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (33) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (34) motion_prepend_after_call_keyword -> . MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (35) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (36) motion_prepend_before_call_keyword -> . MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (37) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (38) motion_prepend_around_call_keyword -> . MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (39) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (40) motion_alwaysfirst_after_call_keyword -> . MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (41) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (42) motion_alwaysfirst_before_call_keyword -> . MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (43) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (44) motion_alwaysfirst_around_call_keyword -> . MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (45) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID RPAREN SEMI
    (46) motion_alwayslast_after_call_keyword -> . MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (47) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID RPAREN SEMI
    (48) motion_alwayslast_before_call_keyword -> . MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (49) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID RPAREN SEMI
    (50) motion_alwayslast_around_call_keyword -> . MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (51) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (52) motion_append_advice_after_call_keyword -> . MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (53) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (54) motion_append_advice_before_call_keyword -> . MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (55) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (56) motion_append_advice_around_call_keyword -> . MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (57) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (58) motion_prepend_advice_after_call_keyword -> . MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (59) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (60) motion_prepend_advice_before_call_keyword -> . MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (61) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI
    (62) motion_prepend_advice_around_call_keyword -> . MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI
    (13) expression_opt -> . empty
    (14) expression_opt -> . expression
    (338) brace_open -> . LBRACE
    (340) empty -> .
    (257) expression -> . assignment_expression
    (258) expression -> . expression COMMA assignment_expression
    (260) assignment_expression -> . conditional_expression
    (261) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (274) conditional_expression -> . binary_expression
    (275) conditional_expression -> . binary_expression CONDOP expression COLON conditional_expression
    (127) unary_expression -> . pointcut_keyword
    (128) unary_expression -> . pointcut_add_keyword
    (129) unary_expression -> . pointcut_sub_keyword
    (130) unary_expression -> . pointcut_first_keyword
    (131) unary_expression -> . pointcut_last_keyword
    (132) unary_expression -> . pointcut_min_keyword
    (133) unary_expression -> . pointcut_max_keyword
    (297) unary_expression -> . postfix_expression
    (298) unary_expression -> . PLUSPLUS unary_expression
    (299) unary_expression -> . MINUSMINUS unary_expression
    (300) unary_expression -> . unary_operator cast_expression
    (301) unary_expression -> . SIZEOF unary_expression
    (302) unary_expression -> . SIZEOF LPAREN type_name RPAREN
    (276) binary_expression -> . cast_expression
    (277) binary_expression -> . binary_expression TIMES binary_expression
    (278) binary_expression -> . binary_expression DIVIDE binary_expression
    (279) binary_expression -> . binary_expression MOD binary_expression
    (280) binary_expression -> . binary_expression PLUS binary_expression
    (281) binary_expression -> . binary_expression MINUS binary_expression
    (282) binary_expression -> . binary_expression RSHIFT binary_expression
    (283) binary_expression -> . binary_expression LSHIFT binary_expression
    (284) binary_expression -> . binary_expression LT binary_expression
    (285) binary_expression -> . binary_expression LE binary_expression
    (286) binary_expression -> . binary_expression GE binary_expression
    (287) binary_expression -> . binary_expression GT binary_expression
    (288) binary_expression -> . binary_expression EQ binary_expression
    (289) binary_expression -> . binary_expression NE binary_expression
    (290) binary_expression -> . binary_expression AND binary_expression
    (291) binary_expression -> . binary_expression OR binary_expression
    (292) binary_expression -> . binary_expression XOR binary_expression
    (293) binary_expression -> . binary_expression LAND binary_expression
    (294) binary_expression -> . binary_expression LOR binary_expression
    (63) pointcut_keyword -> . POINTCUT LPAREN ID SEMI argument_expression_list RPAREN
    (64) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (65) pointcut_keyword -> . POINTCUT LPAREN ID COMMA ID RPAREN
    (66) pointcut_keyword -> . POINTCUT LPAREN ID RPAREN
    (69) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID SEMI argument_expression_list RPAREN
    (70) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (71) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID COMMA ID RPAREN
    (72) pointcut_add_keyword -> . POINTCUT_ADD LPAREN ID RPAREN
    (75) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID SEMI argument_expression_list RPAREN
    (76) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (77) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID COMMA ID RPAREN
    (78) pointcut_sub_keyword -> . POINTCUT_SUB LPAREN ID RPAREN
    (81) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID SEMI argument_expression_list RPAREN
    (82) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (83) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID COMMA ID RPAREN
    (84) pointcut_first_keyword -> . POINTCUT_FIRST LPAREN ID RPAREN
    (88) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID SEMI argument_expression_list RPAREN
    (89) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (90) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID COMMA ID RPAREN
    (91) pointcut_last_keyword -> . POINTCUT_LAST LPAREN ID RPAREN
    (93) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID SEMI argument_expression_list RPAREN
    (94) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (95) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID COMMA ID RPAREN
    (96) pointcut_min_keyword -> . POINTCUT_MIN LPAREN ID RPAREN
    (104) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID SEMI argument_expression_list RPAREN
    (105) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID SEMI argument_expression_list RPAREN
    (106) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID COMMA ID RPAREN
    (107) pointcut_max_keyword -> . POINTCUT_MAX LPAREN ID RPAREN
    (309) postfix_expression -> . primary_expression
    (310) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (311) postfix_expression -> . postfix_expression LPAREN argument_expression_list RPAREN
    (312) postfix_expression -> . postfix_expression LPAREN RPAREN
    (313) postfix_expression -> . postfix_expression PERIOD identifier
    (314) postfix_expression -> . postfix_expression ARROW identifier
    (315) postfix_expression -> . postfix_expression PLUSPLUS
    (316) postfix_expression -> . postfix_expression MINUSMINUS
    (317) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list brace_close
    (318) postfix_expression -> . LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close
    (303) unary_operator -> . AND
    (304) unary_operator -> . TIMES
    (305) unary_operator -> . PLUS
    (306) unary_operator -> . MINUS
    (307) unary_operator -> . NOT
    (308) unary_operator -> . LNOT
    (295) cast_expression -> . unary_expression
    (296) cast_expression -> . LPAREN type_name RPAREN cast_expression
    (319) primary_expression -> . identifier
    (320) primary_expression -> . constant
    (321) primary_expression -> . unified_string_literal
    (322) primary_expression -> . unified_wstring_literal
    (323) primary_expression -> . LPAREN expression RPAREN
    (326) identifier -> . ID
    (327) constant -> . INT_CONST_DEC
    (328) constant -> . INT_CONST_OCT
    (329) constant -> . INT_CONST_HEX
    (330) constant -> . FLOAT_CONST
    (331) constant -> . HEX_FLOAT_CONST
    (332) constant -> . CHAR_CONST
    (333) constant -> . WCHAR_CONST
    (334) unified_string_literal -> . STRING_LITERAL
    (335) unified_string_literal -> . unified_string_literal STRING_LITERAL
    (336) unified_wstring_literal -> . WSTRING_LITERAL
    (337) unified_wstring_literal -> . unified_wstring_literal WSTRING_LITERAL

    ID              shift and go to state 317
    CASE            shift and go to state 298
    DEFAULT         shift and go to state 293
    IF              shift and go to state 318
    SWITCH          shift and go to state 300
    WHILE           shift and go to state 295
    DO              shift and go to state 311
    FOR             shift and go to state 285
    GOTO            shift and go to state 267
    BREAK           shift and go to state 306
    CONTINUE        shift and go to state 289
    RETURN          shift and go to state 296
    MOTION_APPEND_AFTER_CALL shift and go to state 263
    MOTION_APPEND_BEFORE_CALL shift and go to state 280
    MOTION_APPEND_AROUND_CALL shift and go to state 272
    MOTION_PREPEND_AFTER_CALL shift and go to state 294
    MOTION_PREPEND_BEFORE_CALL shift and go to state 314
    MOTION_PREPEND_AROUND_CALL shift and go to state 303
    MOTION_ALWAYSFIRST_AFTER_CALL shift and go to state 310
    MOTION_ALWAYSFIRST_BEFORE_CALL shift and go to state 315
    MOTION_ALWAYSFIRST_AROUND_CALL shift and go to state 282
    MOTION_ALWAYSLAST_AFTER_CALL shift and go to state 286
    MOTION_ALWAYSLAST_BEFORE_CALL shift and go to state 299
    MOTION_ALWAYSLAST_AROUND_CALL shift and go to state 320
    MOTION_APPEND_ADVICE_AFTER_CALL shift and go to state 312
    MOTION_APPEND_ADVICE_BEFORE_CALL shift and go to state 261
    MOTION_APPEND_ADVICE_AROUND_CALL shift and go to state 277
    MOTION_PREPEND_ADVICE_AFTER_CALL shift and go to state 271
    MOTION_PREPEND_ADVICE_BEFORE_CALL shift and go to state 283
    MOTION_PREPEND_ADVICE_AROUND_CALL shift and go to state 287
    LBRACE          shift and go to state 55
    SEMI            reduce using rule 340 (empty -> .)
    PLUSPLUS        shift and go to state 117
    MINUSMINUS      shift and go to state 123
    SIZEOF          shift and go to state 101
    POINTCUT        shift and go to state 134
    POINTCUT_ADD    shift and go to state 125
    POINTCUT_SUB    shift and go to state 109
    POINTCUT_FIRST  shift and go to state 136
    POINTCUT_LAST   shift and go to state 94
    POINTCUT_MIN    shift and go to state 129
    POINTCUT_MAX    shift and go to state 92
    LPAREN          shift and go to state 122
    AND             shift and go to state 127
    TIMES           shift and go to state 192
    PLUS            shift and go to state 114
    MINUS           shift and go to state 102
    NOT             shift and go to state 138
    LNOT            shift and go to state 96
    INT_CONST_DEC   shift and go to state 128
    INT_CONST_OCT   shift and go to state 133
    INT_CONST_HEX   shift and go to state 119
    FLOAT_CONST     shift and go to state 98
    HEX_FLOAT_CONST shift and go to state 131
    CHAR_CONST      shift and go to state 95
    WCHAR_CONST     shift and go to state 97
    STRING_LITERAL  shift and go to state 126
    WSTRING_LITERAL shift and go to state 99

    expression_statement           shift and go to state 259
    pointcut_last_keyword          shift and go to state 91
    pointcut_min_keyword           shift and go to state 105
    motion_alwayslast_around_call_keyword shift and go to state 275
    unary_expression               shift and go to state 93
    motion_prepend_around_call_keyword shift and go to state 276
    unified_wstring_literal        shift and go to state 135
    motion_prepend_advice_after_call_keyword shift and go to state 292
    unary_operator                 shift and go to state 110
    iteration_statement            shift and go to state 262
    motion_prepend_after_call_keyword shift and go to state 297
    assignment_expression          shift and go to state 210
    pointcut_add_keyword           shift and go to state 104
    compound_statement             shift and go to state 279
    selection_statement            shift and go to state 260
    unified_string_literal         shift and go to state 106
    cast_expression                shift and go to state 111
    postfix_expression             shift and go to state 107
    motion_append_before_call_keyword shift and go to state 264
    statement                      shift and go to state 722
    pointcut_max_keyword           shift and go to state 118
    motion_alwayslast_after_call_keyword shift and go to state 265
    motion_append_advice_before_call_keyword shift and go to state 266
    constant                       shift and go to state 100
    pointcut_first_keyword         shift and go to state 103
    motion_prepend_advice_before_call_keyword shift and go to state 313
    motion_append_around_call_keyword shift and go to state 302
    motion_alwaysfirst_around_call_keyword shift and go to state 284
    identifier                     shift and go to state 116
    motion_append_advice_after_call_keyword shift and go to state 268
    motion_prepend_before_call_keyword shift and go to state 269
    motion_prepend_advice_around_call_keyword shift and go to state 281
    expression_opt                 shift and go to state 270
    primary_expression             shift and go to state 121
    jump_statement                 shift and go to state 305
    motion_append_advice_around_call_keyword shift and go to state 290
    binary_expression              shift and go to state 130
    motion_alwaysfirst_before_call_keyword shift and go to state 319
    pointcut_keyword               shift and go to state 132
    labeled_statement              shift and go to state 273
    pointcut_sub_keyword           shift and go to state 112
    motion_append_after_call_keyword shift and go to state 274
    empty                          shift and go to state 408
    brace_open                     shift and go to state 159
    motion_alwayslast_before_call_keyword shift and go to state 309
    conditional_expression         shift and go to state 137
    motion_alwaysfirst_after_call_keyword shift and go to state 278
    expression                     shift and go to state 291

state 697

    (250) iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .

    ID              reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    CASE            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    DEFAULT         reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    IF              reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    SWITCH          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    WHILE           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    DO              reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    FOR             reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    GOTO            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    BREAK           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    CONTINUE        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    RETURN          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    LBRACE          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    CONST           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    RESTRICT        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    VOLATILE        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    VOID            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    _BOOL           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    CHAR            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    SHORT           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    INT             reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    LONG            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    FLOAT           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    DOUBLE          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    _COMPLEX        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    SIGNED          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    UNSIGNED        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    AUTO            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    REGISTER        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    STATIC          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    EXTERN          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    TYPEDEF         reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    INLINE          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    TYPEID          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    ENUM            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    STRUCT          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    UNION           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    PLUSPLUS        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MINUSMINUS      reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    SIZEOF          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT        reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_ADD    reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_SUB    reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_FIRST  reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_LAST   reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_MIN    reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_MAX    reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    LPAREN          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    AND             reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    TIMES           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    PLUS            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    MINUS           reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    NOT             reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    LNOT            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    INT_CONST_DEC   reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    INT_CONST_OCT   reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    INT_CONST_HEX   reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    FLOAT_CONST     reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    HEX_FLOAT_CONST reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    CHAR_CONST      reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    WCHAR_CONST     reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    STRING_LITERAL  reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    WSTRING_LITERAL reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    SEMI            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    RBRACE          reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)
    ELSE            reduce using rule 250 (iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement .)


state 698

    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 723


state 699

    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 724


state 700

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 725


state 701

    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 726


state 702

    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 727


state 703

    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 728


state 704

    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 729


state 705

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 730


state 706

    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID COMMA ID RPAREN SEMI

    ID              shift and go to state 731


state 707

    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 732


state 708

    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 733


state 709

    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 734


state 710

    (53) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 53 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)


state 711

    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 735


state 712

    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 736


state 713

    (57) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 57 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)


state 714

    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 737


state 715

    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 738


state 716

    (55) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 55 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)


state 717

    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 739


state 718

    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 740


state 719

    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 741


state 720

    (59) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 59 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)


state 721

    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 742


state 722

    (249) iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .

    ID              reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CASE            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    DEFAULT         reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    IF              reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SWITCH          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    WHILE           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    DO              reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    FOR             reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    GOTO            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    BREAK           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CONTINUE        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    RETURN          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_AFTER_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_AROUND_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    LBRACE          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CONST           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    RESTRICT        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    VOLATILE        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    VOID            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    _BOOL           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CHAR            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SHORT           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    INT             reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    LONG            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    FLOAT           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    DOUBLE          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    _COMPLEX        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SIGNED          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    UNSIGNED        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    AUTO            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    REGISTER        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    STATIC          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    EXTERN          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    TYPEDEF         reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    INLINE          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    TYPEID          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    ENUM            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    STRUCT          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    UNION           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    PLUSPLUS        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MINUSMINUS      reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SIZEOF          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT        reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_ADD    reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_SUB    reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_FIRST  reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_LAST   reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_MIN    reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    POINTCUT_MAX    reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    LPAREN          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    AND             reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    TIMES           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    PLUS            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    MINUS           reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    NOT             reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    LNOT            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    INT_CONST_DEC   reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    INT_CONST_OCT   reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    INT_CONST_HEX   reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    FLOAT_CONST     reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    HEX_FLOAT_CONST reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    CHAR_CONST      reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    WCHAR_CONST     reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    STRING_LITERAL  reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    WSTRING_LITERAL reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    SEMI            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    RBRACE          reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)
    ELSE            reduce using rule 249 (iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement .)


state 723

    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 743


state 724

    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 744


state 725

    (61) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 61 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)


state 726

    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 745


state 727

    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 746


state 728

    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 747


state 729

    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 748


state 730

    (51) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 51 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID RPAREN SEMI .)


state 731

    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . COMMA ID RPAREN SEMI

    COMMA           shift and go to state 749


state 732

    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 750


state 733

    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 751


state 734

    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 752


state 735

    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 753


state 736

    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 754


state 737

    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 755


state 738

    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 756


state 739

    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 757


state 740

    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 758


state 741

    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 759


state 742

    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 760


state 743

    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 761


state 744

    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 762


state 745

    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 763


state 746

    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 764


state 747

    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 765


state 748

    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 766


state 749

    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA . ID RPAREN SEMI

    ID              shift and go to state 767


state 750

    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 768


state 751

    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 769


state 752

    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 770


state 753

    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 771


state 754

    (28) motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 28 (motion_append_after_call_keyword -> MOTION_APPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 755

    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 772


state 756

    (32) motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 32 (motion_append_around_call_keyword -> MOTION_APPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 757

    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 773


state 758

    (30) motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 30 (motion_append_before_call_keyword -> MOTION_APPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 759

    (44) motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 44 (motion_alwaysfirst_around_call_keyword -> MOTION_ALWAYSFIRST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 760

    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 774


state 761

    (46) motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 46 (motion_alwayslast_after_call_keyword -> MOTION_ALWAYSLAST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 762

    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 775


state 763

    (34) motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 34 (motion_prepend_after_call_keyword -> MOTION_PREPEND_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 764

    (48) motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 48 (motion_alwayslast_before_call_keyword -> MOTION_ALWAYSLAST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 765

    (38) motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 38 (motion_prepend_around_call_keyword -> MOTION_PREPEND_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 766

    (40) motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 40 (motion_alwaysfirst_after_call_keyword -> MOTION_ALWAYSFIRST_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 767

    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID . RPAREN SEMI

    RPAREN          shift and go to state 776


state 768

    (36) motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 36 (motion_prepend_before_call_keyword -> MOTION_PREPEND_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 769

    (42) motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 42 (motion_alwaysfirst_before_call_keyword -> MOTION_ALWAYSFIRST_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 770

    (50) motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 50 (motion_alwayslast_around_call_keyword -> MOTION_ALWAYSLAST_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 771

    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 777


state 772

    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 778


state 773

    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 779


state 774

    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 780


state 775

    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 781


state 776

    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN . SEMI

    SEMI            shift and go to state 782


state 777

    (54) motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 54 (motion_append_advice_before_call_keyword -> MOTION_APPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 778

    (58) motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    WHILE           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ID              reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 58 (motion_prepend_advice_after_call_keyword -> MOTION_PREPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 779

    (56) motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 56 (motion_append_advice_around_call_keyword -> MOTION_APPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 780

    (60) motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 60 (motion_prepend_advice_before_call_keyword -> MOTION_PREPEND_ADVICE_BEFORE_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 781

    (62) motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 62 (motion_prepend_advice_around_call_keyword -> MOTION_PREPEND_ADVICE_AROUND_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)


state 782

    (52) motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .

    ID              reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CASE            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DEFAULT         reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    IF              reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SWITCH          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WHILE           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DO              reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FOR             reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    GOTO            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    BREAK           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONTINUE        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RETURN          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AFTER_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_BEFORE_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_AROUND_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AFTER_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_BEFORE_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_AROUND_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AFTER_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_BEFORE_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSFIRST_AROUND_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AFTER_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_BEFORE_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_ALWAYSLAST_AROUND_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AFTER_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_BEFORE_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_APPEND_ADVICE_AROUND_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AFTER_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_BEFORE_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MOTION_PREPEND_ADVICE_AROUND_CALL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LBRACE          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CONST           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RESTRICT        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOLATILE        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    VOID            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _BOOL           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SHORT           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT             reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LONG            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    DOUBLE          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    _COMPLEX        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIGNED          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNSIGNED        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AUTO            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    REGISTER        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STATIC          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    EXTERN          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEDEF         reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INLINE          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TYPEID          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ENUM            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRUCT          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    UNION           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUSPLUS        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUSMINUS      reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SIZEOF          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT        reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_ADD    reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_SUB    reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_FIRST  reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_LAST   reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MIN    reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    POINTCUT_MAX    reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LPAREN          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    AND             reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    TIMES           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    PLUS            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    MINUS           reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    NOT             reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    LNOT            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_DEC   reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_OCT   reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    INT_CONST_HEX   reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    HEX_FLOAT_CONST reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    CHAR_CONST      reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WCHAR_CONST     reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    STRING_LITERAL  reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    WSTRING_LITERAL reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    SEMI            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    RBRACE          reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)
    ELSE            reduce using rule 52 (motion_append_advice_after_call_keyword -> MOTION_APPEND_ADVICE_AFTER_CALL LPAREN ID COMMA ID COMMA ID COMMA ID COMMA ID RPAREN SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 599 resolved as shift
