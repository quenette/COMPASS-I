(define aobj01   '())
(define abname01 "ab01")
(define alpha01  "alpha01")
(define pcd01    (list 'and (list 'pcall "func-a") (list 'args '())))
(define m01      (list 'motion aobj01 alpha01 pcd01 abname01 '() '() '()))

(define aobj02   '())
(define abname02 "ab02")
(define alpha02  "alpha02")
(define pcd02    (list 'and (list 'pcall "func-b") (list 'args '())))
(define m02      (list 'motion aobj02 alpha02 pcd02 abname02 abname01 'first 'always))

(define aobj03   '())
(define abname03 "ab03")
(define alpha03  "alpha03")
(define pcd03    (list 'and (list 'pcall "func-a") (list 'args '())))
(define m03      (list 'motion aobj03 alpha03 pcd03 abname03 '() '() '()))

(define aobj04   '())
(define abname04 "ab04")
(define alpha04  "alpha04")
(define pcd04    (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z"))))
(define m04      (list 'motion aobj04 alpha04 pcd04 abname04 '() '() '()))

(define aobj05   '())
(define abname05 "ab05")
(define alpha05  "alpha05")
(define pcd05    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m05      (list 'motion aobj05 alpha05 pcd05 abname05 '() '() 'always))

(define aobj06   '())
(define abname06 "ab06")
(define alpha06  "alpha06")
(define pcd06    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m06      (list 'motion aobj06 alpha06 pcd06 abname06 '() '() '()))

(define aobj07   '())
(define abname07 "ab07")
(define alpha07  "alpha07")
(define pcd07    (list 'ac "func-a"))
(define m07      (list 'motion aobj07 alpha07 pcd07 abname07 '() '() '()))

(define aobj08   '())
(define abname08 "ab08")
(define alpha08  "alpha08")
(define pcd08    (list 'ac "func-a"))
(define m08      (list 'motion aobj08 alpha08 pcd08 abname08 '() '() '()))

(define aobj09   '())
(define abname09 "ab09")
(define alpha09  "alpha09")
(define pcd09    (list 'ac "func-b"))
(define m09      (list 'motion aobj09 alpha09 pcd09 abname09 '() '() '()))

(define aobj10   '())
(define abname10 "ab10")
(define alpha10  "alpha10")
(define pcd10    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m10      (list 'motion aobj10 alpha10 pcd10 abname10 '() 'first 'always))

(define aobj11   '())
(define abname11 "ab11")
(define alpha11  "alpha11")
(define pcd11    (list 'and (list 'obj 10002) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m11      (list 'motion aobj11 alpha11 pcd11 abname11 '() '() 'always))

(define aobj12   '())
(define abname12 "ab12")
(define alpha12  "alpha12")
(define pcd12    (list 'and (list 'obj 10002) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m12      (list 'motion aobj12 alpha12 pcd12 abname12 '() 'first 'always))

(define aobj13   '())
(define abname13 "ab13")
(define alpha13  "alpha13")
(define pcd13    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m13      (list 'motion aobj13 alpha13 pcd13 abname13 '() 'first 'always))


(define aobj14   '())
(define abname14 "ab14")
(define alpha14  "alpha14")
(define pcd14    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-b") (list 'args (list "x" "y" "z")))))
(define m14      (list 'motion aobj14 alpha14 pcd14 abname14 '() '() '()))

(define aobj15   '())
(define abname15 "ab15")
(define alpha15  "alpha15")
(define pcd15    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-c") (list 'args (list "x" "y" "z")))))
(define m15      (list 'motion aobj15 alpha15 pcd15 abname15 '() '() '()))

(define aobj16   '())
(define abname16 "ab16")
(define alpha16  "alpha16")
(define pcd16    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-c") (list 'args (list "x" "y" "z")))))
(define m16      (list 'motion aobj16 alpha16 pcd16 abname16 abname15 'first '()))

(define aobj17   '())
(define abname17 "ab17")
(define alpha17  "alpha17")
(define pcd17    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-c") (list 'args (list "x" "y" "z")))))
(define m17      (list 'motion aobj17 alpha17 pcd17 abname17 abname15 '() '()))

(define aobj18   '())
(define abname18 "ab18")
(define alpha18  "alpha18")
(define pcd18    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-b") (list 'args (list "x" "y" "z")))))
(define m18      (list 'motion aobj18 alpha18 pcd18 abname18 abname14 'first '()))

(define aobj19   '())
(define abname19 "ab19")
(define alpha19  "alpha19")
(define pcd19    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-b") (list 'args (list "x" "y" "z")))))
(define m19      (list 'motion aobj19 alpha19 pcd19 abname19 abname14 '() '()))

(define aobj20   '())
(define abname20 "ab20")
(define alpha20  "alpha20")
(define pcd20    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m20      (list 'motion aobj20 alpha20 pcd20 abname20 abname06 'first '()))

(define aobj21   '())
(define abname21 "ab21")
(define alpha21  "alpha21")
(define pcd21    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-a") (list 'args (list "x" "y" "z")))))
(define m21      (list 'motion aobj21 alpha21 pcd21 abname21 abname06 '() '()))

(define aobj22   '())
(define abname22 "ab22")
(define alpha22  "alpha22")
(define pcd22    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-b") (list 'args (list "x" "y" "z")))))
(define m22      (list 'motion aobj22 alpha22 pcd22 abname22 abname14 '() '()))

(define aobj23   '())
(define abname23 "ab23")
(define alpha23  "alpha23")
(define pcd23    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-b") (list 'args (list "x" "y" "z")))))
(define m23      (list 'motion aobj23 alpha23 pcd23 abname23 abname14 'first '()))

(define aobj24   '())
(define abname24 "ab24")
(define alpha24  "alpha24")
(define pcd24    (list 'and (list 'obj 10001) (list 'and (list 'pcall "func-d") (list 'args (list "x" "y" "z")))))
(define m24      (list 'motion aobj24 alpha24 pcd24 abname24 abname01 '() '()))

